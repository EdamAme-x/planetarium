console.warn('run three.js'),
/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */ function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE={})}(this,function(e){"use strict";let t="srgb",i="srgb-linear",n="display-p3",r="300 es";class s{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});let i=this._listeners;void 0===i[e]&&(i[e]=[]),-1===i[e].indexOf(t)&&i[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;let i=this._listeners;return void 0!==i[e]&&-1!==i[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;let i=this._listeners,n=i[e];if(void 0!==n){let r=n.indexOf(t);-1!==r&&n.splice(r,1)}}dispatchEvent(e){if(void 0===this._listeners)return;let t=this._listeners,i=t[e.type];if(void 0!==i){e.target=this;let n=i.slice(0);for(let r=0,s=n.length;r<s;r++)n[r].call(this,e);e.target=null}}}let a=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],o=1234567,l=Math.PI/180,h=180/Math.PI;function u(){let e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=a[255&e]+a[e>>8&255]+a[e>>16&255]+a[e>>24&255]+"-"+a[255&t]+a[t>>8&255]+"-"+a[t>>16&15|64]+a[t>>24&255]+"-"+a[63&i|128]+a[i>>8&255]+"-"+a[i>>16&255]+a[i>>24&255]+a[255&n]+a[n>>8&255]+a[n>>16&255]+a[n>>24&255];return r.toLowerCase()}function c(e,t,i){return Math.max(t,Math.min(i,e))}function d(e,t){return(e%t+t)%t}function p(e,t,i){return(1-i)*e+i*t}function f(e){return e*l}function m(e){return e*h}function $(e){return(e&e-1)==0&&0!==e}function g(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function v(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function x(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return e/4294967295;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int32Array:return Math.max(e/2147483647,-1);case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw Error("Invalid component type.")}}function y(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return Math.round(4294967295*e);case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int32Array:return Math.round(2147483647*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw Error("Invalid component type.")}}class S{constructor(e=0,t=0){S.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){let e=Math.atan2(-this.y,-this.x)+Math.PI;return e}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;let i=this.dot(e)/t;return Math.acos(c(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let i=Math.cos(t),n=Math.sin(t),r=this.x-e.x,s=this.y-e.y;return this.x=r*i-s*n+e.x,this.y=r*n+s*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class _{constructor(e,t,i,n,r,s,a,o,l){_.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==e&&this.set(e,t,i,n,r,s,a,o,l)}set(e,t,i,n,r,s,a,o,l){let h=this.elements;return h[0]=e,h[1]=n,h[2]=a,h[3]=t,h[4]=r,h[5]=o,h[6]=i,h[7]=s,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,n=t.elements,r=this.elements,s=i[0],a=i[3],o=i[6],l=i[1],h=i[4],u=i[7],c=i[2],d=i[5],p=i[8],f=n[0],m=n[3],$=n[6],g=n[1],v=n[4],x=n[7],y=n[2],S=n[5],_=n[8];return r[0]=s*f+a*g+o*y,r[3]=s*m+a*v+o*S,r[6]=s*$+a*x+o*_,r[1]=l*f+h*g+u*y,r[4]=l*m+h*v+u*S,r[7]=l*$+h*x+u*_,r[2]=c*f+d*g+p*y,r[5]=c*m+d*v+p*S,r[8]=c*$+d*x+p*_,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],h=e[8];return t*s*h-t*a*l-i*r*h+i*a*o+n*r*l-n*s*o}invert(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],h=e[8],u=h*s-a*l,c=a*o-h*r,d=l*r-s*o,p=t*u+i*c+n*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);let f=1/p;return e[0]=u*f,e[1]=(n*l-h*i)*f,e[2]=(a*i-n*s)*f,e[3]=c*f,e[4]=(h*t-n*o)*f,e[5]=(n*r-a*t)*f,e[6]=d*f,e[7]=(i*o-l*t)*f,e[8]=(s*t-i*r)*f,this}transpose(){let e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,r,s,a){let o=Math.cos(r),l=Math.sin(r);return this.set(i*o,i*l,-i*(o*s+l*a)+s+e,-n*l,n*o,-n*(-l*s+o*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(b.makeScale(e,t)),this}rotate(e){return this.premultiply(b.makeRotation(-e)),this}translate(e,t){return this.premultiply(b.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){let t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}let b=new _;function M(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}let E={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function T(e,t){return new E[e](t)}function w(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}let A={};function R(e){e in A||(A[e]=!0,console.warn(e))}function C(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function L(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}let P=new _().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-.0000001,1e-7,.9105199]),I=new _().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]),U={[i]:e=>e,[t]:e=>e.convertSRGBToLinear(),[n]:function e(t){return t.convertSRGBToLinear().applyMatrix3(I)}},D={[i]:e=>e,[t]:e=>e.convertLinearToSRGB(),[n]:function e(t){return t.applyMatrix3(P).convertLinearToSRGB()}},N={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(legacyMode){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!legacyMode},get workingColorSpace(){return i},set workingColorSpace(colorSpace){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,t,i){if(!1===this.enabled||t===i||!t||!i)return e;let n=U[t],r=D[i];if(void 0===n||void 0===r)throw Error(`Unsupported color space conversion, "${t}" to "${i}".`);return r(n(e))},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)}},F;class O{static getDataURL(e){if(/^data:/i.test(e.src)||"undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===F&&(F=w("canvas")),F.width=e.width,F.height=e.height;let i=F.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=F}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let t=w("canvas");t.width=e.width,t.height=e.height;let i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);let n=i.getImageData(0,0,e.width,e.height),r=n.data;for(let s=0;s<r.length;s++)r[s]=255*C(r[s]/255);return i.putImageData(n,0,0),t}if(!e.data)return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e;{let a=e.data.slice(0);for(let o=0;o<a.length;o++)a instanceof Uint8Array||a instanceof Uint8ClampedArray?a[o]=Math.floor(255*C(a[o]/255)):a[o]=C(a[o]);return{data:a,width:e.width,height:e.height}}}}let B=0;class z{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:B++}),this.uuid=u(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];let i={uuid:this.uuid,url:""},n=this.data;if(null!==n){let r;if(Array.isArray(n)){r=[];for(let s=0,a=n.length;s<a;s++)n[s].isDataTexture?r.push(G(n[s].image)):r.push(G(n[s]))}else r=G(n);i.url=r}return t||(e.images[this.uuid]=i),i}}function G(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?O.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let H=0;class k extends s{constructor(e=k.DEFAULT_IMAGE,i=k.DEFAULT_MAPPING,n=1001,r=1001,s=1006,a=1008,o=1023,l=1009,h=k.DEFAULT_ANISOTROPY,c=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:H++}),this.uuid=u(),this.name="",this.source=new z(e),this.mipmaps=[],this.mapping=i,this.channel=0,this.wrapS=n,this.wrapT=r,this.magFilter=s,this.minFilter=a,this.anisotropy=h,this.format=o,this.internalFormat=null,this.type=l,this.offset=new S(0,0),this.repeat=new S(1,1),this.center=new S(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new _,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,"string"==typeof c?this.colorSpace=c:(R("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=3001===c?t:""),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];let i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case 1e3:e.x=e.x-Math.floor(e.x);break;case 1001:e.x=e.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case 1e3:e.y=e.y-Math.floor(e.y);break;case 1001:e.y=e.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return R("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===t?3001:3e3}set encoding(e){R("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=3001===e?t:""}}k.DEFAULT_IMAGE=null,k.DEFAULT_MAPPING=300,k.DEFAULT_ANISOTROPY=1;class V{constructor(e=0,t=0,i=0,n=1){V.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,i=this.y,n=this.z,r=this.w,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*n+s[12]*r,this.y=s[1]*t+s[5]*i+s[9]*n+s[13]*r,this.z=s[2]*t+s[6]*i+s[10]*n+s[14]*r,this.w=s[3]*t+s[7]*i+s[11]*n+s[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,r,s=e.elements,a=s[0],o=s[4],l=s[8],h=s[1],u=s[5],c=s[9],d=s[2],p=s[6],f=s[10];if(.01>Math.abs(o-h)&&.01>Math.abs(l-d)&&.01>Math.abs(c-p)){if(.1>Math.abs(o+h)&&.1>Math.abs(l+d)&&.1>Math.abs(c+p)&&.1>Math.abs(a+u+f-3))return this.set(1,0,0,0),this;t=Math.PI;let m=(a+1)/2,$=(u+1)/2,g=(f+1)/2,v=(o+h)/4,x=(l+d)/4,y=(c+p)/4;return m>$&&m>g?m<.01?(i=0,n=.707106781,r=.707106781):(n=v/(i=Math.sqrt(m)),r=x/i):$>g?$<.01?(i=.707106781,n=0,r=.707106781):(i=v/(n=Math.sqrt($)),r=y/n):g<.01?(i=.707106781,n=.707106781,r=0):(i=x/(r=Math.sqrt(g)),n=y/r),this.set(i,n,r,t),this}let S=Math.sqrt((p-c)*(p-c)+(l-d)*(l-d)+(h-o)*(h-o));return .001>Math.abs(S)&&(S=1),this.x=(p-c)/S,this.y=(l-d)/S,this.z=(h-o)/S,this.w=Math.acos((a+u+f-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class W extends s{constructor(e=1,i=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=i,this.depth=1,this.scissor=new V(0,0,e,i),this.scissorTest=!1,this.viewport=new V(0,0,e,i),void 0!==n.encoding&&(R("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=3001===n.encoding?t:""),this.texture=new k({width:e,height:i,depth:1},n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:1006,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null,this.samples=void 0!==n.samples?n.samples:0}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;let t=Object.assign({},e.texture.image);return this.texture.source=new z(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class X extends k{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class j extends k{constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class q{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,r,s,a){let o=i[n+0],l=i[n+1],h=i[n+2],u=i[n+3],c=r[s+0],d=r[s+1],p=r[s+2],f=r[s+3];if(0===a){e[t+0]=o,e[t+1]=l,e[t+2]=h,e[t+3]=u;return}if(1===a){e[t+0]=c,e[t+1]=d,e[t+2]=p,e[t+3]=f;return}if(u!==f||o!==c||l!==d||h!==p){let m=1-a,$=o*c+l*d+h*p+u*f,g=$>=0?1:-1,v=1-$*$;if(v>Number.EPSILON){let x=Math.sqrt(v),y=Math.atan2(x,$*g);m=Math.sin(m*y)/x,a=Math.sin(a*y)/x}let S=a*g;if(o=o*m+c*S,l=l*m+d*S,h=h*m+p*S,u=u*m+f*S,m===1-a){let _=1/Math.sqrt(o*o+l*l+h*h+u*u);o*=_,l*=_,h*=_,u*=_}}e[t]=o,e[t+1]=l,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,i,n,r,s){let a=i[n],o=i[n+1],l=i[n+2],h=i[n+3],u=r[s],c=r[s+1],d=r[s+2],p=r[s+3];return e[t]=a*p+h*u+o*d-l*c,e[t+1]=o*p+h*c+l*u-a*d,e[t+2]=l*p+h*d+a*c-o*u,e[t+3]=h*p-a*u-o*c-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){let i=e._x,n=e._y,r=e._z,s=e._order,a=Math.cos,o=Math.sin,l=a(i/2),h=a(n/2),u=a(r/2),c=o(i/2),d=o(n/2),p=o(r/2);switch(s){case"XYZ":this._x=c*h*u+l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u-c*d*p;break;case"YXZ":this._x=c*h*u+l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u+c*d*p;break;case"ZXY":this._x=c*h*u-l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u-c*d*p;break;case"ZYX":this._x=c*h*u-l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u+c*d*p;break;case"YZX":this._x=c*h*u+l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u-c*d*p;break;case"XZY":this._x=c*h*u-l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u+c*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){let i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){let t=e.elements,i=t[0],n=t[4],r=t[8],s=t[1],a=t[5],o=t[9],l=t[2],h=t[6],u=t[10],c=i+a+u;if(c>0){let d=.5/Math.sqrt(c+1);this._w=.25/d,this._x=(h-o)*d,this._y=(r-l)*d,this._z=(s-n)*d}else if(i>a&&i>u){let p=2*Math.sqrt(1+i-a-u);this._w=(h-o)/p,this._x=.25*p,this._y=(n+s)/p,this._z=(r+l)/p}else if(a>u){let f=2*Math.sqrt(1+a-i-u);this._w=(r-l)/f,this._x=(n+s)/f,this._y=.25*f,this._z=(o+h)/f}else{let m=2*Math.sqrt(1+u-i-a);this._w=(s-n)/m,this._x=(r+l)/m,this._y=(o+h)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(c(this.dot(e),-1,1)))}rotateTowards(e,t){let i=this.angleTo(e);return 0===i||this.slerp(e,Math.min(1,t/i)),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){let i=e._x,n=e._y,r=e._z,s=e._w,a=t._x,o=t._y,l=t._z,h=t._w;return this._x=i*h+s*a+n*l-r*o,this._y=n*h+s*o+r*a-i*l,this._z=r*h+s*l+i*o-n*a,this._w=s*h-i*a-n*o-r*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);let i=this._x,n=this._y,r=this._z,s=this._w,a=s*e._w+i*e._x+n*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=s,this._x=i,this._y=n,this._z=r,this;let o=1-a*a;if(o<=Number.EPSILON){let l=1-t;return this._w=l*s+t*this._w,this._x=l*i+t*this._x,this._y=l*n+t*this._y,this._z=l*r+t*this._z,this.normalize(),this._onChangeCallback(),this}let h=Math.sqrt(o),u=Math.atan2(h,a),c=Math.sin((1-t)*u)/h,d=Math.sin(t*u)/h;return this._w=s*c+this._w*d,this._x=i*c+this._x*d,this._y=n*c+this._y*d,this._z=r*c+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){let e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),n=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(n),i*Math.sin(r),i*Math.cos(r),t*Math.sin(n))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Y{constructor(e=0,t=0,i=0){Y.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return void 0===i&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(J.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(J.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6]*n,this.y=r[1]*t+r[4]*i+r[7]*n,this.z=r[2]*t+r[5]*i+r[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,i=this.y,n=this.z,r=e.elements,s=1/(r[3]*t+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*t+r[4]*i+r[8]*n+r[12])*s,this.y=(r[1]*t+r[5]*i+r[9]*n+r[13])*s,this.z=(r[2]*t+r[6]*i+r[10]*n+r[14])*s,this}applyQuaternion(e){let t=this.x,i=this.y,n=this.z,r=e.x,s=e.y,a=e.z,o=e.w,l=o*t+s*n-a*i,h=o*i+a*t-r*n,u=o*n+r*i-s*t,c=-r*t-s*i-a*n;return this.x=l*o+-(c*r)+-(h*a)- -(u*s),this.y=h*o+-(c*s)+-(u*r)- -(l*a),this.z=u*o+-(c*a)+-(l*s)- -(h*r),this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){let t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n,this.y=r[1]*t+r[5]*i+r[9]*n,this.z=r[2]*t+r[6]*i+r[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){let i=e.x,n=e.y,r=e.z,s=t.x,a=t.y,o=t.z;return this.x=n*o-r*a,this.y=r*s-i*o,this.z=i*a-n*s,this}projectOnVector(e){let t=e.lengthSq();if(0===t)return this.set(0,0,0);let i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Z.copy(this).projectOnVector(e),this.sub(Z)}reflect(e){return this.sub(Z.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;let i=this.dot(e)/t;return Math.acos(c(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){let n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}let Z=new Y,J=new q;class K{constructor(e=new Y(Infinity,Infinity,Infinity),t=new Y(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(ee.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(ee.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let i=ee.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),void 0!==e.boundingBox)null===e.boundingBox&&e.computeBoundingBox(),et.copy(e.boundingBox),et.applyMatrix4(e.matrixWorld),this.union(et);else{let i=e.geometry;if(void 0!==i){if(t&&void 0!==i.attributes&&void 0!==i.attributes.position){let n=i.attributes.position;for(let r=0,s=n.count;r<s;r++)ee.fromBufferAttribute(n,r).applyMatrix4(e.matrixWorld),this.expandByPoint(ee)}else null===i.boundingBox&&i.computeBoundingBox(),et.copy(i.boundingBox),et.applyMatrix4(e.matrixWorld),this.union(et)}}let a=e.children;for(let o=0,l=a.length;o<l;o++)this.expandByObject(a[o],t);return this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)&&!(e.z<this.min.z)&&!(e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)&&!(e.max.z<this.min.z)&&!(e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,ee),ee.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(el),eh.subVectors(this.max,el),ei.subVectors(e.a,el),en.subVectors(e.b,el),er.subVectors(e.c,el),es.subVectors(en,ei),ea.subVectors(er,en),eo.subVectors(ei,er);let t=[0,-es.z,es.y,0,-ea.z,ea.y,0,-eo.z,eo.y,es.z,0,-es.x,ea.z,0,-ea.x,eo.z,0,-eo.x,-es.y,es.x,0,-ea.y,ea.x,0,-eo.y,eo.x,0];return!!(ed(t,ei,en,er,eh)&&ed(t=[1,0,0,0,1,0,0,0,1],ei,en,er,eh))&&(eu.crossVectors(es,ea),ed(t=[eu.x,eu.y,eu.z],ei,en,er,eh))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,ee).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=.5*this.getSize(ee).length()),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(Q[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Q[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Q[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Q[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Q[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Q[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Q[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Q[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Q)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}let Q=[new Y,new Y,new Y,new Y,new Y,new Y,new Y,new Y],ee=new Y,et=new K,ei=new Y,en=new Y,er=new Y,es=new Y,ea=new Y,eo=new Y,el=new Y,eh=new Y,eu=new Y,ec=new Y;function ed(e,t,i,n,r){for(let s=0,a=e.length-3;s<=a;s+=3){ec.fromArray(e,s);let o=r.x*Math.abs(ec.x)+r.y*Math.abs(ec.y)+r.z*Math.abs(ec.z),l=t.dot(ec),h=i.dot(ec),u=n.dot(ec);if(Math.max(-Math.max(l,h,u),Math.min(l,h,u))>o)return!1}return!0}let ep=new K,ef=new Y,em=new Y;class e${constructor(e=new Y,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let i=this.center;void 0!==t?i.copy(t):ep.setFromPoints(e).getCenter(i);let n=0;for(let r=0,s=e.length;r<s;r++)n=Math.max(n,i.distanceToSquared(e[r]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ef.subVectors(e,this.center);let t=ef.lengthSq();if(t>this.radius*this.radius){let i=Math.sqrt(t),n=(i-this.radius)*.5;this.center.addScaledVector(ef,n/i),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(em.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ef.copy(e.center).add(em)),this.expandByPoint(ef.copy(e.center).sub(em))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}let eg=new Y,ev=new Y,e8=new Y,ex=new Y,ey=new Y,eS=new Y,e_=new Y;class eb{constructor(e=new Y,t=new Y(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,eg)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);let i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=eg.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(eg.copy(this.origin).addScaledVector(this.direction,t),eg.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){ev.copy(e).add(t).multiplyScalar(.5),e8.copy(t).sub(e).normalize(),ex.copy(this.origin).sub(ev);let r=.5*e.distanceTo(t),s=-this.direction.dot(e8),a=ex.dot(this.direction),o=-ex.dot(e8),l=ex.lengthSq(),h=Math.abs(1-s*s),u,c,d,p;if(h>0){if(u=s*o-a,c=s*a-o,p=r*h,u>=0){if(c>=-p){if(c<=p){let f=1/h;u*=f,c*=f,d=u*(u+s*c+2*a)+c*(s*u+c+2*o)+l}else d=-(u=Math.max(0,-(s*(c=r)+a)))*u+c*(c+2*o)+l}else d=-(u=Math.max(0,-(s*(c=-r)+a)))*u+c*(c+2*o)+l}else c<=-p?(c=(u=Math.max(0,-(-s*r+a)))>0?-r:Math.min(Math.max(-r,-o),r),d=-u*u+c*(c+2*o)+l):c<=p?(u=0,d=(c=Math.min(Math.max(-r,-o),r))*(c+2*o)+l):(c=(u=Math.max(0,-(s*r+a)))>0?r:Math.min(Math.max(-r,-o),r),d=-u*u+c*(c+2*o)+l)}else c=s>0?-r:r,d=-(u=Math.max(0,-(s*c+a)))*u+c*(c+2*o)+l;return i&&i.copy(this.origin).addScaledVector(this.direction,u),n&&n.copy(ev).addScaledVector(e8,c),d}intersectSphere(e,t){eg.subVectors(e.center,this.origin);let i=eg.dot(this.direction),n=eg.dot(eg)-i*i,r=e.radius*e.radius;if(n>r)return null;let s=Math.sqrt(r-n),a=i-s,o=i+s;return o<0?null:a<0?this.at(o,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;let i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){let i=this.distanceToPlane(e);return null===i?null:this.at(i,t)}intersectsPlane(e){let t=e.distanceToPoint(this.origin);if(0===t)return!0;let i=e.normal.dot(this.direction);return i*t<0}intersectBox(e,t){let i,n,r,s,a,o,l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,c=this.origin;return(l>=0?(i=(e.min.x-c.x)*l,n=(e.max.x-c.x)*l):(i=(e.max.x-c.x)*l,n=(e.min.x-c.x)*l),h>=0?(r=(e.min.y-c.y)*h,s=(e.max.y-c.y)*h):(r=(e.max.y-c.y)*h,s=(e.min.y-c.y)*h),i>s||r>n)?null:((r>i||isNaN(i))&&(i=r),(s<n||isNaN(n))&&(n=s),u>=0?(a=(e.min.z-c.z)*u,o=(e.max.z-c.z)*u):(a=(e.max.z-c.z)*u,o=(e.min.z-c.z)*u),i>o||a>n)?null:((a>i||i!=i)&&(i=a),(o<n||n!=n)&&(n=o),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return null!==this.intersectBox(e,eg)}intersectTriangle(e,t,i,n,r){ey.subVectors(t,e),eS.subVectors(i,e),e_.crossVectors(ey,eS);let s=this.direction.dot(e_),a;if(s>0){if(n)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}ex.subVectors(this.origin,e);let o=a*this.direction.dot(eS.crossVectors(ex,eS));if(o<0)return null;let l=a*this.direction.dot(ey.cross(ex));if(l<0||o+l>s)return null;let h=-a*ex.dot(e_);return h<0?null:this.at(h/s,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class eM{constructor(e,t,i,n,r,s,a,o,l,h,u,c,d,p,f,m){eM.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==e&&this.set(e,t,i,n,r,s,a,o,l,h,u,c,d,p,f,m)}set(e,t,i,n,r,s,a,o,l,h,u,c,d,p,f,m){let $=this.elements;return $[0]=e,$[4]=t,$[8]=i,$[12]=n,$[1]=r,$[5]=s,$[9]=a,$[13]=o,$[2]=l,$[6]=h,$[10]=u,$[14]=c,$[3]=d,$[7]=p,$[11]=f,$[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new eM().fromArray(this.elements)}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){let t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){let t=this.elements,i=e.elements,n=1/eE.setFromMatrixColumn(e,0).length(),r=1/eE.setFromMatrixColumn(e,1).length(),s=1/eE.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*r,t[5]=i[5]*r,t[6]=i[6]*r,t[7]=0,t[8]=i[8]*s,t[9]=i[9]*s,t[10]=i[10]*s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){let t=this.elements,i=e.x,n=e.y,r=e.z,s=Math.cos(i),a=Math.sin(i),o=Math.cos(n),l=Math.sin(n),h=Math.cos(r),u=Math.sin(r);if("XYZ"===e.order){let c=s*h,d=s*u,p=a*h,f=a*u;t[0]=o*h,t[4]=-o*u,t[8]=l,t[1]=d+p*l,t[5]=c-f*l,t[9]=-a*o,t[2]=f-c*l,t[6]=p+d*l,t[10]=s*o}else if("YXZ"===e.order){let m=o*h,$=o*u,g=l*h,v=l*u;t[0]=m+v*a,t[4]=g*a-$,t[8]=s*l,t[1]=s*u,t[5]=s*h,t[9]=-a,t[2]=$*a-g,t[6]=v+m*a,t[10]=s*o}else if("ZXY"===e.order){let x=o*h,y=o*u,S=l*h,_=l*u;t[0]=x-_*a,t[4]=-s*u,t[8]=S+y*a,t[1]=y+S*a,t[5]=s*h,t[9]=_-x*a,t[2]=-s*l,t[6]=a,t[10]=s*o}else if("ZYX"===e.order){let b=s*h,M=s*u,E=a*h,T=a*u;t[0]=o*h,t[4]=E*l-M,t[8]=b*l+T,t[1]=o*u,t[5]=T*l+b,t[9]=M*l-E,t[2]=-l,t[6]=a*o,t[10]=s*o}else if("YZX"===e.order){let w=s*o,A=s*l,R=a*o,C=a*l;t[0]=o*h,t[4]=C-w*u,t[8]=R*u+A,t[1]=u,t[5]=s*h,t[9]=-a*h,t[2]=-l*h,t[6]=A*u+R,t[10]=w-C*u}else if("XZY"===e.order){let L=s*o,P=s*l,I=a*o,U=a*l;t[0]=o*h,t[4]=-u,t[8]=l*h,t[1]=L*u+U,t[5]=s*h,t[9]=P*u-I,t[2]=I*u-P,t[6]=a*h,t[10]=U*u+L}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(ew,e,eA)}lookAt(e,t,i){let n=this.elements;return eL.subVectors(e,t),0===eL.lengthSq()&&(eL.z=1),eL.normalize(),eR.crossVectors(i,eL),0===eR.lengthSq()&&(1===Math.abs(i.z)?eL.x+=1e-4:eL.z+=1e-4,eL.normalize(),eR.crossVectors(i,eL)),eR.normalize(),eC.crossVectors(eL,eR),n[0]=eR.x,n[4]=eC.x,n[8]=eL.x,n[1]=eR.y,n[5]=eC.y,n[9]=eL.y,n[2]=eR.z,n[6]=eC.z,n[10]=eL.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,n=t.elements,r=this.elements,s=i[0],a=i[4],o=i[8],l=i[12],h=i[1],u=i[5],c=i[9],d=i[13],p=i[2],f=i[6],m=i[10],$=i[14],g=i[3],v=i[7],x=i[11],y=i[15],S=n[0],_=n[4],b=n[8],M=n[12],E=n[1],T=n[5],w=n[9],A=n[13],R=n[2],C=n[6],L=n[10],P=n[14],I=n[3],U=n[7],D=n[11],N=n[15];return r[0]=s*S+a*E+o*R+l*I,r[4]=s*_+a*T+o*C+l*U,r[8]=s*b+a*w+o*L+l*D,r[12]=s*M+a*A+o*P+l*N,r[1]=h*S+u*E+c*R+d*I,r[5]=h*_+u*T+c*C+d*U,r[9]=h*b+u*w+c*L+d*D,r[13]=h*M+u*A+c*P+d*N,r[2]=p*S+f*E+m*R+$*I,r[6]=p*_+f*T+m*C+$*U,r[10]=p*b+f*w+m*L+$*D,r[14]=p*M+f*A+m*P+$*N,r[3]=g*S+v*E+x*R+y*I,r[7]=g*_+v*T+x*C+y*U,r[11]=g*b+v*w+x*L+y*D,r[15]=g*M+v*A+x*P+y*N,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[4],n=e[8],r=e[12],s=e[1],a=e[5],o=e[9],l=e[13],h=e[2],u=e[6],c=e[10],d=e[14],p=e[3],f=e[7],m=e[11],$=e[15];return p*(+r*o*u-n*l*u-r*a*c+i*l*c+n*a*d-i*o*d)+f*(+t*o*d-t*l*c+r*s*c-n*s*d+n*l*h-r*o*h)+m*(+t*l*u-t*a*d-r*s*u+i*s*d+r*a*h-i*l*h)+$*(-n*a*h-t*o*u+t*a*c+n*s*u-i*s*c+i*o*h)}transpose(){let e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){let n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],h=e[8],u=e[9],c=e[10],d=e[11],p=e[12],f=e[13],m=e[14],$=e[15],g=u*m*l-f*c*l+f*o*d-a*m*d-u*o*$+a*c*$,v=p*c*l-h*m*l-p*o*d+s*m*d+h*o*$-s*c*$,x=h*f*l-p*u*l+p*a*d-s*f*d-h*a*$+s*u*$,y=p*u*o-h*f*o-p*a*c+s*f*c+h*a*m-s*u*m,S=t*g+i*v+n*x+r*y;if(0===S)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let _=1/S;return e[0]=g*_,e[1]=(f*c*r-u*m*r-f*n*d+i*m*d+u*n*$-i*c*$)*_,e[2]=(a*m*r-f*o*r+f*n*l-i*m*l-a*n*$+i*o*$)*_,e[3]=(u*o*r-a*c*r-u*n*l+i*c*l+a*n*d-i*o*d)*_,e[4]=v*_,e[5]=(h*m*r-p*c*r+p*n*d-t*m*d-h*n*$+t*c*$)*_,e[6]=(p*o*r-s*m*r-p*n*l+t*m*l+s*n*$-t*o*$)*_,e[7]=(s*c*r-h*o*r+h*n*l-t*c*l-s*n*d+t*o*d)*_,e[8]=x*_,e[9]=(p*u*r-h*f*r-p*i*d+t*f*d+h*i*$-t*u*$)*_,e[10]=(s*f*r-p*a*r+p*i*l-t*f*l-s*i*$+t*a*$)*_,e[11]=(h*a*r-s*u*r-h*i*l+t*u*l+s*i*d-t*a*d)*_,e[12]=y*_,e[13]=(h*f*n-p*u*n+p*i*c-t*f*c-h*i*m+t*u*m)*_,e[14]=(p*a*n-s*f*n-p*i*o+t*f*o+s*i*m-t*a*m)*_,e[15]=(s*u*n-h*a*n+h*i*o-t*u*o-s*i*c+t*a*c)*_,this}scale(e){let t=this.elements,i=e.x,n=e.y,r=e.z;return t[0]*=i,t[4]*=n,t[8]*=r,t[1]*=i,t[5]*=n,t[9]*=r,t[2]*=i,t[6]*=n,t[10]*=r,t[3]*=i,t[7]*=n,t[11]*=r,this}getMaxScaleOnAxis(){let e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){let i=Math.cos(t),n=Math.sin(t),r=1-i,s=e.x,a=e.y,o=e.z,l=r*s,h=r*a;return this.set(l*s+i,l*a-n*o,l*o+n*a,0,l*a+n*o,h*a+i,h*o-n*s,0,l*o-n*a,h*o+n*s,r*o*o+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,r,s){return this.set(1,i,r,0,e,1,s,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){let n=this.elements,r=t._x,s=t._y,a=t._z,o=t._w,l=r+r,h=s+s,u=a+a,c=r*l,d=r*h,p=r*u,f=s*h,m=s*u,$=a*u,g=o*l,v=o*h,x=o*u,y=i.x,S=i.y,_=i.z;return n[0]=(1-(f+$))*y,n[1]=(d+x)*y,n[2]=(p-v)*y,n[3]=0,n[4]=(d-x)*S,n[5]=(1-(c+$))*S,n[6]=(m+g)*S,n[7]=0,n[8]=(p+v)*_,n[9]=(m-g)*_,n[10]=(1-(c+f))*_,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){let n=this.elements,r=eE.set(n[0],n[1],n[2]).length(),s=eE.set(n[4],n[5],n[6]).length(),a=eE.set(n[8],n[9],n[10]).length(),o=this.determinant();o<0&&(r=-r),e.x=n[12],e.y=n[13],e.z=n[14],eT.copy(this);let l=1/r,h=1/s,u=1/a;return eT.elements[0]*=l,eT.elements[1]*=l,eT.elements[2]*=l,eT.elements[4]*=h,eT.elements[5]*=h,eT.elements[6]*=h,eT.elements[8]*=u,eT.elements[9]*=u,eT.elements[10]*=u,t.setFromRotationMatrix(eT),i.x=r,i.y=s,i.z=a,this}makePerspective(e,t,i,n,r,s,a=2e3){let o=this.elements,l,h;if(2e3===a)l=-(s+r)/(s-r),h=-2*s*r/(s-r);else if(2001===a)l=-s/(s-r),h=-s*r/(s-r);else throw Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return o[0]=2*r/(t-e),o[4]=0,o[8]=(t+e)/(t-e),o[12]=0,o[1]=0,o[5]=2*r/(i-n),o[9]=(i+n)/(i-n),o[13]=0,o[2]=0,o[6]=0,o[10]=l,o[14]=h,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,i,n,r,s,a=2e3){let o=this.elements,l=1/(t-e),h=1/(i-n),u=1/(s-r),c,d;if(2e3===a)c=(s+r)*u,d=-2*u;else if(2001===a)c=r*u,d=-1*u;else throw Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-((t+e)*l),o[1]=0,o[5]=2*h,o[9]=0,o[13]=-((i+n)*h),o[2]=0,o[6]=0,o[10]=d,o[14]=-c,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){let t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}let eE=new Y,eT=new eM,ew=new Y(0,0,0),eA=new Y(1,1,1),eR=new Y,eC=new Y,eL=new Y,e0=new eM,eP=new q;class e1{constructor(e=0,t=0,i=0,n=e1.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){let n=e.elements,r=n[0],s=n[4],a=n[8],o=n[1],l=n[5],h=n[9],u=n[2],d=n[6],p=n[10];switch(t){case"XYZ":this._y=Math.asin(c(a,-1,1)),.9999999>Math.abs(a)?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-s,r)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-c(h,-1,1)),.9999999>Math.abs(h)?(this._y=Math.atan2(a,p),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(c(d,-1,1)),.9999999>Math.abs(d)?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-c(u,-1,1)),.9999999>Math.abs(u)?(this._x=Math.atan2(d,p),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(c(o,-1,1)),.9999999>Math.abs(o)?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,p));break;case"XZY":this._z=Math.asin(-c(s,-1,1)),.9999999>Math.abs(s)?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===i&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return e0.makeRotationFromQuaternion(e),this.setFromRotationMatrix(e0,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return eP.setFromEuler(this),this.setFromQuaternion(eP,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}e1.DEFAULT_ORDER="XYZ";class eI{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}isEnabled(e){return(this.mask&(1<<e|0))!=0}}let eU=0,eD=new Y,eN=new q,eF=new eM,eO=new Y,eB=new Y,ez=new Y,eG=new q,eH=new Y(1,0,0),e2=new Y(0,1,0),ek=new Y(0,0,1),eV={type:"added"},e3={type:"removed"};class eW extends s{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:eU++}),this.uuid=u(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=eW.DEFAULT_UP.clone();let e=new Y,t=new e1,i=new q,n=new Y(1,1,1);t._onChange(function e(){i.setFromEuler(t,!1)}),i._onChange(function e(){t.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new eM},normalMatrix:{value:new _}}),this.matrix=new eM,this.matrixWorld=new eM,this.matrixAutoUpdate=eW.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=eW.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new eI,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return eN.setFromAxisAngle(e,t),this.quaternion.multiply(eN),this}rotateOnWorldAxis(e,t){return eN.setFromAxisAngle(e,t),this.quaternion.premultiply(eN),this}rotateX(e){return this.rotateOnAxis(eH,e)}rotateY(e){return this.rotateOnAxis(e2,e)}rotateZ(e){return this.rotateOnAxis(ek,e)}translateOnAxis(e,t){return eD.copy(e).applyQuaternion(this.quaternion),this.position.add(eD.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(eH,e)}translateY(e){return this.translateOnAxis(e2,e)}translateZ(e){return this.translateOnAxis(ek,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(eF.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?eO.copy(e):eO.set(e,t,i);let n=this.parent;this.updateWorldMatrix(!0,!1),eB.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?eF.lookAt(eB,eO,this.up):eF.lookAt(eO,eB,this.up),this.quaternion.setFromRotationMatrix(eF),n&&(eF.extractRotation(n.matrixWorld),eN.setFromRotationMatrix(eF),this.quaternion.premultiply(eN.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(eV)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}let i=this.children.indexOf(e);return -1!==i&&(e.parent=null,this.children.splice(i,1),e.dispatchEvent(e3)),this}removeFromParent(){let e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){let t=this.children[e];t.parent=null,t.dispatchEvent(e3)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),eF.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),eF.multiply(e.parent.matrixWorld)),e.applyMatrix4(eF),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){let r=this.children[i],s=r.getObjectByProperty(e,t);if(void 0!==s)return s}}getObjectsByProperty(e,t){let i=[];this[e]===t&&i.push(this);for(let n=0,r=this.children.length;n<r;n++){let s=this.children[n].getObjectsByProperty(e,t);s.length>0&&(i=i.concat(s))}return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(eB,e,ez),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(eB,eG,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);let t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){let t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);let t=this.children;for(let i=0,n=t.length;i<n;i++){let r=t[i];(!0===r.matrixWorldAutoUpdate||!0===e)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){let i=this.parent;if(!0===e&&null!==i&&!0===i.matrixWorldAutoUpdate&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){let n=this.children;for(let r=0,s=n.length;r<s;r++){let a=n[r];!0===a.matrixWorldAutoUpdate&&a.updateWorldMatrix(!1,!0)}}}toJSON(e){let t=void 0===e||"string"==typeof e,i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});let n={};function r(t,i){return void 0===t[i.uuid]&&(t[i.uuid]=i.toJSON(e)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=r(e.geometries,this.geometry);let s=this.geometry.parameters;if(void 0!==s&&void 0!==s.shapes){let a=s.shapes;if(Array.isArray(a))for(let o=0,l=a.length;o<l;o++){let h=a[o];r(e.shapes,h)}else r(e.shapes,a)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let u=[];for(let c=0,d=this.material.length;c<d;c++)u.push(r(e.materials,this.material[c]));n.material=u}else n.material=r(e.materials,this.material)}if(this.children.length>0){n.children=[];for(let p=0;p<this.children.length;p++)n.children.push(this.children[p].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let f=0;f<this.animations.length;f++){let m=this.animations[f];n.animations.push(r(e.animations,m))}}if(t){let $=M(e.geometries),g=M(e.materials),v=M(e.textures),x=M(e.images),y=M(e.shapes),S=M(e.skeletons),_=M(e.animations),b=M(e.nodes);$.length>0&&(i.geometries=$),g.length>0&&(i.materials=g),v.length>0&&(i.textures=v),x.length>0&&(i.images=x),y.length>0&&(i.shapes=y),S.length>0&&(i.skeletons=S),_.length>0&&(i.animations=_),b.length>0&&(i.nodes=b)}return i.object=n,i;function M(e){let t=[];for(let i in e){let n=e[i];delete n.metadata,t.push(n)}return t}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let i=0;i<e.children.length;i++){let n=e.children[i];this.add(n.clone())}return this}}eW.DEFAULT_UP=new Y(0,1,0),eW.DEFAULT_MATRIX_AUTO_UPDATE=!0,eW.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;let e6=new Y,e4=new Y,eX=new Y,e7=new Y,e5=new Y,ej=new Y,eq=new Y,eY=new Y,eZ=new Y,eJ=new Y,eK=!1;class e9{constructor(e=new Y,t=new Y,i=new Y){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),e6.subVectors(e,t),n.cross(e6);let r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(e,t,i,n,r){e6.subVectors(n,t),e4.subVectors(i,t),eX.subVectors(e,t);let s=e6.dot(e6),a=e6.dot(e4),o=e6.dot(eX),l=e4.dot(e4),h=e4.dot(eX),u=s*l-a*a;if(0===u)return r.set(-2,-1,-1);let c=1/u,d=(l*o-a*h)*c,p=(s*h-a*o)*c;return r.set(1-d-p,p,d)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,e7),e7.x>=0&&e7.y>=0&&e7.x+e7.y<=1}static getUV(e,t,i,n,r,s,a,o){return!1===eK&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),eK=!0),this.getInterpolation(e,t,i,n,r,s,a,o)}static getInterpolation(e,t,i,n,r,s,a,o){return this.getBarycoord(e,t,i,n,e7),o.setScalar(0),o.addScaledVector(r,e7.x),o.addScaledVector(s,e7.y),o.addScaledVector(a,e7.z),o}static isFrontFacing(e,t,i,n){return e6.subVectors(i,t),e4.subVectors(e,t),0>e6.cross(e4).dot(n)}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return e6.subVectors(this.c,this.b),e4.subVectors(this.a,this.b),.5*e6.cross(e4).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return e9.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return e9.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,n,r){return!1===eK&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),eK=!0),e9.getInterpolation(e,this.a,this.b,this.c,t,i,n,r)}getInterpolation(e,t,i,n,r){return e9.getInterpolation(e,this.a,this.b,this.c,t,i,n,r)}containsPoint(e){return e9.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return e9.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let i=this.a,n=this.b,r=this.c,s,a;e5.subVectors(n,i),ej.subVectors(r,i),eY.subVectors(e,i);let o=e5.dot(eY),l=ej.dot(eY);if(o<=0&&l<=0)return t.copy(i);eZ.subVectors(e,n);let h=e5.dot(eZ),u=ej.dot(eZ);if(h>=0&&u<=h)return t.copy(n);let c=o*u-h*l;if(c<=0&&o>=0&&h<=0)return s=o/(o-h),t.copy(i).addScaledVector(e5,s);eJ.subVectors(e,r);let d=e5.dot(eJ),p=ej.dot(eJ);if(p>=0&&d<=p)return t.copy(r);let f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return a=l/(l-p),t.copy(i).addScaledVector(ej,a);let m=h*p-d*u;if(m<=0&&u-h>=0&&d-p>=0)return eq.subVectors(r,n),a=(u-h)/(u-h+(d-p)),t.copy(n).addScaledVector(eq,a);let $=1/(m+f+c);return s=f*$,a=c*$,t.copy(i).addScaledVector(e5,s).addScaledVector(ej,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let eQ=0;class te extends s{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:eQ++}),this.uuid=u(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(let t in e){let i=e[t];if(void 0===i){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}let n=this[t];if(void 0===n){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){let t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});let i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function n(e){let t=[];for(let i in e){let n=e[i];delete n.metadata,t.push(n)}return t}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(i.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(i.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),void 0!==this.anisotropy&&(i.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),0!==this.side&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.forceSinglePass&&(i.forceSinglePass=this.forceSinglePass),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),!1===this.fog&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData),t){let r=n(e.textures),s=n(e.images);r.length>0&&(i.textures=r),s.length>0&&(i.images=s)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,i=null;if(null!==t){let n=t.length;i=Array(n);for(let r=0;r!==n;++r)i[r]=t[r].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}let tt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ti={h:0,s:0,l:0},tn={h:0,s:0,l:0};function tr(e,t,i){return(i<0&&(i+=1),i>1&&(i-=1),i<1/6)?e+(t-e)*6*i:i<.5?t:i<2/3?e+(t-e)*6*(2/3-i):e}class ts{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(void 0===t&&void 0===i){let n=e;n&&n.isColor?this.copy(n):"number"==typeof n?this.setHex(n):"string"==typeof n&&this.setStyle(n)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,i=t){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,N.toWorkingColorSpace(this,i),this}setRGB(e,t,i,n=N.workingColorSpace){return this.r=e,this.g=t,this.b=i,N.toWorkingColorSpace(this,n),this}setHSL(e,t,i,n=N.workingColorSpace){if(e=d(e,1),t=c(t,0,1),i=c(i,0,1),0===t)this.r=this.g=this.b=i;else{let r=i<=.5?i*(1+t):i+t-i*t,s=2*i-r;this.r=tr(s,r,e+1/3),this.g=tr(s,r,e),this.b=tr(s,r,e-1/3)}return N.toWorkingColorSpace(this,n),this}setStyle(e,i=t){function n(t){void 0!==t&&1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s,a=r[1],o=r[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,i);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,i);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,i);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){let l=r[1],h=l.length;if(3===h)return this.setRGB(parseInt(l.charAt(0),16)/15,parseInt(l.charAt(1),16)/15,parseInt(l.charAt(2),16)/15,i);if(6===h)return this.setHex(parseInt(l,16),i);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,i);return this}setColorName(e,i=t){let n=tt[e.toLowerCase()];return void 0!==n?this.setHex(n,i):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=C(e.r),this.g=C(e.g),this.b=C(e.b),this}copyLinearToSRGB(e){return this.r=L(e.r),this.g=L(e.g),this.b=L(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=t){return N.fromWorkingColorSpace(ta.copy(this),e),65536*Math.round(c(255*ta.r,0,255))+256*Math.round(c(255*ta.g,0,255))+Math.round(c(255*ta.b,0,255))}getHexString(e=t){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=N.workingColorSpace){N.fromWorkingColorSpace(ta.copy(this),t);let i=ta.r,n=ta.g,r=ta.b,s=Math.max(i,n,r),a=Math.min(i,n,r),o,l,h=(a+s)/2;if(a===s)o=0,l=0;else{let u=s-a;switch(l=h<=.5?u/(s+a):u/(2-s-a),s){case i:o=(n-r)/u+(n<r?6:0);break;case n:o=(r-i)/u+2;break;case r:o=(i-n)/u+4}o/=6}return e.h=o,e.s=l,e.l=h,e}getRGB(e,t=N.workingColorSpace){return N.fromWorkingColorSpace(ta.copy(this),t),e.r=ta.r,e.g=ta.g,e.b=ta.b,e}getStyle(e=t){N.fromWorkingColorSpace(ta.copy(this),e);let i=ta.r,n=ta.g,r=ta.b;return e!==t?`color(${e} ${i.toFixed(3)} ${n.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(255*i)},${Math.round(255*n)},${Math.round(255*r)})`}offsetHSL(e,t,i){return this.getHSL(ti),ti.h+=e,ti.s+=t,ti.l+=i,this.setHSL(ti.h,ti.s,ti.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(ti),e.getHSL(tn);let i=p(ti.h,tn.h,t),n=p(ti.s,tn.s,t),r=p(ti.l,tn.l,t);return this.setHSL(i,n,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){let t=this.r,i=this.g,n=this.b,r=e.elements;return this.r=r[0]*t+r[3]*i+r[6]*n,this.g=r[1]*t+r[4]*i+r[7]*n,this.b=r[2]*t+r[5]*i+r[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let ta=new ts;ts.NAMES=tt;class to extends te{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ts(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}let tl=function e(){let t=new ArrayBuffer(4),i=new Float32Array(t),n=new Uint32Array(t),r=new Uint32Array(512),s=new Uint32Array(512);for(let a=0;a<256;++a){let o=a-127;o<-27?(r[a]=0,r[256|a]=32768,s[a]=24,s[256|a]=24):o<-14?(r[a]=1024>>-o-14,r[256|a]=1024>>-o-14|32768,s[a]=-o-1,s[256|a]=-o-1):o<=15?(r[a]=o+15<<10,r[256|a]=o+15<<10|32768,s[a]=13,s[256|a]=13):o<128?(r[a]=31744,r[256|a]=64512,s[a]=24,s[256|a]=24):(r[a]=31744,r[256|a]=64512,s[a]=13,s[256|a]=13)}let l=new Uint32Array(2048),h=new Uint32Array(64),u=new Uint32Array(64);for(let c=1;c<1024;++c){let d=c<<13,p=0;for(;(8388608&d)==0;)d<<=1,p-=8388608;d&=-8388609,p+=947912704,l[c]=d|p}for(let f=1024;f<2048;++f)l[f]=939524096+(f-1024<<13);for(let m=1;m<31;++m)h[m]=m<<23;h[31]=1199570944,h[32]=2147483648;for(let $=33;$<63;++$)h[$]=2147483648+($-32<<23);h[63]=3347054592;for(let g=1;g<64;++g)32!==g&&(u[g]=1024);return{floatView:i,uint32View:n,baseTable:r,shiftTable:s,mantissaTable:l,exponentTable:h,offsetTable:u}}();function th(e){Math.abs(e)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=c(e,-65504,65504),tl.floatView[0]=e;let t=tl.uint32View[0],i=t>>23&511;return tl.baseTable[i]+((8388607&t)>>tl.shiftTable[i])}function tu(e){let t=e>>10;return tl.uint32View[0]=tl.mantissaTable[tl.offsetTable[t]+(1023&e)]+tl.exponentTable[t],tl.floatView[0]}let tc=new Y,td=new S;class tp{constructor(e,t,i=!1){if(Array.isArray(e))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=i,this.usage=35044,this.updateRange={offset:0,count:-1},this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,i=this.count;t<i;t++)td.fromBufferAttribute(this,t),td.applyMatrix3(e),this.setXY(t,td.x,td.y);else if(3===this.itemSize)for(let n=0,r=this.count;n<r;n++)tc.fromBufferAttribute(this,n),tc.applyMatrix3(e),this.setXYZ(n,tc.x,tc.y,tc.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)tc.fromBufferAttribute(this,t),tc.applyMatrix4(e),this.setXYZ(t,tc.x,tc.y,tc.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)tc.fromBufferAttribute(this,t),tc.applyNormalMatrix(e),this.setXYZ(t,tc.x,tc.y,tc.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)tc.fromBufferAttribute(this,t),tc.transformDirection(e),this.setXYZ(t,tc.x,tc.y,tc.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=x(t,this.array)),t}setX(e,t){return this.normalized&&(t=y(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=x(t,this.array)),t}setY(e,t){return this.normalized&&(t=y(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=x(t,this.array)),t}setZ(e,t){return this.normalized&&(t=y(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=x(t,this.array)),t}setW(e,t){return this.normalized&&(t=y(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=y(t,this.array),i=y(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=y(t,this.array),i=y(i,this.array),n=y(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e*=this.itemSize,this.normalized&&(t=y(t,this.array),i=y(i,this.array),n=y(n,this.array),r=y(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),(0!==this.updateRange.offset||-1!==this.updateRange.count)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class tf extends tp{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class tm extends tp{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class t$ extends tp{constructor(e,t,i){super(new Float32Array(e),t,i)}}let tg=0,tv=new eM,t8=new eW,tx=new Y,ty=new K,tS=new K,t_=new Y;class tb extends s{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:tg++}),this.uuid=u(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(M(e)?tm:tf)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);let i=this.attributes.normal;if(void 0!==i){let n=new _().getNormalMatrix(e);i.applyNormalMatrix(n),i.needsUpdate=!0}let r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return tv.makeRotationFromQuaternion(e),this.applyMatrix4(tv),this}rotateX(e){return tv.makeRotationX(e),this.applyMatrix4(tv),this}rotateY(e){return tv.makeRotationY(e),this.applyMatrix4(tv),this}rotateZ(e){return tv.makeRotationZ(e),this.applyMatrix4(tv),this}translate(e,t,i){return tv.makeTranslation(e,t,i),this.applyMatrix4(tv),this}scale(e,t,i){return tv.makeScale(e,t,i),this.applyMatrix4(tv),this}lookAt(e){return t8.lookAt(e),t8.updateMatrix(),this.applyMatrix4(t8.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(tx).negate(),this.translate(tx.x,tx.y,tx.z),this}setFromPoints(e){let t=[];for(let i=0,n=e.length;i<n;i++){let r=e[i];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new t$(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new K);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new Y(-1/0,-1/0,-1/0),new Y(Infinity,Infinity,Infinity));return}if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){let r=t[i];ty.setFromBufferAttribute(r),this.morphTargetsRelative?(t_.addVectors(this.boundingBox.min,ty.min),this.boundingBox.expandByPoint(t_),t_.addVectors(this.boundingBox.max,ty.max),this.boundingBox.expandByPoint(t_)):(this.boundingBox.expandByPoint(ty.min),this.boundingBox.expandByPoint(ty.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new e$);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new Y,1/0);return}if(e){let i=this.boundingSphere.center;if(ty.setFromBufferAttribute(e),t)for(let n=0,r=t.length;n<r;n++){let s=t[n];tS.setFromBufferAttribute(s),this.morphTargetsRelative?(t_.addVectors(ty.min,tS.min),ty.expandByPoint(t_),t_.addVectors(ty.max,tS.max),ty.expandByPoint(t_)):(ty.expandByPoint(tS.min),ty.expandByPoint(tS.max))}ty.getCenter(i);let a=0;for(let o=0,l=e.count;o<l;o++)t_.fromBufferAttribute(e,o),a=Math.max(a,i.distanceToSquared(t_));if(t)for(let h=0,u=t.length;h<u;h++){let c=t[h],d=this.morphTargetsRelative;for(let p=0,f=c.count;p<f;p++)t_.fromBufferAttribute(c,p),d&&(tx.fromBufferAttribute(e,p),t_.add(tx)),a=Math.max(a,i.distanceToSquared(t_))}this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let i=e.array,n=t.position.array,r=t.normal.array,s=t.uv.array,a=n.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new tp(new Float32Array(4*a),4));let o=this.getAttribute("tangent").array,l=[],h=[];for(let u=0;u<a;u++)l[u]=new Y,h[u]=new Y;let c=new Y,d=new Y,p=new Y,f=new S,m=new S,$=new S,g=new Y,v=new Y;function x(e,t,i){c.fromArray(n,3*e),d.fromArray(n,3*t),p.fromArray(n,3*i),f.fromArray(s,2*e),m.fromArray(s,2*t),$.fromArray(s,2*i),d.sub(c),p.sub(c),m.sub(f),$.sub(f);let r=1/(m.x*$.y-$.x*m.y);isFinite(r)&&(g.copy(d).multiplyScalar($.y).addScaledVector(p,-m.y).multiplyScalar(r),v.copy(p).multiplyScalar(m.x).addScaledVector(d,-$.x).multiplyScalar(r),l[e].add(g),l[t].add(g),l[i].add(g),h[e].add(v),h[t].add(v),h[i].add(v))}let y=this.groups;0===y.length&&(y=[{start:0,count:i.length}]);for(let _=0,b=y.length;_<b;++_){let M=y[_],E=M.start,T=M.count;for(let w=E,A=E+T;w<A;w+=3)x(i[w+0],i[w+1],i[w+2])}let R=new Y,C=new Y,L=new Y,P=new Y;function I(e){L.fromArray(r,3*e),P.copy(L);let t=l[e];R.copy(t),R.sub(L.multiplyScalar(L.dot(t))).normalize(),C.crossVectors(P,t);let i=C.dot(h[e]);o[4*e]=R.x,o[4*e+1]=R.y,o[4*e+2]=R.z,o[4*e+3]=i<0?-1:1}for(let U=0,D=y.length;U<D;++U){let N=y[U],F=N.start,O=N.count;for(let B=F,z=F+O;B<z;B+=3)I(i[B+0]),I(i[B+1]),I(i[B+2])}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(void 0!==t){let i=this.getAttribute("normal");if(void 0===i)i=new tp(new Float32Array(3*t.count),3),this.setAttribute("normal",i);else for(let n=0,r=i.count;n<r;n++)i.setXYZ(n,0,0,0);let s=new Y,a=new Y,o=new Y,l=new Y,h=new Y,u=new Y,c=new Y,d=new Y;if(e)for(let p=0,f=e.count;p<f;p+=3){let m=e.getX(p+0),$=e.getX(p+1),g=e.getX(p+2);s.fromBufferAttribute(t,m),a.fromBufferAttribute(t,$),o.fromBufferAttribute(t,g),c.subVectors(o,a),d.subVectors(s,a),c.cross(d),l.fromBufferAttribute(i,m),h.fromBufferAttribute(i,$),u.fromBufferAttribute(i,g),l.add(c),h.add(c),u.add(c),i.setXYZ(m,l.x,l.y,l.z),i.setXYZ($,h.x,h.y,h.z),i.setXYZ(g,u.x,u.y,u.z)}else for(let v=0,x=t.count;v<x;v+=3)s.fromBufferAttribute(t,v+0),a.fromBufferAttribute(t,v+1),o.fromBufferAttribute(t,v+2),c.subVectors(o,a),d.subVectors(s,a),c.cross(d),i.setXYZ(v+0,c.x,c.y,c.z),i.setXYZ(v+1,c.x,c.y,c.z),i.setXYZ(v+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeGeometries() instead."),this}normalizeNormals(){let e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)t_.fromBufferAttribute(e,t),t_.normalize(),e.setXYZ(t,t_.x,t_.y,t_.z)}toNonIndexed(){function e(e,t){let i=e.array,n=e.itemSize,r=e.normalized,s=new i.constructor(t.length*n),a=0,o=0;for(let l=0,h=t.length;l<h;l++){a=e.isInterleavedBufferAttribute?t[l]*e.data.stride+e.offset:t[l]*n;for(let u=0;u<n;u++)s[o++]=i[a++]}return new tp(s,n,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new tb,i=this.index.array,n=this.attributes;for(let r in n){let s=n[r],a=e(s,i);t.setAttribute(r,a)}let o=this.morphAttributes;for(let l in o){let h=[],u=o[l];for(let c=0,d=u.length;c<d;c++){let p=u[c],f=e(p,i);h.push(f)}t.morphAttributes[l]=h}t.morphTargetsRelative=this.morphTargetsRelative;let m=this.groups;for(let $=0,g=m.length;$<g;$++){let v=m[$];t.addGroup(v.start,v.count,v.materialIndex)}return t}toJSON(){let e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){let t=this.parameters;for(let i in t)void 0!==t[i]&&(e[i]=t[i]);return e}e.data={attributes:{}};let n=this.index;null!==n&&(e.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});let r=this.attributes;for(let s in r){let a=r[s];e.data.attributes[s]=a.toJSON(e.data)}let o={},l=!1;for(let h in this.morphAttributes){let u=this.morphAttributes[h],c=[];for(let d=0,p=u.length;d<p;d++){let f=u[d];c.push(f.toJSON(e.data))}c.length>0&&(o[h]=c,l=!0)}l&&(e.data.morphAttributes=o,e.data.morphTargetsRelative=this.morphTargetsRelative);let m=this.groups;m.length>0&&(e.data.groups=JSON.parse(JSON.stringify(m)));let $=this.boundingSphere;return null!==$&&(e.data.boundingSphere={center:$.center.toArray(),radius:$.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let t={};this.name=e.name;let i=e.index;null!==i&&this.setIndex(i.clone(t));let n=e.attributes;for(let r in n){let s=n[r];this.setAttribute(r,s.clone(t))}let a=e.morphAttributes;for(let o in a){let l=[],h=a[o];for(let u=0,c=h.length;u<c;u++)l.push(h[u].clone(t));this.morphAttributes[o]=l}this.morphTargetsRelative=e.morphTargetsRelative;let d=e.groups;for(let p=0,f=d.length;p<f;p++){let m=d[p];this.addGroup(m.start,m.count,m.materialIndex)}let $=e.boundingBox;null!==$&&(this.boundingBox=$.clone());let g=e.boundingSphere;return null!==g&&(this.boundingSphere=g.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}let tM=new eM,tE=new eb,tT=new e$,tw=new Y,tA=new Y,tR=new Y,tC=new Y,tL=new Y,t0=new Y,tP=new S,t1=new S,tI=new S,tU=new Y,tD=new Y,tN=new Y,tF=new Y,tO=new Y;class tB extends eW{constructor(e=new tb,t=new to){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){let e=this.geometry,t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let n=t[i[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=n.length;r<s;r++){let a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(e,t){let i=this.geometry,n=i.attributes.position,r=i.morphAttributes.position,s=i.morphTargetsRelative;t.fromBufferAttribute(n,e);let a=this.morphTargetInfluences;if(r&&a){t0.set(0,0,0);for(let o=0,l=r.length;o<l;o++){let h=a[o],u=r[o];0!==h&&(tL.fromBufferAttribute(u,e),s?t0.addScaledVector(tL,h):t0.addScaledVector(tL.sub(t),h))}t.add(t0)}return t}raycast(e,t){let i=this.geometry,n=this.material,r=this.matrixWorld;if(void 0!==n){if(null===i.boundingSphere&&i.computeBoundingSphere(),tT.copy(i.boundingSphere),tT.applyMatrix4(r),tE.copy(e.ray).recast(e.near),!1===tT.containsPoint(tE.origin)&&(null===tE.intersectSphere(tT,tw)||tE.origin.distanceToSquared(tw)>(e.far-e.near)**2)||(tM.copy(r).invert(),tE.copy(e.ray).applyMatrix4(tM),null!==i.boundingBox&&!1===tE.intersectsBox(i.boundingBox)))return;this._computeIntersections(e,t,tE)}}_computeIntersections(e,t,i){let n,r=this.geometry,s=this.material,a=r.index,o=r.attributes.position,l=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,c=r.groups,d=r.drawRange;if(null!==a){if(Array.isArray(s))for(let p=0,f=c.length;p<f;p++){let m=c[p],$=s[m.materialIndex],g=Math.max(m.start,d.start),v=Math.min(a.count,Math.min(m.start+m.count,d.start+d.count));for(let x=g,y=v;x<y;x+=3){let S=a.getX(x),_=a.getX(x+1),b=a.getX(x+2);(n=tz(this,$,e,i,l,h,u,S,_,b))&&(n.faceIndex=Math.floor(x/3),n.face.materialIndex=m.materialIndex,t.push(n))}}else{let M=Math.max(0,d.start),E=Math.min(a.count,d.start+d.count);for(let T=M,w=E;T<w;T+=3){let A=a.getX(T),R=a.getX(T+1),C=a.getX(T+2);(n=tz(this,s,e,i,l,h,u,A,R,C))&&(n.faceIndex=Math.floor(T/3),t.push(n))}}}else if(void 0!==o){if(Array.isArray(s))for(let L=0,P=c.length;L<P;L++){let I=c[L],U=s[I.materialIndex],D=Math.max(I.start,d.start),N=Math.min(o.count,Math.min(I.start+I.count,d.start+d.count));for(let F=D,O=N;F<O;F+=3){let B=F,z=F+1,G=F+2;(n=tz(this,U,e,i,l,h,u,B,z,G))&&(n.faceIndex=Math.floor(F/3),n.face.materialIndex=I.materialIndex,t.push(n))}}else{let H=Math.max(0,d.start),k=Math.min(o.count,d.start+d.count);for(let V=H,W=k;V<W;V+=3){let X=V,j=V+1,q=V+2;(n=tz(this,s,e,i,l,h,u,X,j,q))&&(n.faceIndex=Math.floor(V/3),t.push(n))}}}}}function tz(e,t,i,n,r,s,a,o,l,h){e.getVertexPosition(o,tA),e.getVertexPosition(l,tR),e.getVertexPosition(h,tC);let u=function e(t,i,n,r,s,a,o,l){let h;if(null===(h=1===i.side?r.intersectTriangle(o,a,s,!0,l):r.intersectTriangle(s,a,o,0===i.side,l)))return null;tO.copy(l),tO.applyMatrix4(t.matrixWorld);let u=n.ray.origin.distanceTo(tO);return u<n.near||u>n.far?null:{distance:u,point:tO.clone(),object:t}}(e,t,i,n,tA,tR,tC,tF);if(u){r&&(tP.fromBufferAttribute(r,o),t1.fromBufferAttribute(r,l),tI.fromBufferAttribute(r,h),u.uv=e9.getInterpolation(tF,tA,tR,tC,tP,t1,tI,new S)),s&&(tP.fromBufferAttribute(s,o),t1.fromBufferAttribute(s,l),tI.fromBufferAttribute(s,h),u.uv1=e9.getInterpolation(tF,tA,tR,tC,tP,t1,tI,new S),u.uv2=u.uv1),a&&(tU.fromBufferAttribute(a,o),tD.fromBufferAttribute(a,l),tN.fromBufferAttribute(a,h),u.normal=e9.getInterpolation(tF,tA,tR,tC,tU,tD,tN,new Y),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));let c={a:o,b:l,c:h,normal:new Y,materialIndex:0};e9.getNormal(tA,tR,tC,c.normal),u.face=c}return u}class tG extends tb{constructor(e=1,t=1,i=1,n=1,r=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:r,depthSegments:s};let a=this;n=Math.floor(n),r=Math.floor(r),s=Math.floor(s);let o=[],l=[],h=[],u=[],c=0,d=0;function p(e,t,i,n,r,s,p,f,m,$,g){let v=s/m,x=p/$,y=s/2,S=p/2,_=f/2,b=m+1,M=$+1,E=0,T=0,w=new Y;for(let A=0;A<M;A++){let R=A*x-S;for(let C=0;C<b;C++){let L=C*v-y;w[e]=L*n,w[t]=R*r,w[i]=_,l.push(w.x,w.y,w.z),w[e]=0,w[t]=0,w[i]=f>0?1:-1,h.push(w.x,w.y,w.z),u.push(C/m),u.push(1-A/$),E+=1}}for(let P=0;P<$;P++)for(let I=0;I<m;I++){let U=c+I+b*P,D=c+I+b*(P+1),N=c+(I+1)+b*(P+1),F=c+(I+1)+b*P;o.push(U,D,F),o.push(D,N,F),T+=6}a.addGroup(d,T,g),d+=T,c+=E}p("z","y","x",-1,-1,i,t,e,s,r,0),p("z","y","x",1,-1,i,t,-e,s,r,1),p("x","z","y",1,1,e,i,t,n,s,2),p("x","z","y",1,-1,e,i,-t,n,s,3),p("x","y","z",1,-1,e,t,i,n,r,4),p("x","y","z",-1,-1,e,t,-i,n,r,5),this.setIndex(o),this.setAttribute("position",new t$(l,3)),this.setAttribute("normal",new t$(h,3)),this.setAttribute("uv",new t$(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new tG(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function tH(e){let t={};for(let i in e)for(let n in t[i]={},e[i]){let r=e[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[i][n]=null):t[i][n]=r.clone():Array.isArray(r)?t[i][n]=r.slice():t[i][n]=r}return t}function t2(e){let t={};for(let i=0;i<e.length;i++){let n=tH(e[i]);for(let r in n)t[r]=n[r]}return t}function tk(e){return null===e.getRenderTarget()?e.outputColorSpace:i}let tV={clone:tH,merge:t2};class t3 extends te{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=tH(e.uniforms),this.uniformsGroups=function e(t){let i=[];for(let n=0;n<t.length;n++)i.push(t[n].clone());return i}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);for(let i in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){let n=this.uniforms[i],r=n.value;r&&r.isTexture?t.uniforms[i]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[i]={type:"m4",value:r.toArray()}:t.uniforms[i]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;let s={};for(let a in this.extensions)!0===this.extensions[a]&&(s[a]=!0);return Object.keys(s).length>0&&(t.extensions=s),t}}class tW extends eW{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new eM,this.projectionMatrix=new eM,this.projectionMatrixInverse=new eM,this.coordinateSystem=2e3}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class t6 extends tW{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){let t=.5*this.getFilmHeight()/e;this.fov=2*h*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){let e=Math.tan(.5*l*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*h*Math.atan(Math.tan(.5*l*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,n,r,s){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(.5*l*this.fov)/this.zoom,i=2*t,n=this.aspect*i,r=-.5*n,s=this.view;if(null!==this.view&&this.view.enabled){let a=s.fullWidth,o=s.fullHeight;r+=s.offsetX*n/a,t-=s.offsetY*i/o,n*=s.width/a,i*=s.height/o}let h=this.filmOffset;0!==h&&(r+=e*h/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}class t4 extends eW{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null;let n=new t6(-90,1,e,t);n.layers=this.layers,this.add(n);let r=new t6(-90,1,e,t);r.layers=this.layers,this.add(r);let s=new t6(-90,1,e,t);s.layers=this.layers,this.add(s);let a=new t6(-90,1,e,t);a.layers=this.layers,this.add(a);let o=new t6(-90,1,e,t);o.layers=this.layers,this.add(o);let l=new t6(-90,1,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){let e=this.coordinateSystem,t=this.children.concat(),[i,n,r,s,a,o]=t;for(let l of t)this.remove(l);if(2e3===e)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),s.up.set(0,0,1),s.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else if(2001===e)i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),s.up.set(0,0,-1),s.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1);else throw Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(let h of t)this.add(h),h.updateMatrixWorld()}update(e,t){null===this.parent&&this.updateMatrixWorld();let i=this.renderTarget;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());let[n,r,s,a,o,l]=this.children,h=e.getRenderTarget(),u=e.toneMapping,c=e.xr.enabled;e.toneMapping=0,e.xr.enabled=!1;let d=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,n),e.setRenderTarget(i,1),e.render(t,r),e.setRenderTarget(i,2),e.render(t,s),e.setRenderTarget(i,3),e.render(t,a),e.setRenderTarget(i,4),e.render(t,o),i.texture.generateMipmaps=d,e.setRenderTarget(i,5),e.render(t,l),e.setRenderTarget(h),e.toneMapping=u,e.xr.enabled=c,i.texture.needsPMREMUpdate=!0}}class tX extends k{constructor(e,t,i,n,r,s,a,o,l,h){super(e=void 0!==e?e:[],t=void 0!==t?t:301,i,n,r,s,a,o,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class t7 extends W{constructor(e=1,i={}){super(e,e,i),this.isWebGLCubeRenderTarget=!0;let n={width:e,height:e,depth:1};void 0!==i.encoding&&(R("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),i.colorSpace=3001===i.encoding?t:""),this.texture=new tX([n,n,n,n,n,n],i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:1006}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new tG(5,5,5),r=new t3({name:"CubemapFromEquirect",uniforms:tH(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=t;let s=new tB(n,r),a=t.minFilter;1008===t.minFilter&&(t.minFilter=1006);let o=new t4(1,10,this);return o.update(e,s),t.minFilter=a,s.geometry.dispose(),s.material.dispose(),this}clear(e,t,i,n){let r=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(this,s),e.clear(t,i,n);e.setRenderTarget(r)}}let t5=new Y,tj=new Y,tq=new _;class tY{constructor(e=new Y(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){let n=t5.subVectors(i,t).cross(tj.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){let i=e.delta(t5),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;let r=-(e.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:t.copy(e.start).addScaledVector(i,r)}intersectsLine(e){let t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let i=t||tq.getNormalMatrix(e),n=this.coplanarPoint(t5).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}let tZ=new e$,tJ=new Y;class tK{constructor(e=new tY,t=new tY,i=new tY,n=new tY,r=new tY,s=new tY){this.planes=[e,t,i,n,r,s]}set(e,t,i,n,r,s){let a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(n),a[4].copy(r),a[5].copy(s),this}copy(e){let t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=2e3){let i=this.planes,n=e.elements,r=n[0],s=n[1],a=n[2],o=n[3],l=n[4],h=n[5],u=n[6],c=n[7],d=n[8],p=n[9],f=n[10],m=n[11],$=n[12],g=n[13],v=n[14],x=n[15];if(i[0].setComponents(o-r,c-l,m-d,x-$).normalize(),i[1].setComponents(o+r,c+l,m+d,x+$).normalize(),i[2].setComponents(o+s,c+h,m+p,x+g).normalize(),i[3].setComponents(o-s,c-h,m-p,x-g).normalize(),i[4].setComponents(o-a,c-u,m-f,x-v).normalize(),2e3===t)i[5].setComponents(o+a,c+u,m+f,x+v).normalize();else if(2001===t)i[5].setComponents(a,u,f,v).normalize();else throw Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(void 0!==e.boundingSphere)null===e.boundingSphere&&e.computeBoundingSphere(),tZ.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{let t=e.geometry;null===t.boundingSphere&&t.computeBoundingSphere(),tZ.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(tZ)}intersectsSprite(e){return tZ.center.set(0,0,0),tZ.radius=.7071067811865476,tZ.applyMatrix4(e.matrixWorld),this.intersectsSphere(tZ)}intersectsSphere(e){let t=this.planes,i=e.center,n=-e.radius;for(let r=0;r<6;r++){let s=t[r].distanceToPoint(i);if(s<n)return!1}return!0}intersectsBox(e){let t=this.planes;for(let i=0;i<6;i++){let n=t[i];if(tJ.x=n.normal.x>0?e.max.x:e.min.x,tJ.y=n.normal.y>0?e.max.y:e.min.y,tJ.z=n.normal.z>0?e.max.z:e.min.z,0>n.distanceToPoint(tJ))return!1}return!0}containsPoint(e){let t=this.planes;for(let i=0;i<6;i++)if(0>t[i].distanceToPoint(e))return!1;return!0}clone(){return new this.constructor().copy(this)}}function t9(){let e=null,t=!1,i=null,n=null;function r(t,s){i(t,s),n=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==i&&(n=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(e){i=e},setContext:function(t){e=t}}}function tQ(e,t){let i=t.isWebGL2,n=new WeakMap;return{get:function e(t){return t.isInterleavedBufferAttribute&&(t=t.data),n.get(t)},remove:function t(i){i.isInterleavedBufferAttribute&&(i=i.data);let r=n.get(i);r&&(e.deleteBuffer(r.buffer),n.delete(i))},update:function t(r,s){if(r.isGLBufferAttribute){let a=n.get(r);(!a||a.version<r.version)&&n.set(r,{buffer:r.buffer,type:r.type,bytesPerElement:r.elementSize,version:r.version});return}r.isInterleavedBufferAttribute&&(r=r.data);let o=n.get(r);void 0===o?n.set(r,function t(n,r){let s=n.array,a=n.usage,o=e.createBuffer();e.bindBuffer(r,o),e.bufferData(r,s,a),n.onUploadCallback();let l;if(s instanceof Float32Array)l=e.FLOAT;else if(s instanceof Uint16Array){if(n.isFloat16BufferAttribute){if(i)l=e.HALF_FLOAT;else throw Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.")}else l=e.UNSIGNED_SHORT}else if(s instanceof Int16Array)l=e.SHORT;else if(s instanceof Uint32Array)l=e.UNSIGNED_INT;else if(s instanceof Int32Array)l=e.INT;else if(s instanceof Int8Array)l=e.BYTE;else if(s instanceof Uint8Array)l=e.UNSIGNED_BYTE;else if(s instanceof Uint8ClampedArray)l=e.UNSIGNED_BYTE;else throw Error("THREE.WebGLAttributes: Unsupported buffer data format: "+s);return{buffer:o,type:l,bytesPerElement:s.BYTES_PER_ELEMENT,version:n.version}}(r,s)):o.version<r.version&&(function t(n,r,s){let a=r.array,o=r.updateRange;e.bindBuffer(s,n),-1===o.count?e.bufferSubData(s,0,a):(i?e.bufferSubData(s,o.offset*a.BYTES_PER_ELEMENT,a,o.offset,o.count):e.bufferSubData(s,o.offset*a.BYTES_PER_ELEMENT,a.subarray(o.offset,o.offset+o.count)),o.count=-1),r.onUploadCallback()}(o.buffer,r,s),o.version=r.version)}}}class ie extends tb{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};let r=e/2,s=t/2,a=Math.floor(i),o=Math.floor(n),l=a+1,h=o+1,u=e/a,c=t/o,d=[],p=[],f=[],m=[];for(let $=0;$<h;$++){let g=$*c-s;for(let v=0;v<l;v++){let x=v*u-r;p.push(x,-g,0),f.push(0,0,1),m.push(v/a),m.push(1-$/o)}}for(let y=0;y<o;y++)for(let S=0;S<a;S++){let _=S+l*y,b=S+l*(y+1),M=S+1+l*(y+1),E=S+1+l*y;d.push(_,b,E),d.push(b,M,E)}this.setIndex(d),this.setAttribute("position",new t$(p,3)),this.setAttribute("normal",new t$(f,3)),this.setAttribute("uv",new t$(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ie(e.width,e.height,e.widthSegments,e.heightSegments)}}let it={alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	if ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n	const mat3 XYZ_TO_REC709 = mat3(\n		 3.2404542, -0.9692660,  0.0556434,\n		-1.5371385,  1.8760108, -0.2040259,\n		-0.4985314,  0.0415560,  1.0572252\n	);\n	vec3 Fresnel0ToIor( vec3 fresnel0 ) {\n		vec3 sqrtF0 = sqrt( fresnel0 );\n		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n	}\n	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n	}\n	float IorToFresnel0( float transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n	}\n	vec3 evalSensitivity( float OPD, vec3 shift ) {\n		float phase = 2.0 * PI * OPD * 1.0e-9;\n		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n		xyz /= 1.0685e-7;\n		vec3 rgb = XYZ_TO_REC709 * xyz;\n		return rgb;\n	}\n	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n		vec3 I;\n		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n		float cosTheta2Sq = 1.0 - sinTheta2Sq;\n		if ( cosTheta2Sq < 0.0 ) {\n			 return vec3( 1.0 );\n		}\n		float cosTheta2 = sqrt( cosTheta2Sq );\n		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n		float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n		float R21 = R12;\n		float T121 = 1.0 - R12;\n		float phi12 = 0.0;\n		if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n		float phi21 = PI - phi12;\n		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n		vec3 phi23 = vec3( 0.0 );\n		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n		vec3 phi = vec3( phi21 ) + phi23;\n		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n		vec3 r123 = sqrt( R123 );\n		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n		vec3 C0 = R12 + Rs;\n		I = C0;\n		vec3 Cm = Rs - T121;\n		for ( int m = 1; m <= 2; ++ m ) {\n			Cm *= r123;\n			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n			I += Cm * Sm;\n		}\n		return max( I, vec3( 0.0 ) );\n	}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vBumpMapUv );\n		vec2 dSTdy = dFdy( vBumpMapUv );\n		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = dFdx( surf_pos.xyz );\n		vec3 vSigmaY = dFdy( surf_pos.xyz );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n	return dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define cubeUV_r0 1.0\n	#define cubeUV_v0 0.339\n	#define cubeUV_m0 - 2.0\n	#define cubeUV_r1 0.8\n	#define cubeUV_v1 0.276\n	#define cubeUV_m1 - 1.0\n	#define cubeUV_r4 0.4\n	#define cubeUV_v4 0.046\n	#define cubeUV_m4 2.0\n	#define cubeUV_r5 0.305\n	#define cubeUV_v5 0.016\n	#define cubeUV_m5 3.0\n	#define cubeUV_r6 0.21\n	#define cubeUV_v6 0.0038\n	#define cubeUV_m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= cubeUV_r1 ) {\n			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n		} else if ( roughness >= cubeUV_r4 ) {\n			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n		} else if ( roughness >= cubeUV_r5 ) {\n			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n		} else if ( roughness >= cubeUV_r6 ) {\n			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	#ifdef USE_ANISOTROPY\n		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n			#ifdef ENVMAP_TYPE_CUBE_UV\n				vec3 bentNormal = cross( bitangent, viewDir );\n				bentNormal = normalize( cross( bentNormal, bitangent ) );\n				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n				return getIBLRadiance( viewDir, bentNormal, roughness );\n			#else\n				return vec3( 0.0 );\n			#endif\n		}\n	#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		vec2 fw = fwidth( coord ) * 0.5;\n		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n	vec3 diffuseColor;\n	float specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Lambert\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( LEGACY_LIGHTS )\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#else\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	material.ior = ior;\n	#ifdef USE_SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULAR_COLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n		#endif\n		#ifdef USE_SPECULAR_INTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n	material.iridescence = iridescence;\n	material.iridescenceIOR = iridescenceIOR;\n	#ifdef USE_IRIDESCENCEMAP\n		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n	#endif\n	#ifdef USE_IRIDESCENCE_THICKNESSMAP\n		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n	#else\n		material.iridescenceThickness = iridescenceThicknessMaximum;\n	#endif\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEEN_COLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	#ifdef USE_ANISOTROPYMAP\n		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n	#else\n		vec2 anisotropyV = anisotropyVector;\n	#endif\n	material.anisotropy = length( anisotropyV );\n	anisotropyV /= material.anisotropy;\n	material.anisotropy = saturate( material.anisotropy );\n	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;\n	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_IRIDESCENCE\n		float iridescence;\n		float iridescenceIOR;\n		float iridescenceThickness;\n		vec3 iridescenceFresnel;\n		vec3 iridescenceF0;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n	#ifdef IOR\n		float ior;\n	#endif\n	#ifdef USE_TRANSMISSION\n		float transmission;\n		float transmissionAlpha;\n		float thickness;\n		float attenuationDistance;\n		vec3 attenuationColor;\n	#endif\n	#ifdef USE_ANISOTROPY\n		float anisotropy;\n		float alphaT;\n		vec3 anisotropyT;\n		vec3 anisotropyB;\n	#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n		float v = 0.5 / ( gv + gl );\n		return saturate(v);\n	}\n	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n		float a2 = alphaT * alphaB;\n		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n		highp float v2 = dot( v, v );\n		float w2 = a2 / v2;\n		return RECIPROCAL_PI * a2 * pow2 ( w2 );\n	}\n#endif\n#ifdef USE_CLEARCOAT\n	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n		vec3 f0 = material.clearcoatF0;\n		float f90 = material.clearcoatF90;\n		float roughness = material.clearcoatRoughness;\n		float alpha = pow2( roughness );\n		vec3 halfDir = normalize( lightDir + viewDir );\n		float dotNL = saturate( dot( normal, lightDir ) );\n		float dotNV = saturate( dot( normal, viewDir ) );\n		float dotNH = saturate( dot( normal, halfDir ) );\n		float dotVH = saturate( dot( viewDir, halfDir ) );\n		vec3 F = F_Schlick( f0, f90, dotVH );\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n		return F * ( V * D );\n	}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n	vec3 f0 = material.specularColor;\n	float f90 = material.specularF90;\n	float roughness = material.roughness;\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	#ifdef USE_IRIDESCENCE\n		F = mix( F, material.iridescenceFresnel, material.iridescence );\n	#endif\n	#ifdef USE_ANISOTROPY\n		float dotTL = dot( material.anisotropyT, lightDir );\n		float dotTV = dot( material.anisotropyT, viewDir );\n		float dotTH = dot( material.anisotropyT, halfDir );\n		float dotBL = dot( material.anisotropyB, lightDir );\n		float dotBV = dot( material.anisotropyB, viewDir );\n		float dotBH = dot( material.anisotropyB, halfDir );\n		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n	#else\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n	#endif\n	return F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	#ifdef USE_IRIDESCENCE\n		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n	#else\n		vec3 Fr = specularColor;\n	#endif\n	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	#ifdef USE_IRIDESCENCE\n		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n	#else\n		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	#endif\n	vec3 totalScattering = singleScattering + multiScattering;\n	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n	float dotNVi = saturate( dot( normal, geometry.viewDir ) );\n	if ( material.iridescenceThickness == 0.0 ) {\n		material.iridescence = 0.0;\n	} else {\n		material.iridescence = saturate( material.iridescence );\n	}\n	if ( material.iridescence > 0.0 ) {\n		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n	}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	vec4 spotColor;\n	vec3 spotLightCoord;\n	bool inSpotLightMap;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometry, directLight );\n		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n		#else\n		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#endif\n		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n		#endif\n		#undef SPOT_LIGHT_MAP_INDEX\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometry.normal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	#ifdef USE_ANISOTROPY\n		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );\n	#else\n		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n	#endif\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",map_fragment:"#ifdef USE_MAP\n	diffuseColor *= texture2D( map, vMapUv );\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	#if defined( USE_POINTS_UV )\n		vec2 uv = vUv;\n	#else\n		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n	#endif\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n	varying vec2 vUv;\n#else\n	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n		uniform mat3 uvTransform;\n	#endif\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		uniform sampler2DArray morphTargetsTexture;\n		uniform ivec2 morphTargetsTextureSize;\n		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n			int y = texelIndex / morphTargetsTextureSize.x;\n			int x = texelIndex - y * morphTargetsTextureSize.x;\n			ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n			return texelFetch( morphTargetsTexture, morphUV, 0 );\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = dFdx( vViewPosition );\n	vec3 fdy = dFdy( vViewPosition );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal *= faceDirection;\n	#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n	#ifdef USE_TANGENT\n		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn[0] *= faceDirection;\n		tbn[1] *= faceDirection;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	#ifdef USE_TANGENT\n		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn2[0] *= faceDirection;\n		tbn2[1] *= faceDirection;\n	#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	normal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( uv.st );\n		vec2 st1 = dFdy( uv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n		return mat3( T * scale, B * scale, N );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	clearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n	uniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n	return packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n	vec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n		shadowWorldPosition = worldPosition;\n		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n		#endif\n		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	uniform highp sampler2D boneTexture;\n	uniform int boneTextureSize;\n	mat4 getBoneMatrix( const in float i ) {\n		float j = i * 4.0;\n		float x = mod( j, float( boneTextureSize ) );\n		float y = floor( j / float( boneTextureSize ) );\n		float dx = 1.0 / float( boneTextureSize );\n		float dy = 1.0 / float( boneTextureSize );\n		y = dy * ( y + 0.5 );\n		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n		mat4 bone = mat4( v1, v2, v3, v4 );\n		return bone;\n	}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	material.transmission = transmission;\n	material.transmissionAlpha = 1.0;\n	material.thickness = thickness;\n	material.attenuationDistance = attenuationDistance;\n	material.attenuationColor = attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmitted = getIBLVolumeRefraction(\n		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n		material.attenuationColor, material.attenuationDistance );\n	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	float w0( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n	}\n	float w1( float a ) {\n		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n	}\n	float w2( float a ){\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n	}\n	float w3( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * a * a );\n	}\n	float g0( float a ) {\n		return w0( a ) + w1( a );\n	}\n	float g1( float a ) {\n		return w2( a ) + w3( a );\n	}\n	float h0( float a ) {\n		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n	}\n	float h1( float a ) {\n		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n	}\n	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n		uv = uv * texelSize.zw + 0.5;\n		vec2 iuv = floor( uv );\n		vec2 fuv = fract( uv );\n		float g0x = g0( fuv.x );\n		float g1x = g1( fuv.x );\n		float h0x = h0( fuv.x );\n		float h1x = h1( fuv.x );\n		float h0y = h0( fuv.y );\n		float h1y = h1( fuv.y );\n		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n	}\n	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n		vec2 fLodSizeInv = 1.0 / fLodSize;\n		vec2 cLodSizeInv = 1.0 / cLodSize;\n		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n		return mix( fSample, cSample, fract( lod ) );\n	}\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n	}\n	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( isinf( attenuationDistance ) ) {\n			return vec3( 1.0 );\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 attenuatedColor = transmittance * transmittedLight.rgb;\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n	}\n#endif",uv_pars_fragment:"#ifdef USE_UV\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	uniform mat3 mapTransform;\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform mat3 alphaMapTransform;\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	uniform mat3 lightMapTransform;\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	uniform mat3 aoMapTransform;\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	uniform mat3 bumpMapTransform;\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	uniform mat3 normalMapTransform;\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	uniform mat3 displacementMapTransform;\n	varying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	uniform mat3 emissiveMapTransform;\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	uniform mat3 metalnessMapTransform;\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	uniform mat3 roughnessMapTransform;\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	uniform mat3 anisotropyMapTransform;\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	uniform mat3 clearcoatMapTransform;\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform mat3 clearcoatNormalMapTransform;\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform mat3 clearcoatRoughnessMapTransform;\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	uniform mat3 sheenColorMapTransform;\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	uniform mat3 sheenRoughnessMapTransform;\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	uniform mat3 iridescenceMapTransform;\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform mat3 iridescenceThicknessMapTransform;\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	uniform mat3 specularMapTransform;\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	uniform mat3 specularColorMapTransform;\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	uniform mat3 specularIntensityMapTransform;\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#ifdef USE_UV\n	vUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n	uniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n	uniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n	#else\n		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n	gl_FragColor = texColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_lambert_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef USE_SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULAR_COLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n	#ifdef USE_SPECULAR_INTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n	uniform float iridescence;\n	uniform float iridescenceIOR;\n	uniform float iridescenceThicknessMinimum;\n	uniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEEN_COLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	uniform vec2 anisotropyVector;\n	#ifdef USE_ANISOTROPYMAP\n		uniform sampler2D anisotropyMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n	#endif\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n	varying vec2 vUv;\n	uniform mat3 uvTransform;\n#endif\nvoid main() {\n	#ifdef USE_POINTS_UV\n		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	#endif\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	#include <logdepthbuf_fragment>\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}"},ii={common:{diffuse:{value:new ts(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new _},alphaMap:{value:null},alphaMapTransform:{value:new _},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new _}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new _}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new _}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new _},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new _},normalScale:{value:new S(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new _},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new _}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new _}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new _}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ts(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ts(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new _},alphaTest:{value:0},uvTransform:{value:new _}},sprite:{diffuse:{value:new ts(16777215)},opacity:{value:1},center:{value:new S(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new _},alphaMap:{value:null},alphaMapTransform:{value:new _},alphaTest:{value:0}}},ir={basic:{uniforms:t2([ii.common,ii.specularmap,ii.envmap,ii.aomap,ii.lightmap,ii.fog]),vertexShader:it.meshbasic_vert,fragmentShader:it.meshbasic_frag},lambert:{uniforms:t2([ii.common,ii.specularmap,ii.envmap,ii.aomap,ii.lightmap,ii.emissivemap,ii.bumpmap,ii.normalmap,ii.displacementmap,ii.fog,ii.lights,{emissive:{value:new ts(0)}}]),vertexShader:it.meshlambert_vert,fragmentShader:it.meshlambert_frag},phong:{uniforms:t2([ii.common,ii.specularmap,ii.envmap,ii.aomap,ii.lightmap,ii.emissivemap,ii.bumpmap,ii.normalmap,ii.displacementmap,ii.fog,ii.lights,{emissive:{value:new ts(0)},specular:{value:new ts(1118481)},shininess:{value:30}}]),vertexShader:it.meshphong_vert,fragmentShader:it.meshphong_frag},standard:{uniforms:t2([ii.common,ii.envmap,ii.aomap,ii.lightmap,ii.emissivemap,ii.bumpmap,ii.normalmap,ii.displacementmap,ii.roughnessmap,ii.metalnessmap,ii.fog,ii.lights,{emissive:{value:new ts(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:it.meshphysical_vert,fragmentShader:it.meshphysical_frag},toon:{uniforms:t2([ii.common,ii.aomap,ii.lightmap,ii.emissivemap,ii.bumpmap,ii.normalmap,ii.displacementmap,ii.gradientmap,ii.fog,ii.lights,{emissive:{value:new ts(0)}}]),vertexShader:it.meshtoon_vert,fragmentShader:it.meshtoon_frag},matcap:{uniforms:t2([ii.common,ii.bumpmap,ii.normalmap,ii.displacementmap,ii.fog,{matcap:{value:null}}]),vertexShader:it.meshmatcap_vert,fragmentShader:it.meshmatcap_frag},points:{uniforms:t2([ii.points,ii.fog]),vertexShader:it.points_vert,fragmentShader:it.points_frag},dashed:{uniforms:t2([ii.common,ii.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:it.linedashed_vert,fragmentShader:it.linedashed_frag},depth:{uniforms:t2([ii.common,ii.displacementmap]),vertexShader:it.depth_vert,fragmentShader:it.depth_frag},normal:{uniforms:t2([ii.common,ii.bumpmap,ii.normalmap,ii.displacementmap,{opacity:{value:1}}]),vertexShader:it.meshnormal_vert,fragmentShader:it.meshnormal_frag},sprite:{uniforms:t2([ii.sprite,ii.fog]),vertexShader:it.sprite_vert,fragmentShader:it.sprite_frag},background:{uniforms:{uvTransform:{value:new _},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:it.background_vert,fragmentShader:it.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:it.backgroundCube_vert,fragmentShader:it.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:it.cube_vert,fragmentShader:it.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:it.equirect_vert,fragmentShader:it.equirect_frag},distanceRGBA:{uniforms:t2([ii.common,ii.displacementmap,{referencePosition:{value:new Y},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:it.distanceRGBA_vert,fragmentShader:it.distanceRGBA_frag},shadow:{uniforms:t2([ii.lights,ii.fog,{color:{value:new ts(0)},opacity:{value:1}},]),vertexShader:it.shadow_vert,fragmentShader:it.shadow_frag}};ir.physical={uniforms:t2([ir.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new _},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new _},clearcoatNormalScale:{value:new S(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new _},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new _},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new _},sheen:{value:0},sheenColor:{value:new ts(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new _},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new _},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new _},transmissionSamplerSize:{value:new S},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new _},attenuationDistance:{value:0},attenuationColor:{value:new ts(0)},specularColor:{value:new ts(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new _},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new _},anisotropyVector:{value:new S},anisotropyMap:{value:null},anisotropyMapTransform:{value:new _}}]),vertexShader:it.meshphysical_vert,fragmentShader:it.meshphysical_frag};let is={r:0,b:0,g:0};function ia(e,i,n,r,s,a,o){let l=new ts(0),h=!0===a?0:1,u,c,d=null,p=0,f=null;function m(t,i){t.getRGB(is,tk(e)),r.buffers.color.setClear(is.r,is.g,is.b,i,o)}return{getClearColor:function(){return l},setClearColor:function(e,t=1){l.set(e),m(l,h=t)},getClearAlpha:function(){return h},setClearAlpha:function(e){m(l,h=e)},render:function a($,g){let v=!1,x=!0===g.isScene?g.background:null;if(x&&x.isTexture){let y=g.backgroundBlurriness>0;x=(y?n:i).get(x)}null===x?m(l,h):x&&x.isColor&&(m(x,1),v=!0);let S=e.xr,_=S.getEnvironmentBlendMode();switch(_){case"opaque":v=!0;break;case"additive":r.buffers.color.setClear(0,0,0,1,o),v=!0;break;case"alpha-blend":r.buffers.color.setClear(0,0,0,0,o),v=!0}(e.autoClear||v)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),x&&(x.isCubeTexture||306===x.mapping)?(void 0===c&&((c=new tB(new tG(1,1,1),new t3({name:"BackgroundCubeMaterial",uniforms:tH(ir.backgroundCube.uniforms),vertexShader:ir.backgroundCube.vertexShader,fragmentShader:ir.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(e,t,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(c)),c.material.uniforms.envMap.value=x,c.material.uniforms.flipEnvMap.value=x.isCubeTexture&&!1===x.isRenderTargetTexture?-1:1,c.material.uniforms.backgroundBlurriness.value=g.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,c.material.toneMapped=x.colorSpace!==t,(d!==x||p!==x.version||f!==e.toneMapping)&&(c.material.needsUpdate=!0,d=x,p=x.version,f=e.toneMapping),c.layers.enableAll(),$.unshift(c,c.geometry,c.material,0,0,null)):x&&x.isTexture&&(void 0===u&&((u=new tB(new ie(2,2),new t3({name:"BackgroundMaterial",uniforms:tH(ir.background.uniforms),vertexShader:ir.background.vertexShader,fragmentShader:ir.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(u)),u.material.uniforms.t2D.value=x,u.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,u.material.toneMapped=x.colorSpace!==t,!0===x.matrixAutoUpdate&&x.updateMatrix(),u.material.uniforms.uvTransform.value.copy(x.matrix),(d!==x||p!==x.version||f!==e.toneMapping)&&(u.material.needsUpdate=!0,d=x,p=x.version,f=e.toneMapping),u.layers.enableAll(),$.unshift(u,u.geometry,u.material,0,0,null))}}}function io(e,t,i,n){let r=e.getParameter(e.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:t.get("OES_vertex_array_object"),a=n.isWebGL2||null!==s,o={},l=p(null),h=l,u=!1;function c(t){return n.isWebGL2?e.bindVertexArray(t):s.bindVertexArrayOES(t)}function d(t){return n.isWebGL2?e.deleteVertexArray(t):s.deleteVertexArrayOES(t)}function p(e){let t=[],i=[],n=[];for(let s=0;s<r;s++)t[s]=0,i[s]=0,n[s]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:i,attributeDivisors:n,object:e,attributes:{},index:null}}function f(){let e=h.newAttributes;for(let t=0,i=e.length;t<i;t++)e[t]=0}function m(e){$(e,0)}function $(i,r){let s=h.newAttributes,a=h.enabledAttributes,o=h.attributeDivisors;if(s[i]=1,0===a[i]&&(e.enableVertexAttribArray(i),a[i]=1),o[i]!==r){let l=n.isWebGL2?e:t.get("ANGLE_instanced_arrays");l[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,r),o[i]=r}}function g(){let t=h.newAttributes,i=h.enabledAttributes;for(let n=0,r=i.length;n<r;n++)i[n]!==t[n]&&(e.disableVertexAttribArray(n),i[n]=0)}function v(t,i,n,r,s,a,o){!0===o?e.vertexAttribIPointer(t,i,n,s,a):e.vertexAttribPointer(t,i,n,r,s,a)}function x(){y(),u=!0,h!==l&&c((h=l).object)}function y(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function r(l,d,x,y,S){let _=!1;if(a){let b=function t(i,r,a){let l=!0===a.wireframe,h=o[i.id];void 0===h&&(h={},o[i.id]=h);let u=h[r.id];void 0===u&&(u={},h[r.id]=u);let c=u[l];return void 0===c&&(c=p(n.isWebGL2?e.createVertexArray():s.createVertexArrayOES()),u[l]=c),c}(y,x,d);h!==b&&c((h=b).object),(_=function e(t,i,n,r){let s=h.attributes,a=i.attributes,o=0,l=n.getAttributes();for(let u in l){let c=l[u];if(c.location>=0){let d=s[u],p=a[u];if(void 0===p&&("instanceMatrix"===u&&t.instanceMatrix&&(p=t.instanceMatrix),"instanceColor"===u&&t.instanceColor&&(p=t.instanceColor)),void 0===d||d.attribute!==p||p&&d.data!==p.data)return!0;o++}}return h.attributesNum!==o||h.index!==r}(l,y,x,S))&&function e(t,i,n,r){let s={},a=i.attributes,o=0,l=n.getAttributes();for(let u in l){let c=l[u];if(c.location>=0){let d=a[u];void 0===d&&("instanceMatrix"===u&&t.instanceMatrix&&(d=t.instanceMatrix),"instanceColor"===u&&t.instanceColor&&(d=t.instanceColor));let p={};p.attribute=d,d&&d.data&&(p.data=d.data),s[u]=p,o++}}h.attributes=s,h.attributesNum=o,h.index=r}(l,y,x,S)}else{let M=!0===d.wireframe;(h.geometry!==y.id||h.program!==x.id||h.wireframe!==M)&&(h.geometry=y.id,h.program=x.id,h.wireframe=M,_=!0)}null!==S&&i.update(S,e.ELEMENT_ARRAY_BUFFER),(_||u)&&(u=!1,function r(s,a,o,l){if(!1===n.isWebGL2&&(s.isInstancedMesh||l.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;f();let h=l.attributes,u=o.getAttributes(),c=a.defaultAttributeValues;for(let d in u){let p=u[d];if(p.location>=0){let x=h[d];if(void 0===x&&("instanceMatrix"===d&&s.instanceMatrix&&(x=s.instanceMatrix),"instanceColor"===d&&s.instanceColor&&(x=s.instanceColor)),void 0!==x){let y=x.normalized,S=x.itemSize,_=i.get(x);if(void 0===_)continue;let b=_.buffer,M=_.type,E=_.bytesPerElement,T=!0===n.isWebGL2&&(M===e.INT||M===e.UNSIGNED_INT||1013===x.gpuType);if(x.isInterleavedBufferAttribute){let w=x.data,A=w.stride,R=x.offset;if(w.isInstancedInterleavedBuffer){for(let C=0;C<p.locationSize;C++)$(p.location+C,w.meshPerAttribute);!0!==s.isInstancedMesh&&void 0===l._maxInstanceCount&&(l._maxInstanceCount=w.meshPerAttribute*w.count)}else for(let L=0;L<p.locationSize;L++)m(p.location+L);e.bindBuffer(e.ARRAY_BUFFER,b);for(let P=0;P<p.locationSize;P++)v(p.location+P,S/p.locationSize,M,y,A*E,(R+S/p.locationSize*P)*E,T)}else{if(x.isInstancedBufferAttribute){for(let I=0;I<p.locationSize;I++)$(p.location+I,x.meshPerAttribute);!0!==s.isInstancedMesh&&void 0===l._maxInstanceCount&&(l._maxInstanceCount=x.meshPerAttribute*x.count)}else for(let U=0;U<p.locationSize;U++)m(p.location+U);e.bindBuffer(e.ARRAY_BUFFER,b);for(let D=0;D<p.locationSize;D++)v(p.location+D,S/p.locationSize,M,y,S*E,S/p.locationSize*D*E,T)}}else if(void 0!==c){let N=c[d];if(void 0!==N)switch(N.length){case 2:e.vertexAttrib2fv(p.location,N);break;case 3:e.vertexAttrib3fv(p.location,N);break;case 4:e.vertexAttrib4fv(p.location,N);break;default:e.vertexAttrib1fv(p.location,N)}}}}g()}(l,d,x,y),null!==S&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i.get(S).buffer))},reset:x,resetDefaultState:y,dispose:function e(){for(let t in x(),o){let i=o[t];for(let n in i){let r=i[n];for(let s in r)d(r[s].object),delete r[s];delete i[n]}delete o[t]}},releaseStatesOfGeometry:function e(t){if(void 0===o[t.id])return;let i=o[t.id];for(let n in i){let r=i[n];for(let s in r)d(r[s].object),delete r[s];delete i[n]}delete o[t.id]},releaseStatesOfProgram:function e(t){for(let i in o){let n=o[i];if(void 0===n[t.id])continue;let r=n[t.id];for(let s in r)d(r[s].object),delete r[s];delete n[t.id]}},initAttributes:f,enableAttribute:m,disableUnusedAttributes:g}}function il(e,t,i,n){let r=n.isWebGL2,s;function a(e){s=e}this.setMode=a,this.render=function t(n,r){e.drawArrays(s,n,r),i.update(r,s,1)},this.renderInstances=function n(a,o,l){if(0===l)return;let h,u;if(r)h=e,u="drawArraysInstanced";else if(h=t.get("ANGLE_instanced_arrays"),u="drawArraysInstancedANGLE",null===h){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}h[u](s,a,o,l),i.update(o,s,l)}}function ih(e,t,i){let n;function r(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let s="undefined"!=typeof WebGL2RenderingContext&&"WebGL2RenderingContext"===e.constructor.name,a=void 0!==i.precision?i.precision:"highp",o=r(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);let l=s||t.has("WEBGL_draw_buffers"),h=!0===i.logarithmicDepthBuffer,u=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),c=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=e.getParameter(e.MAX_TEXTURE_SIZE),p=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),f=e.getParameter(e.MAX_VERTEX_ATTRIBS),m=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),$=e.getParameter(e.MAX_VARYING_VECTORS),g=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),v=c>0,x=s||t.has("OES_texture_float"),y=s?e.getParameter(e.MAX_SAMPLES):0;return{isWebGL2:s,drawBuffers:l,getMaxAnisotropy:function i(){if(void 0!==n)return n;if(!0===t.has("EXT_texture_filter_anisotropic")){let r=t.get("EXT_texture_filter_anisotropic");n=e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:r,precision:a,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:c,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:m,maxVaryings:$,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:x,floatVertexTextures:v&&x,maxSamples:y}}function iu(e){let t=this,i=null,n=0,r=!1,s=!1,a=new tY,o=new _,l={value:null,needsUpdate:!1};function h(e,i,n,r){let s=null!==e?e.length:0,h=null;if(0!==s){if(h=l.value,!0!==r||null===h){let u=n+4*s,c=i.matrixWorldInverse;o.getNormalMatrix(c),(null===h||h.length<u)&&(h=new Float32Array(u));for(let d=0,p=n;d!==s;++d,p+=4)a.copy(e[d]).applyMatrix4(c,o),a.normal.toArray(h,p),h[p+3]=a.constant}l.value=h,l.needsUpdate=!0}return t.numPlanes=s,t.numIntersection=0,h}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t){let i=0!==e.length||t||0!==n||r;return r=t,n=e.length,i},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(e,t){i=h(e,t,0)},this.setState=function(a,o,u){let c=a.clippingPlanes,d=a.clipIntersection,p=a.clipShadows,f=e.get(a);if(r&&null!==c&&0!==c.length&&(!s||p)){let m=s?0:n,$=4*m,g=f.clippingState||null;l.value=g,g=h(c,o,$,u);for(let v=0;v!==$;++v)g[v]=i[v];f.clippingState=g,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=m}else s?h(null):(l.value!==i&&(l.value=i,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0)}}function ic(e){let t=new WeakMap;function i(e,t){return 303===t?e.mapping=301:304===t&&(e.mapping=302),e}function n(e){let i=e.target;i.removeEventListener("dispose",n);let r=t.get(i);void 0!==r&&(t.delete(i),r.dispose())}return{get:function r(s){if(s&&s.isTexture&&!1===s.isRenderTargetTexture){let a=s.mapping;if(303===a||304===a){if(t.has(s)){let o=t.get(s).texture;return i(o,s.mapping)}{let l=s.image;if(!l||!(l.height>0))return null;{let h=new t7(l.height/2);return h.fromEquirectangularTexture(e,s),t.set(s,h),s.addEventListener("dispose",n),i(h.texture,s.mapping)}}}}return s},dispose:function e(){t=new WeakMap}}}class id extends tW{constructor(e=-1,t=1,i=1,n=-1,r=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=r,this.far=s,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,r,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2,r=i-e,s=i+e,a=n+t,o=n-t;if(null!==this.view&&this.view.enabled){let l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,s=r+l*this.view.width,a-=h*this.view.offsetY,o=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,s,a,o,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}let ip=[.125,.215,.35,.446,.526,.582],im=new id,i$=new ts,ig=null,iv=(1+Math.sqrt(5))/2,i8=1/iv,ix=[new Y(1,1,1),new Y(-1,1,1),new Y(1,1,-1),new Y(-1,1,-1),new Y(0,iv,i8),new Y(0,iv,-i8),new Y(i8,0,iv),new Y(-i8,0,iv),new Y(iv,i8,0),new Y(-iv,i8,0)];class iy{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100){ig=this._renderer.getRenderTarget(),this._setSize(256);let r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,i,n,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=iM(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=ib(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(ig),e.scissorTest=!1,i_(e,0,0,e.width,e.height)}_fromTexture(e,t){301===e.mapping||302===e.mapping?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),ig=this._renderer.getRenderTarget();let i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){let e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:1006,minFilter:1006,generateMipmaps:!1,type:1016,format:1023,colorSpace:i,depthBuffer:!1},r=iS(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=iS(e,t,n);let{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function e(t){let i=[],n=[],r=[],s=t,a=t-4+1+ip.length;for(let o=0;o<a;o++){let l=Math.pow(2,s);n.push(l);let h=1/l;o>t-4?h=ip[o-t+4-1]:0===o&&(h=0),r.push(h);let u=1/(l-2),c=-u,d=1+u,p=[c,c,d,c,d,d,c,c,d,d,c,d],f=new Float32Array(108),m=new Float32Array(72),$=new Float32Array(36);for(let g=0;g<6;g++){let v=g%3*2/3-1,x=g>2?0:-1,y=[v,x,0,v+2/3,x,0,v+2/3,x+1,0,v,x,0,v+2/3,x+1,0,v,x+1,0];f.set(y,18*g),m.set(p,12*g);let S=[g,g,g,g,g,g];$.set(S,6*g)}let _=new tb;_.setAttribute("position",new tp(f,3)),_.setAttribute("uv",new tp(m,2)),_.setAttribute("faceIndex",new tp($,1)),i.push(_),s>4&&s--}return{lodPlanes:i,sizeLods:n,sigmas:r}}(s)),this._blurMaterial=function e(t,i,n){let r=new Float32Array(20),s=new Y(0,1,0),a=new t3({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/i,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:iE(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:0,depthTest:!1,depthWrite:!1});return a}(s,e,t)}return r}_compileMaterial(e){let t=new tB(this._lodPlanes[0],e);this._renderer.compile(t,im)}_sceneToCubeUV(e,t,i,n){let r=new t6(90,1,t,i),s=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,h=o.toneMapping;o.getClearColor(i$),o.toneMapping=0,o.autoClear=!1;let u=new to({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),c=new tB(new tG,u),d=!1,p=e.background;p?p.isColor&&(u.color.copy(p),e.background=null,d=!0):(u.color.copy(i$),d=!0);for(let f=0;f<6;f++){let m=f%3;0===m?(r.up.set(0,s[f],0),r.lookAt(a[f],0,0)):1===m?(r.up.set(0,0,s[f]),r.lookAt(0,a[f],0)):(r.up.set(0,s[f],0),r.lookAt(0,0,a[f]));let $=this._cubeSize;i_(n,m*$,f>2?$:0,$,$),o.setRenderTarget(n),d&&o.render(c,r),o.render(e,r)}c.geometry.dispose(),c.material.dispose(),o.toneMapping=h,o.autoClear=l,e.background=p}_textureToCubeUV(e,t){let i=this._renderer,n=301===e.mapping||302===e.mapping;n?(null===this._cubemapMaterial&&(this._cubemapMaterial=iM()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=ib());let r=n?this._cubemapMaterial:this._equirectMaterial,s=new tB(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=e;let o=this._cubeSize;i_(t,0,0,3*o,2*o),i.setRenderTarget(t),i.render(s,im)}_applyPMREM(e){let t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let n=1;n<this._lodPlanes.length;n++){let r=Math.sqrt(this._sigmas[n]*this._sigmas[n]-this._sigmas[n-1]*this._sigmas[n-1]),s=ix[(n-1)%ix.length];this._blur(e,n-1,n,r,s)}t.autoClear=i}_blur(e,t,i,n,r){let s=this._pingPongRenderTarget;this._halfBlur(e,s,t,i,n,"latitudinal",r),this._halfBlur(s,e,i,i,n,"longitudinal",r)}_halfBlur(e,t,i,n,r,s,a){let o=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");let h=new tB(this._lodPlanes[n],l),u=l.uniforms,c=this._sizeLods[i]-1,d=isFinite(r)?Math.PI/(2*c):2*Math.PI/39,p=r/d,f=isFinite(r)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);let m=[],$=0;for(let g=0;g<20;++g){let v=g/p,x=Math.exp(-v*v/2);m.push(x),0===g?$+=x:g<f&&($+=2*x)}for(let y=0;y<m.length;y++)m[y]=m[y]/$;u.envMap.value=e.texture,u.samples.value=f,u.weights.value=m,u.latitudinal.value="latitudinal"===s,a&&(u.poleAxis.value=a);let{_lodMax:S}=this;u.dTheta.value=d,u.mipInt.value=S-i;let _=this._sizeLods[n],b=4*(this._cubeSize-_);i_(t,3*_*(n>S-4?n-S+4:0),b,3*_,2*_),o.setRenderTarget(t),o.render(h,im)}}function iS(e,t,i){let n=new W(e,t,i);return n.texture.mapping=306,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function i_(e,t,i,n,r){e.viewport.set(t,i,n,r),e.scissor.set(t,i,n,r)}function ib(){return new t3({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:iE(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function iM(){return new t3({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:iE(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function iE(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function iT(e){let t=new WeakMap,i=null;function n(e){let i=e.target;i.removeEventListener("dispose",n);let r=t.get(i);void 0!==r&&(t.delete(i),r.dispose())}return{get:function r(s){if(s&&s.isTexture){let a=s.mapping,o=303===a||304===a,l=301===a||302===a;if(o||l){if(s.isRenderTargetTexture&&!0===s.needsPMREMUpdate){s.needsPMREMUpdate=!1;let h=t.get(s);return null===i&&(i=new iy(e)),h=o?i.fromEquirectangular(s,h):i.fromCubemap(s,h),t.set(s,h),h.texture}if(t.has(s))return t.get(s).texture;{let u=s.image;if(!(o&&u&&u.height>0||l&&u&&function e(t){let i=0;for(let n=0;n<6;n++)void 0!==t[n]&&i++;return 6===i}(u)))return null;{null===i&&(i=new iy(e));let c=o?i.fromEquirectangular(s):i.fromCubemap(s);return t.set(s,c),s.addEventListener("dispose",n),c.texture}}}}return s},dispose:function e(){t=new WeakMap,null!==i&&(i.dispose(),i=null)}}}function iw(e){let t={};function i(i){if(void 0!==t[i])return t[i];let n;switch(i){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=e.getExtension(i)}return t[i]=n,n}return{has:function(e){return null!==i(e)},init:function(e){e.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float"),i("WEBGL_multisampled_render_to_texture")},get:function(e){let t=i(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function iA(e,t,i,n){let r={},s=new WeakMap;function a(e){let o=e.target;for(let l in null!==o.index&&t.remove(o.index),o.attributes)t.remove(o.attributes[l]);for(let h in o.morphAttributes){let u=o.morphAttributes[h];for(let c=0,d=u.length;c<d;c++)t.remove(u[c])}o.removeEventListener("dispose",a),delete r[o.id];let p=s.get(o);p&&(t.remove(p),s.delete(o)),n.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,i.memory.geometries--}function o(e){let i=[],n=e.index,r=e.attributes.position,a=0;if(null!==n){let o=n.array;a=n.version;for(let l=0,h=o.length;l<h;l+=3){let u=o[l+0],c=o[l+1],d=o[l+2];i.push(u,c,c,d,d,u)}}else{let p=r.array;a=r.version;for(let f=0,m=p.length/3-1;f<m;f+=3){let $=f+0,g=f+1,v=f+2;i.push($,g,g,v,v,$)}}let x=new(M(i)?tm:tf)(i,1);x.version=a;let y=s.get(e);y&&t.remove(y),s.set(e,x)}return{get:function e(t,n){return!0===r[n.id]||(n.addEventListener("dispose",a),r[n.id]=!0,i.memory.geometries++),n},update:function i(n){let r=n.attributes;for(let s in r)t.update(r[s],e.ARRAY_BUFFER);let a=n.morphAttributes;for(let o in a){let l=a[o];for(let h=0,u=l.length;h<u;h++)t.update(l[h],e.ARRAY_BUFFER)}},getWireframeAttribute:function e(t){let i=s.get(t);if(i){let n=t.index;null!==n&&i.version<n.version&&o(t)}else o(t);return s.get(t)}}}function iR(e,t,i,n){let r=n.isWebGL2,s;function a(e){s=e}let o,l;this.setMode=a,this.setIndex=function e(t){o=t.type,l=t.bytesPerElement},this.render=function t(n,r){e.drawElements(s,r,o,n*l),i.update(r,s,1)},this.renderInstances=function n(a,h,u){if(0===u)return;let c,d;if(r)c=e,d="drawElementsInstanced";else if(c=t.get("ANGLE_instanced_arrays"),d="drawElementsInstancedANGLE",null===c){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}c[d](s,h,o,a*l,u),i.update(h,s,u)}}function iC(e){let t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function e(){t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function i(n,r,s){switch(t.calls++,r){case e.TRIANGLES:t.triangles+=s*(n/3);break;case e.LINES:t.lines+=s*(n/2);break;case e.LINE_STRIP:t.lines+=s*(n-1);break;case e.LINE_LOOP:t.lines+=s*n;break;case e.POINTS:t.points+=s*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r)}}}}function iL(e,t){return e[0]-t[0]}function i0(e,t){return Math.abs(t[1])-Math.abs(e[1])}function iP(e,t,i){let n={},r=new Float32Array(8),s=new WeakMap,a=new V,o=[];for(let l=0;l<8;l++)o[l]=[l,0];return{update:function l(h,u,c){let d=h.morphTargetInfluences;if(!0===t.isWebGL2){let p=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,f=void 0!==p?p.length:0,m=s.get(u);if(void 0===m||m.count!==f){void 0!==m&&m.texture.dispose();let $=void 0!==u.morphAttributes.position,g=void 0!==u.morphAttributes.normal,v=void 0!==u.morphAttributes.color,x=u.morphAttributes.position||[],y=u.morphAttributes.normal||[],_=u.morphAttributes.color||[],b=0;!0===$&&(b=1),!0===g&&(b=2),!0===v&&(b=3);let M=u.attributes.position.count*b,E=1;M>t.maxTextureSize&&(E=Math.ceil(M/t.maxTextureSize),M=t.maxTextureSize);let T=new Float32Array(M*E*4*f),w=new X(T,M,E,f);w.type=1015,w.needsUpdate=!0;let A=4*b;for(let R=0;R<f;R++){let C=x[R],L=y[R],P=_[R],I=M*E*4*R;for(let U=0;U<C.count;U++){let D=U*A;!0===$&&(a.fromBufferAttribute(C,U),T[I+D+0]=a.x,T[I+D+1]=a.y,T[I+D+2]=a.z,T[I+D+3]=0),!0===g&&(a.fromBufferAttribute(L,U),T[I+D+4]=a.x,T[I+D+5]=a.y,T[I+D+6]=a.z,T[I+D+7]=0),!0===v&&(a.fromBufferAttribute(P,U),T[I+D+8]=a.x,T[I+D+9]=a.y,T[I+D+10]=a.z,T[I+D+11]=4===P.itemSize?a.w:1)}}function N(){w.dispose(),s.delete(u),u.removeEventListener("dispose",N)}m={count:f,texture:w,size:new S(M,E)},s.set(u,m),u.addEventListener("dispose",N)}let F=0;for(let O=0;O<d.length;O++)F+=d[O];let B=u.morphTargetsRelative?1:1-F;c.getUniforms().setValue(e,"morphTargetBaseInfluence",B),c.getUniforms().setValue(e,"morphTargetInfluences",d),c.getUniforms().setValue(e,"morphTargetsTexture",m.texture,i),c.getUniforms().setValue(e,"morphTargetsTextureSize",m.size)}else{let z=void 0===d?0:d.length,G=n[u.id];if(void 0===G||G.length!==z){G=[];for(let H=0;H<z;H++)G[H]=[H,0];n[u.id]=G}for(let k=0;k<z;k++){let V=G[k];V[0]=k,V[1]=d[k]}G.sort(i0);for(let W=0;W<8;W++)W<z&&G[W][1]?(o[W][0]=G[W][0],o[W][1]=G[W][1]):(o[W][0]=Number.MAX_SAFE_INTEGER,o[W][1]=0);o.sort(iL);let j=u.morphAttributes.position,q=u.morphAttributes.normal,Y=0;for(let Z=0;Z<8;Z++){let J=o[Z],K=J[0],Q=J[1];K!==Number.MAX_SAFE_INTEGER&&Q?(j&&u.getAttribute("morphTarget"+Z)!==j[K]&&u.setAttribute("morphTarget"+Z,j[K]),q&&u.getAttribute("morphNormal"+Z)!==q[K]&&u.setAttribute("morphNormal"+Z,q[K]),r[Z]=Q,Y+=Q):(j&&!0===u.hasAttribute("morphTarget"+Z)&&u.deleteAttribute("morphTarget"+Z),q&&!0===u.hasAttribute("morphNormal"+Z)&&u.deleteAttribute("morphNormal"+Z),r[Z]=0)}let ee=u.morphTargetsRelative?1:1-Y;c.getUniforms().setValue(e,"morphTargetBaseInfluence",ee),c.getUniforms().setValue(e,"morphTargetInfluences",r)}}}}function i1(e,t,i,n){let r=new WeakMap;function s(e){let t=e.target;t.removeEventListener("dispose",s),i.remove(t.instanceMatrix),null!==t.instanceColor&&i.remove(t.instanceColor)}return{update:function a(o){let l=n.render.frame,h=o.geometry,u=t.get(o,h);return r.get(u)!==l&&(t.update(u),r.set(u,l)),o.isInstancedMesh&&(!1===o.hasEventListener("dispose",s)&&o.addEventListener("dispose",s),i.update(o.instanceMatrix,e.ARRAY_BUFFER),null!==o.instanceColor&&i.update(o.instanceColor,e.ARRAY_BUFFER)),u},dispose:function e(){r=new WeakMap}}}let iI=new k,iU=new X,iD=new j,iN=new tX,iF=[],iO=[],iB=new Float32Array(16),iz=new Float32Array(9),iG=new Float32Array(4);function iH(e,t,i){let n=e[0];if(n<=0||n>0)return e;let r=t*i,s=iF[r];if(void 0===s&&(s=new Float32Array(r),iF[r]=s),0!==t){n.toArray(s,0);for(let a=1,o=0;a!==t;++a)o+=i,e[a].toArray(s,o)}return s}function i2(e,t){if(e.length!==t.length)return!1;for(let i=0,n=e.length;i<n;i++)if(e[i]!==t[i])return!1;return!0}function ik(e,t){for(let i=0,n=t.length;i<n;i++)e[i]=t[i]}function iV(e,t){let i=iO[t];void 0===i&&(i=new Int32Array(t),iO[t]=i);for(let n=0;n!==t;++n)i[n]=e.allocateTextureUnit();return i}function i3(e,t){let i=this.cache;i[0]!==t&&(e.uniform1f(this.addr,t),i[0]=t)}function iW(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(i2(i,t))return;e.uniform2fv(this.addr,t),ik(i,t)}}function i6(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else if(void 0!==t.r)(i[0]!==t.r||i[1]!==t.g||i[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),i[0]=t.r,i[1]=t.g,i[2]=t.b);else{if(i2(i,t))return;e.uniform3fv(this.addr,t),ik(i,t)}}function i4(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z||i[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(i2(i,t))return;e.uniform4fv(this.addr,t),ik(i,t)}}function iX(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(i2(i,t))return;e.uniformMatrix2fv(this.addr,!1,t),ik(i,t)}else{if(i2(i,n))return;iG.set(n),e.uniformMatrix2fv(this.addr,!1,iG),ik(i,n)}}function i7(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(i2(i,t))return;e.uniformMatrix3fv(this.addr,!1,t),ik(i,t)}else{if(i2(i,n))return;iz.set(n),e.uniformMatrix3fv(this.addr,!1,iz),ik(i,n)}}function i5(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(i2(i,t))return;e.uniformMatrix4fv(this.addr,!1,t),ik(i,t)}else{if(i2(i,n))return;iB.set(n),e.uniformMatrix4fv(this.addr,!1,iB),ik(i,n)}}function ij(e,t){let i=this.cache;i[0]!==t&&(e.uniform1i(this.addr,t),i[0]=t)}function iq(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y)&&(e.uniform2i(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(i2(i,t))return;e.uniform2iv(this.addr,t),ik(i,t)}}function iY(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z)&&(e.uniform3i(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else{if(i2(i,t))return;e.uniform3iv(this.addr,t),ik(i,t)}}function iZ(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z||i[3]!==t.w)&&(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(i2(i,t))return;e.uniform4iv(this.addr,t),ik(i,t)}}function iJ(e,t){let i=this.cache;i[0]!==t&&(e.uniform1ui(this.addr,t),i[0]=t)}function iK(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y)&&(e.uniform2ui(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(i2(i,t))return;e.uniform2uiv(this.addr,t),ik(i,t)}}function i9(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z)&&(e.uniform3ui(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else{if(i2(i,t))return;e.uniform3uiv(this.addr,t),ik(i,t)}}function iQ(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z||i[3]!==t.w)&&(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(i2(i,t))return;e.uniform4uiv(this.addr,t),ik(i,t)}}function ne(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture2D(t||iI,r)}function nt(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture3D(t||iD,r)}function ni(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTextureCube(t||iN,r)}function nn(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture2DArray(t||iU,r)}function nr(e,t){e.uniform1fv(this.addr,t)}function ns(e,t){let i=iH(t,this.size,2);e.uniform2fv(this.addr,i)}function na(e,t){let i=iH(t,this.size,3);e.uniform3fv(this.addr,i)}function no(e,t){let i=iH(t,this.size,4);e.uniform4fv(this.addr,i)}function nl(e,t){let i=iH(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,i)}function nh(e,t){let i=iH(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,i)}function nu(e,t){let i=iH(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,i)}function nc(e,t){e.uniform1iv(this.addr,t)}function nd(e,t){e.uniform2iv(this.addr,t)}function np(e,t){e.uniform3iv(this.addr,t)}function nf(e,t){e.uniform4iv(this.addr,t)}function nm(e,t){e.uniform1uiv(this.addr,t)}function n$(e,t){e.uniform2uiv(this.addr,t)}function ng(e,t){e.uniform3uiv(this.addr,t)}function nv(e,t){e.uniform4uiv(this.addr,t)}function n8(e,t,i){let n=this.cache,r=t.length,s=iV(i,r);i2(n,s)||(e.uniform1iv(this.addr,s),ik(n,s));for(let a=0;a!==r;++a)i.setTexture2D(t[a]||iI,s[a])}function nx(e,t,i){let n=this.cache,r=t.length,s=iV(i,r);i2(n,s)||(e.uniform1iv(this.addr,s),ik(n,s));for(let a=0;a!==r;++a)i.setTexture3D(t[a]||iD,s[a])}function ny(e,t,i){let n=this.cache,r=t.length,s=iV(i,r);i2(n,s)||(e.uniform1iv(this.addr,s),ik(n,s));for(let a=0;a!==r;++a)i.setTextureCube(t[a]||iN,s[a])}function nS(e,t,i){let n=this.cache,r=t.length,s=iV(i,r);i2(n,s)||(e.uniform1iv(this.addr,s),ik(n,s));for(let a=0;a!==r;++a)i.setTexture2DArray(t[a]||iU,s[a])}class n_{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.setValue=function e(t){switch(t){case 5126:return i3;case 35664:return iW;case 35665:return i6;case 35666:return i4;case 35674:return iX;case 35675:return i7;case 35676:return i5;case 5124:case 35670:return ij;case 35667:case 35671:return iq;case 35668:case 35672:return iY;case 35669:case 35673:return iZ;case 5125:return iJ;case 36294:return iK;case 36295:return i9;case 36296:return iQ;case 35678:case 36198:case 36298:case 36306:case 35682:return ne;case 35679:case 36299:case 36307:return nt;case 35680:case 36300:case 36308:case 36293:return ni;case 36289:case 36303:case 36311:case 36292:return nn}}(t.type)}}class nb{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.size=t.size,this.setValue=function e(t){switch(t){case 5126:return nr;case 35664:return ns;case 35665:return na;case 35666:return no;case 35674:return nl;case 35675:return nh;case 35676:return nu;case 5124:case 35670:return nc;case 35667:case 35671:return nd;case 35668:case 35672:return np;case 35669:case 35673:return nf;case 5125:return nm;case 36294:return n$;case 36295:return ng;case 36296:return nv;case 35678:case 36198:case 36298:case 36306:case 35682:return n8;case 35679:case 36299:case 36307:return nx;case 35680:case 36300:case 36308:case 36293:return ny;case 36289:case 36303:case 36311:case 36292:return nS}}(t.type)}}class nM{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){let n=this.seq;for(let r=0,s=n.length;r!==s;++r){let a=n[r];a.setValue(e,t[a.id],i)}}}let nE=/(\w+)(\])?(\[|\.)?/g;function nT(e,t){e.seq.push(t),e.map[t.id]=t}function nw(e,t,i){let n=e.name,r=n.length;for(nE.lastIndex=0;;){let s=nE.exec(n),a=nE.lastIndex,o=s[1],l="]"===s[2],h=s[3];if(l&&(o|=0),void 0===h||"["===h&&a+2===r){nT(i,void 0===h?new n_(o,e,t):new nb(o,e,t));break}{let u=i.map,c=u[o];void 0===c&&nT(i,c=new nM(o)),i=c}}}class nA{constructor(e,t){this.seq=[],this.map={};let i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){let r=e.getActiveUniform(t,n),s=e.getUniformLocation(t,r.name);nw(r,s,this)}}setValue(e,t,i,n){let r=this.map[t];void 0!==r&&r.setValue(e,i,n)}setOptional(e,t,i){let n=t[i];void 0!==n&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let r=0,s=t.length;r!==s;++r){let a=t[r],o=i[a.id];!1!==o.needsUpdate&&a.setValue(e,o.value,n)}}static seqWithValue(e,t){let i=[];for(let n=0,r=e.length;n!==r;++n){let s=e[n];s.id in t&&i.push(s)}return i}}function nR(e,t,i){let n=e.createShader(t);return e.shaderSource(n,i),e.compileShader(n),n}let nC=0;function nL(e,t,i){let n=e.getShaderParameter(t,e.COMPILE_STATUS),r=e.getShaderInfoLog(t).trim();if(n&&""===r)return"";let s=/ERROR: 0:(\d+)/.exec(r);if(!s)return r;{let a=parseInt(s[1]);return i.toUpperCase()+"\n\n"+r+"\n\n"+function e(t,i){let n=t.split("\n"),r=[],s=Math.max(i-6,0),a=Math.min(i+6,n.length);for(let o=s;o<a;o++){let l=o+1;r.push(`${l===i?">":" "} ${l}: ${n[o]}`)}return r.join("\n")}(e.getShaderSource(t),a)}}function n0(e){return""!==e}function nP(e,t){let i=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,i).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function n1(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}let nI=/^[ \t]*#include +<([\w\d./]+)>/gm;function nU(e){return e.replace(nI,nD)}function nD(e,t){let i=it[t];if(void 0===i)throw Error("Can not resolve #include <"+t+">");return nU(i)}let nN=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function nF(e){return e.replace(nN,nO)}function nO(e,t,i,n){let r="";for(let s=parseInt(t);s<parseInt(i);s++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function nB(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function nz(e,n,s,a){var o,l;let h=e.getContext(),u=s.defines,c=s.vertexShader,d=s.fragmentShader,p,f=(o=s,p="SHADOWMAP_TYPE_BASIC",1===o.shadowMapType?p="SHADOWMAP_TYPE_PCF":2===o.shadowMapType?p="SHADOWMAP_TYPE_PCF_SOFT":3===o.shadowMapType&&(p="SHADOWMAP_TYPE_VSM"),p),m=function e(t){let i="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case 301:case 302:i="ENVMAP_TYPE_CUBE";break;case 306:i="ENVMAP_TYPE_CUBE_UV"}return i}(s),$,g=(l=s,$="ENVMAP_MODE_REFLECTION",l.envMap&&302===l.envMapMode&&($="ENVMAP_MODE_REFRACTION"),$),v=function e(t){let i="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:i="ENVMAP_BLENDING_MULTIPLY";break;case 1:i="ENVMAP_BLENDING_MIX";break;case 2:i="ENVMAP_BLENDING_ADD"}return i}(s),x=function e(t){let i=t.envMapCubeUVHeight;if(null===i)return null;let n=Math.log2(i)-2;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:1/i,maxMip:n}}(s),y=s.isWebGL2?"":function e(t){let i=[t.extensionDerivatives||t.envMapCubeUVHeight||t.bumpMap||t.normalMapTangentSpace||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return i.filter(n0).join("\n")}(s),S=function e(t){let i=[];for(let n in t){let r=t[n];!1!==r&&i.push("#define "+n+" "+r)}return i.join("\n")}(u),_=h.createProgram(),b,M,E=s.glslVersion?"#version "+s.glslVersion+"\n":"";s.isRawShaderMaterial?((b=["#define SHADER_TYPE "+s.shaderType,"#define SHADER_NAME "+s.shaderName,S].filter(n0).join("\n")).length>0&&(b+="\n"),(M=[y,"#define SHADER_TYPE "+s.shaderType,"#define SHADER_NAME "+s.shaderName,S].filter(n0).join("\n")).length>0&&(M+="\n")):(b=[nB(s),"#define SHADER_TYPE "+s.shaderType,"#define SHADER_NAME "+s.shaderName,S,s.instancing?"#define USE_INSTANCING":"",s.instancingColor?"#define USE_INSTANCING_COLOR":"",s.useFog&&s.fog?"#define USE_FOG":"",s.useFog&&s.fogExp2?"#define FOG_EXP2":"",s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.envMap?"#define "+g:"",s.lightMap?"#define USE_LIGHTMAP":"",s.aoMap?"#define USE_AOMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",s.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",s.displacementMap?"#define USE_DISPLACEMENTMAP":"",s.emissiveMap?"#define USE_EMISSIVEMAP":"",s.anisotropyMap?"#define USE_ANISOTROPYMAP":"",s.clearcoatMap?"#define USE_CLEARCOATMAP":"",s.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",s.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",s.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",s.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",s.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",s.roughnessMap?"#define USE_ROUGHNESSMAP":"",s.metalnessMap?"#define USE_METALNESSMAP":"",s.alphaMap?"#define USE_ALPHAMAP":"",s.transmission?"#define USE_TRANSMISSION":"",s.transmissionMap?"#define USE_TRANSMISSIONMAP":"",s.thicknessMap?"#define USE_THICKNESSMAP":"",s.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",s.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",s.mapUv?"#define MAP_UV "+s.mapUv:"",s.alphaMapUv?"#define ALPHAMAP_UV "+s.alphaMapUv:"",s.lightMapUv?"#define LIGHTMAP_UV "+s.lightMapUv:"",s.aoMapUv?"#define AOMAP_UV "+s.aoMapUv:"",s.emissiveMapUv?"#define EMISSIVEMAP_UV "+s.emissiveMapUv:"",s.bumpMapUv?"#define BUMPMAP_UV "+s.bumpMapUv:"",s.normalMapUv?"#define NORMALMAP_UV "+s.normalMapUv:"",s.displacementMapUv?"#define DISPLACEMENTMAP_UV "+s.displacementMapUv:"",s.metalnessMapUv?"#define METALNESSMAP_UV "+s.metalnessMapUv:"",s.roughnessMapUv?"#define ROUGHNESSMAP_UV "+s.roughnessMapUv:"",s.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+s.anisotropyMapUv:"",s.clearcoatMapUv?"#define CLEARCOATMAP_UV "+s.clearcoatMapUv:"",s.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+s.clearcoatNormalMapUv:"",s.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+s.clearcoatRoughnessMapUv:"",s.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+s.iridescenceMapUv:"",s.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+s.iridescenceThicknessMapUv:"",s.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+s.sheenColorMapUv:"",s.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+s.sheenRoughnessMapUv:"",s.specularMapUv?"#define SPECULARMAP_UV "+s.specularMapUv:"",s.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+s.specularColorMapUv:"",s.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+s.specularIntensityMapUv:"",s.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+s.transmissionMapUv:"",s.thicknessMapUv?"#define THICKNESSMAP_UV "+s.thicknessMapUv:"",s.vertexTangents?"#define USE_TANGENT":"",s.vertexColors?"#define USE_COLOR":"",s.vertexAlphas?"#define USE_COLOR_ALPHA":"",s.vertexUv1s?"#define USE_UV1":"",s.vertexUv2s?"#define USE_UV2":"",s.vertexUv3s?"#define USE_UV3":"",s.pointsUvs?"#define USE_POINTS_UV":"",s.flatShading?"#define FLAT_SHADED":"",s.skinning?"#define USE_SKINNING":"",s.morphTargets?"#define USE_MORPHTARGETS":"",s.morphNormals&&!1===s.flatShading?"#define USE_MORPHNORMALS":"",s.morphColors&&s.isWebGL2?"#define USE_MORPHCOLORS":"",s.morphTargetsCount>0&&s.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",s.morphTargetsCount>0&&s.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+s.morphTextureStride:"",s.morphTargetsCount>0&&s.isWebGL2?"#define MORPHTARGETS_COUNT "+s.morphTargetsCount:"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+f:"",s.sizeAttenuation?"#define USE_SIZEATTENUATION":"",s.useLegacyLights?"#define LEGACY_LIGHTS":"",s.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",s.logarithmicDepthBuffer&&s.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(n0).join("\n"),M=[y,nB(s),"#define SHADER_TYPE "+s.shaderType,"#define SHADER_NAME "+s.shaderName,S,s.useFog&&s.fog?"#define USE_FOG":"",s.useFog&&s.fogExp2?"#define FOG_EXP2":"",s.map?"#define USE_MAP":"",s.matcap?"#define USE_MATCAP":"",s.envMap?"#define USE_ENVMAP":"",s.envMap?"#define "+m:"",s.envMap?"#define "+g:"",s.envMap?"#define "+v:"",x?"#define CUBEUV_TEXEL_WIDTH "+x.texelWidth:"",x?"#define CUBEUV_TEXEL_HEIGHT "+x.texelHeight:"",x?"#define CUBEUV_MAX_MIP "+x.maxMip+".0":"",s.lightMap?"#define USE_LIGHTMAP":"",s.aoMap?"#define USE_AOMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",s.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",s.emissiveMap?"#define USE_EMISSIVEMAP":"",s.anisotropy?"#define USE_ANISOTROPY":"",s.anisotropyMap?"#define USE_ANISOTROPYMAP":"",s.clearcoat?"#define USE_CLEARCOAT":"",s.clearcoatMap?"#define USE_CLEARCOATMAP":"",s.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",s.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",s.iridescence?"#define USE_IRIDESCENCE":"",s.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",s.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",s.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",s.roughnessMap?"#define USE_ROUGHNESSMAP":"",s.metalnessMap?"#define USE_METALNESSMAP":"",s.alphaMap?"#define USE_ALPHAMAP":"",s.alphaTest?"#define USE_ALPHATEST":"",s.sheen?"#define USE_SHEEN":"",s.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",s.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",s.transmission?"#define USE_TRANSMISSION":"",s.transmissionMap?"#define USE_TRANSMISSIONMAP":"",s.thicknessMap?"#define USE_THICKNESSMAP":"",s.vertexTangents?"#define USE_TANGENT":"",s.vertexColors||s.instancingColor?"#define USE_COLOR":"",s.vertexAlphas?"#define USE_COLOR_ALPHA":"",s.vertexUv1s?"#define USE_UV1":"",s.vertexUv2s?"#define USE_UV2":"",s.vertexUv3s?"#define USE_UV3":"",s.pointsUvs?"#define USE_POINTS_UV":"",s.gradientMap?"#define USE_GRADIENTMAP":"",s.flatShading?"#define FLAT_SHADED":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+f:"",s.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",s.useLegacyLights?"#define LEGACY_LIGHTS":"",s.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",s.logarithmicDepthBuffer&&s.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==s.toneMapping?"#define TONE_MAPPING":"",0!==s.toneMapping?it.tonemapping_pars_fragment:"",0!==s.toneMapping?function e(t,i){let n;switch(i){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",i),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}("toneMapping",s.toneMapping):"",s.dithering?"#define DITHERING":"",s.opaque?"#define OPAQUE":"",it.encodings_pars_fragment,function e(n,r){let s=function e(n){switch(n){case i:return["Linear","( value )"];case t:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",n),["Linear","( value )"]}}(r);return"vec4 "+n+"( vec4 value ) { return LinearTo"+s[0]+s[1]+"; }"}("linearToOutputTexel",s.outputColorSpace),s.useDepthPacking?"#define DEPTH_PACKING "+s.depthPacking:"","\n"].filter(n0).join("\n")),c=n1(c=nP(c=nU(c),s),s),d=n1(d=nP(d=nU(d),s),s),c=nF(c),d=nF(d),s.isWebGL2&&!0!==s.isRawShaderMaterial&&(E="#version 300 es\n",b="precision mediump sampler2DArray;\n#define attribute in\n#define varying out\n#define texture2D texture\n"+b,M=["#define varying in",s.glslVersion===r?"":"layout(location = 0) out highp vec4 pc_fragColor;",s.glslVersion===r?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+M);let T=E+b+c,w=E+M+d,A=nR(h,h.VERTEX_SHADER,T),R=nR(h,h.FRAGMENT_SHADER,w);if(h.attachShader(_,A),h.attachShader(_,R),void 0!==s.index0AttributeName?h.bindAttribLocation(_,0,s.index0AttributeName):!0===s.morphTargets&&h.bindAttribLocation(_,0,"position"),h.linkProgram(_),e.debug.checkShaderErrors){let C=h.getProgramInfoLog(_).trim(),L=h.getShaderInfoLog(A).trim(),P=h.getShaderInfoLog(R).trim(),I=!0,U=!0;if(!1===h.getProgramParameter(_,h.LINK_STATUS)){if(I=!1,"function"==typeof e.debug.onShaderError)e.debug.onShaderError(h,_,A,R);else{let D=nL(h,A,"vertex"),N=nL(h,R,"fragment");console.error("THREE.WebGLProgram: Shader Error "+h.getError()+" - VALIDATE_STATUS "+h.getProgramParameter(_,h.VALIDATE_STATUS)+"\n\nProgram Info Log: "+C+"\n"+D+"\n"+N)}}else""!==C?console.warn("THREE.WebGLProgram: Program Info Log:",C):(""===L||""===P)&&(U=!1);U&&(this.diagnostics={runnable:I,programLog:C,vertexShader:{log:L,prefix:b},fragmentShader:{log:P,prefix:M}})}h.deleteShader(A),h.deleteShader(R);let F;this.getUniforms=function(){return void 0===F&&(F=new nA(h,_)),F};let O;return this.getAttributes=function(){return void 0===O&&(O=function e(t,i){let n={},r=t.getProgramParameter(i,t.ACTIVE_ATTRIBUTES);for(let s=0;s<r;s++){let a=t.getActiveAttrib(i,s),o=a.name,l=1;a.type===t.FLOAT_MAT2&&(l=2),a.type===t.FLOAT_MAT3&&(l=3),a.type===t.FLOAT_MAT4&&(l=4),n[o]={type:a.type,location:t.getAttribLocation(i,o),locationSize:l}}return n}(h,_)),O},this.destroy=function(){a.releaseStatesOfProgram(this),h.deleteProgram(_),this.program=void 0},this.type=s.shaderType,this.name=s.shaderName,this.id=nC++,this.cacheKey=n,this.usedTimes=1,this.program=_,this.vertexShader=A,this.fragmentShader=R,this}let nG=0;class nH{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){let t=e.vertexShader,i=e.fragmentShader,n=this._getShaderStage(t),r=this._getShaderStage(i),s=this._getShaderCacheForMaterial(e);return!1===s.has(n)&&(s.add(n),n.usedTimes++),!1===s.has(r)&&(s.add(r),r.usedTimes++),this}remove(e){let t=this.materialCache.get(e);for(let i of t)i.usedTimes--,0===i.usedTimes&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){let t=this.materialCache,i=t.get(e);return void 0===i&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){let t=this.shaderCache,i=t.get(e);return void 0===i&&(i=new n2(e),t.set(e,i)),i}}class n2{constructor(e){this.id=nG++,this.code=e,this.usedTimes=0}}function nk(e,t,n,r,s,a,o){let l=new eI,h=new nH,u=[],c=s.isWebGL2,d=s.logarithmicDepthBuffer,p=s.vertexTextures,f=s.precision,m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function $(e){return 0===e?"uv":`uv${e}`}return{getParameters:function a(l,u,g,v,x){let y=v.fog,S=x.geometry,_=l.isMeshStandardMaterial?v.environment:null,b=(l.isMeshStandardMaterial?n:t).get(l.envMap||_),M=b&&306===b.mapping?b.image.height:null,E=m[l.type];null!==l.precision&&(f=s.getMaxPrecision(l.precision))!==l.precision&&console.warn("THREE.WebGLProgram.getParameters:",l.precision,"not supported, using",f,"instead.");let T=S.morphAttributes.position||S.morphAttributes.normal||S.morphAttributes.color,w=void 0!==T?T.length:0,A=0;void 0!==S.morphAttributes.position&&(A=1),void 0!==S.morphAttributes.normal&&(A=2),void 0!==S.morphAttributes.color&&(A=3);let R,C,L,P;if(E){let I=ir[E];R=I.vertexShader,C=I.fragmentShader}else R=l.vertexShader,C=l.fragmentShader,h.update(l),L=h.getVertexShaderID(l),P=h.getFragmentShaderID(l);let U=e.getRenderTarget(),D=!0===x.isInstancedMesh,N=!!l.map,F=!!l.matcap,O=!!b,B=!!l.aoMap,z=!!l.lightMap,G=!!l.bumpMap,H=!!l.normalMap,k=!!l.displacementMap,V=!!l.emissiveMap,W=!!l.metalnessMap,X=!!l.roughnessMap,j=l.anisotropy>0,q=l.clearcoat>0,Y=l.iridescence>0,Z=l.sheen>0,J=l.transmission>0,K=j&&!!l.anisotropyMap,Q=q&&!!l.clearcoatMap,ee=q&&!!l.clearcoatNormalMap,et=q&&!!l.clearcoatRoughnessMap,ei=Y&&!!l.iridescenceMap,en=Y&&!!l.iridescenceThicknessMap,er=Z&&!!l.sheenColorMap,es=Z&&!!l.sheenRoughnessMap,ea=!!l.specularMap,eo=!!l.specularColorMap,el=!!l.specularIntensityMap,eh=J&&!!l.transmissionMap,eu=J&&!!l.thicknessMap,ec=!!l.gradientMap,ed=!!l.alphaMap,ep=l.alphaTest>0,ef=!!l.extensions,em=!!S.attributes.uv1,e$=!!S.attributes.uv2,eg=!!S.attributes.uv3,ev={isWebGL2:c,shaderID:E,shaderType:l.type,shaderName:l.name,vertexShader:R,fragmentShader:C,defines:l.defines,customVertexShaderID:L,customFragmentShaderID:P,isRawShaderMaterial:!0===l.isRawShaderMaterial,glslVersion:l.glslVersion,precision:f,instancing:D,instancingColor:D&&null!==x.instanceColor,supportsVertexTextures:p,outputColorSpace:null===U?e.outputColorSpace:!0===U.isXRRenderTarget?U.texture.colorSpace:i,map:N,matcap:F,envMap:O,envMapMode:O&&b.mapping,envMapCubeUVHeight:M,aoMap:B,lightMap:z,bumpMap:G,normalMap:H,displacementMap:p&&k,emissiveMap:V,normalMapObjectSpace:H&&1===l.normalMapType,normalMapTangentSpace:H&&0===l.normalMapType,metalnessMap:W,roughnessMap:X,anisotropy:j,anisotropyMap:K,clearcoat:q,clearcoatMap:Q,clearcoatNormalMap:ee,clearcoatRoughnessMap:et,iridescence:Y,iridescenceMap:ei,iridescenceThicknessMap:en,sheen:Z,sheenColorMap:er,sheenRoughnessMap:es,specularMap:ea,specularColorMap:eo,specularIntensityMap:el,transmission:J,transmissionMap:eh,thicknessMap:eu,gradientMap:ec,opaque:!1===l.transparent&&1===l.blending,alphaMap:ed,alphaTest:ep,combine:l.combine,mapUv:N&&$(l.map.channel),aoMapUv:B&&$(l.aoMap.channel),lightMapUv:z&&$(l.lightMap.channel),bumpMapUv:G&&$(l.bumpMap.channel),normalMapUv:H&&$(l.normalMap.channel),displacementMapUv:k&&$(l.displacementMap.channel),emissiveMapUv:V&&$(l.emissiveMap.channel),metalnessMapUv:W&&$(l.metalnessMap.channel),roughnessMapUv:X&&$(l.roughnessMap.channel),anisotropyMapUv:K&&$(l.anisotropyMap.channel),clearcoatMapUv:Q&&$(l.clearcoatMap.channel),clearcoatNormalMapUv:ee&&$(l.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:et&&$(l.clearcoatRoughnessMap.channel),iridescenceMapUv:ei&&$(l.iridescenceMap.channel),iridescenceThicknessMapUv:en&&$(l.iridescenceThicknessMap.channel),sheenColorMapUv:er&&$(l.sheenColorMap.channel),sheenRoughnessMapUv:es&&$(l.sheenRoughnessMap.channel),specularMapUv:ea&&$(l.specularMap.channel),specularColorMapUv:eo&&$(l.specularColorMap.channel),specularIntensityMapUv:el&&$(l.specularIntensityMap.channel),transmissionMapUv:eh&&$(l.transmissionMap.channel),thicknessMapUv:eu&&$(l.thicknessMap.channel),alphaMapUv:ed&&$(l.alphaMap.channel),vertexTangents:!!S.attributes.tangent&&(H||j),vertexColors:l.vertexColors,vertexAlphas:!0===l.vertexColors&&!!S.attributes.color&&4===S.attributes.color.itemSize,vertexUv1s:em,vertexUv2s:e$,vertexUv3s:eg,pointsUvs:!0===x.isPoints&&!!S.attributes.uv&&(N||ed),fog:!!y,useFog:!0===l.fog,fogExp2:y&&y.isFogExp2,flatShading:!0===l.flatShading,sizeAttenuation:!0===l.sizeAttenuation,logarithmicDepthBuffer:d,skinning:!0===x.isSkinnedMesh,morphTargets:void 0!==S.morphAttributes.position,morphNormals:void 0!==S.morphAttributes.normal,morphColors:void 0!==S.morphAttributes.color,morphTargetsCount:w,morphTextureStride:A,numDirLights:u.directional.length,numPointLights:u.point.length,numSpotLights:u.spot.length,numSpotLightMaps:u.spotLightMap.length,numRectAreaLights:u.rectArea.length,numHemiLights:u.hemi.length,numDirLightShadows:u.directionalShadowMap.length,numPointLightShadows:u.pointShadowMap.length,numSpotLightShadows:u.spotShadowMap.length,numSpotLightShadowsWithMaps:u.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:l.dithering,shadowMapEnabled:e.shadowMap.enabled&&g.length>0,shadowMapType:e.shadowMap.type,toneMapping:l.toneMapped?e.toneMapping:0,useLegacyLights:e.useLegacyLights,premultipliedAlpha:l.premultipliedAlpha,doubleSided:2===l.side,flipSided:1===l.side,useDepthPacking:l.depthPacking>=0,depthPacking:l.depthPacking||0,index0AttributeName:l.index0AttributeName,extensionDerivatives:ef&&!0===l.extensions.derivatives,extensionFragDepth:ef&&!0===l.extensions.fragDepth,extensionDrawBuffers:ef&&!0===l.extensions.drawBuffers,extensionShaderTextureLOD:ef&&!0===l.extensions.shaderTextureLOD,rendererExtensionFragDepth:c||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:c||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:c||r.has("EXT_shader_texture_lod"),customProgramCacheKey:l.customProgramCacheKey()};return ev},getProgramCacheKey:function t(i){var n,r,s,a;let o=[];if(i.shaderID?o.push(i.shaderID):(o.push(i.customVertexShaderID),o.push(i.customFragmentShaderID)),void 0!==i.defines)for(let h in i.defines)o.push(h),o.push(i.defines[h]);return!1===i.isRawShaderMaterial&&(n=o,r=i,n.push(r.precision),n.push(r.outputColorSpace),n.push(r.envMapMode),n.push(r.envMapCubeUVHeight),n.push(r.mapUv),n.push(r.alphaMapUv),n.push(r.lightMapUv),n.push(r.aoMapUv),n.push(r.bumpMapUv),n.push(r.normalMapUv),n.push(r.displacementMapUv),n.push(r.emissiveMapUv),n.push(r.metalnessMapUv),n.push(r.roughnessMapUv),n.push(r.anisotropyMapUv),n.push(r.clearcoatMapUv),n.push(r.clearcoatNormalMapUv),n.push(r.clearcoatRoughnessMapUv),n.push(r.iridescenceMapUv),n.push(r.iridescenceThicknessMapUv),n.push(r.sheenColorMapUv),n.push(r.sheenRoughnessMapUv),n.push(r.specularMapUv),n.push(r.specularColorMapUv),n.push(r.specularIntensityMapUv),n.push(r.transmissionMapUv),n.push(r.thicknessMapUv),n.push(r.combine),n.push(r.fogExp2),n.push(r.sizeAttenuation),n.push(r.morphTargetsCount),n.push(r.morphAttributeCount),n.push(r.numDirLights),n.push(r.numPointLights),n.push(r.numSpotLights),n.push(r.numSpotLightMaps),n.push(r.numHemiLights),n.push(r.numRectAreaLights),n.push(r.numDirLightShadows),n.push(r.numPointLightShadows),n.push(r.numSpotLightShadows),n.push(r.numSpotLightShadowsWithMaps),n.push(r.shadowMapType),n.push(r.toneMapping),n.push(r.numClippingPlanes),n.push(r.numClipIntersection),n.push(r.depthPacking),s=o,a=i,l.disableAll(),a.isWebGL2&&l.enable(0),a.supportsVertexTextures&&l.enable(1),a.instancing&&l.enable(2),a.instancingColor&&l.enable(3),a.matcap&&l.enable(4),a.envMap&&l.enable(5),a.normalMapObjectSpace&&l.enable(6),a.normalMapTangentSpace&&l.enable(7),a.clearcoat&&l.enable(8),a.iridescence&&l.enable(9),a.alphaTest&&l.enable(10),a.vertexColors&&l.enable(11),a.vertexAlphas&&l.enable(12),a.vertexUv1s&&l.enable(13),a.vertexUv2s&&l.enable(14),a.vertexUv3s&&l.enable(15),a.vertexTangents&&l.enable(16),a.anisotropy&&l.enable(17),s.push(l.mask),l.disableAll(),a.fog&&l.enable(0),a.useFog&&l.enable(1),a.flatShading&&l.enable(2),a.logarithmicDepthBuffer&&l.enable(3),a.skinning&&l.enable(4),a.morphTargets&&l.enable(5),a.morphNormals&&l.enable(6),a.morphColors&&l.enable(7),a.premultipliedAlpha&&l.enable(8),a.shadowMapEnabled&&l.enable(9),a.useLegacyLights&&l.enable(10),a.doubleSided&&l.enable(11),a.flipSided&&l.enable(12),a.useDepthPacking&&l.enable(13),a.dithering&&l.enable(14),a.transmission&&l.enable(15),a.sheen&&l.enable(16),a.opaque&&l.enable(17),a.pointsUvs&&l.enable(18),s.push(l.mask),o.push(e.outputColorSpace)),o.push(i.customProgramCacheKey),o.join()},getUniforms:function e(t){let i=m[t.type],n;if(i){let r=ir[i];n=tV.clone(r.uniforms)}else n=t.uniforms;return n},acquireProgram:function t(i,n){let r;for(let s=0,o=u.length;s<o;s++){let l=u[s];if(l.cacheKey===n){r=l,++r.usedTimes;break}}return void 0===r&&(r=new nz(e,n,i,a),u.push(r)),r},releaseProgram:function e(t){if(0==--t.usedTimes){let i=u.indexOf(t);u[i]=u[u.length-1],u.pop(),t.destroy()}},releaseShaderCache:function e(t){h.remove(t)},programs:u,dispose:function e(){h.dispose()}}}function nV(){let e=new WeakMap;return{get:function t(i){let n=e.get(i);return void 0===n&&(n={},e.set(i,n)),n},remove:function t(i){e.delete(i)},update:function t(i,n,r){e.get(i)[n]=r},dispose:function t(){e=new WeakMap}}}function n3(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function nW(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function n6(){let e=[],t=0,i=[],n=[],r=[];function s(i,n,r,s,a,o){let l=e[t];return void 0===l?(l={id:i.id,object:i,geometry:n,material:r,groupOrder:s,renderOrder:i.renderOrder,z:a,group:o},e[t]=l):(l.id=i.id,l.object=i,l.geometry=n,l.material=r,l.groupOrder=s,l.renderOrder=i.renderOrder,l.z=a,l.group=o),t++,l}return{opaque:i,transmissive:n,transparent:r,init:function e(){t=0,i.length=0,n.length=0,r.length=0},push:function e(t,a,o,l,h,u){let c=s(t,a,o,l,h,u);o.transmission>0?n.push(c):!0===o.transparent?r.push(c):i.push(c)},unshift:function e(t,a,o,l,h,u){let c=s(t,a,o,l,h,u);o.transmission>0?n.unshift(c):!0===o.transparent?r.unshift(c):i.unshift(c)},finish:function i(){for(let n=t,r=e.length;n<r;n++){let s=e[n];if(null===s.id)break;s.id=null,s.object=null,s.geometry=null,s.material=null,s.group=null}},sort:function e(t,s){i.length>1&&i.sort(t||n3),n.length>1&&n.sort(s||nW),r.length>1&&r.sort(s||nW)}}}function n4(){let e=new WeakMap;return{get:function t(i,n){let r=e.get(i),s;return void 0===r?(s=new n6,e.set(i,[s])):n>=r.length?(s=new n6,r.push(s)):s=r[n],s},dispose:function t(){e=new WeakMap}}}function nX(){let e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let i;switch(t.type){case"DirectionalLight":i={direction:new Y,color:new ts};break;case"SpotLight":i={position:new Y,direction:new Y,color:new ts,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new Y,color:new ts,distance:0,decay:0};break;case"HemisphereLight":i={direction:new Y,skyColor:new ts,groundColor:new ts};break;case"RectAreaLight":i={color:new ts,position:new Y,halfWidth:new Y,halfHeight:new Y}}return e[t.id]=i,i}}}let n7=0;function n5(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function nj(e,t){let i=new nX,n=function e(){let t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":case"SpotLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new S};break;case"PointLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new S,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=i,i}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let s=0;s<9;s++)r.probe.push(new Y);let a=new Y,o=new eM,l=new eM;return{setup:function s(a,o){let l=0,h=0,u=0;for(let c=0;c<9;c++)r.probe[c].set(0,0,0);let d=0,p=0,f=0,m=0,$=0,g=0,v=0,x=0,y=0,S=0;a.sort(n5);let _=!0===o?Math.PI:1;for(let b=0,M=a.length;b<M;b++){let E=a[b],T=E.color,w=E.intensity,A=E.distance,R=E.shadow&&E.shadow.map?E.shadow.map.texture:null;if(E.isAmbientLight)l+=T.r*w*_,h+=T.g*w*_,u+=T.b*w*_;else if(E.isLightProbe)for(let C=0;C<9;C++)r.probe[C].addScaledVector(E.sh.coefficients[C],w);else if(E.isDirectionalLight){let L=i.get(E);if(L.color.copy(E.color).multiplyScalar(E.intensity*_),E.castShadow){let P=E.shadow,I=n.get(E);I.shadowBias=P.bias,I.shadowNormalBias=P.normalBias,I.shadowRadius=P.radius,I.shadowMapSize=P.mapSize,r.directionalShadow[d]=I,r.directionalShadowMap[d]=R,r.directionalShadowMatrix[d]=E.shadow.matrix,g++}r.directional[d]=L,d++}else if(E.isSpotLight){let U=i.get(E);U.position.setFromMatrixPosition(E.matrixWorld),U.color.copy(T).multiplyScalar(w*_),U.distance=A,U.coneCos=Math.cos(E.angle),U.penumbraCos=Math.cos(E.angle*(1-E.penumbra)),U.decay=E.decay,r.spot[f]=U;let D=E.shadow;if(E.map&&(r.spotLightMap[y]=E.map,y++,D.updateMatrices(E),E.castShadow&&S++),r.spotLightMatrix[f]=D.matrix,E.castShadow){let N=n.get(E);N.shadowBias=D.bias,N.shadowNormalBias=D.normalBias,N.shadowRadius=D.radius,N.shadowMapSize=D.mapSize,r.spotShadow[f]=N,r.spotShadowMap[f]=R,x++}f++}else if(E.isRectAreaLight){let F=i.get(E);F.color.copy(T).multiplyScalar(w),F.halfWidth.set(.5*E.width,0,0),F.halfHeight.set(0,.5*E.height,0),r.rectArea[m]=F,m++}else if(E.isPointLight){let O=i.get(E);if(O.color.copy(E.color).multiplyScalar(E.intensity*_),O.distance=E.distance,O.decay=E.decay,E.castShadow){let B=E.shadow,z=n.get(E);z.shadowBias=B.bias,z.shadowNormalBias=B.normalBias,z.shadowRadius=B.radius,z.shadowMapSize=B.mapSize,z.shadowCameraNear=B.camera.near,z.shadowCameraFar=B.camera.far,r.pointShadow[p]=z,r.pointShadowMap[p]=R,r.pointShadowMatrix[p]=E.shadow.matrix,v++}r.point[p]=O,p++}else if(E.isHemisphereLight){let G=i.get(E);G.skyColor.copy(E.color).multiplyScalar(w*_),G.groundColor.copy(E.groundColor).multiplyScalar(w*_),r.hemi[$]=G,$++}}m>0&&(t.isWebGL2?(r.rectAreaLTC1=ii.LTC_FLOAT_1,r.rectAreaLTC2=ii.LTC_FLOAT_2):!0===e.has("OES_texture_float_linear")?(r.rectAreaLTC1=ii.LTC_FLOAT_1,r.rectAreaLTC2=ii.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=ii.LTC_HALF_1,r.rectAreaLTC2=ii.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=l,r.ambient[1]=h,r.ambient[2]=u;let H=r.hash;(H.directionalLength!==d||H.pointLength!==p||H.spotLength!==f||H.rectAreaLength!==m||H.hemiLength!==$||H.numDirectionalShadows!==g||H.numPointShadows!==v||H.numSpotShadows!==x||H.numSpotMaps!==y)&&(r.directional.length=d,r.spot.length=f,r.rectArea.length=m,r.point.length=p,r.hemi.length=$,r.directionalShadow.length=g,r.directionalShadowMap.length=g,r.pointShadow.length=v,r.pointShadowMap.length=v,r.spotShadow.length=x,r.spotShadowMap.length=x,r.directionalShadowMatrix.length=g,r.pointShadowMatrix.length=v,r.spotLightMatrix.length=x+y-S,r.spotLightMap.length=y,r.numSpotLightShadowsWithMaps=S,H.directionalLength=d,H.pointLength=p,H.spotLength=f,H.rectAreaLength=m,H.hemiLength=$,H.numDirectionalShadows=g,H.numPointShadows=v,H.numSpotShadows=x,H.numSpotMaps=y,r.version=n7++)},setupView:function e(t,i){let n=0,s=0,h=0,u=0,c=0,d=i.matrixWorldInverse;for(let p=0,f=t.length;p<f;p++){let m=t[p];if(m.isDirectionalLight){let $=r.directional[n];$.direction.setFromMatrixPosition(m.matrixWorld),a.setFromMatrixPosition(m.target.matrixWorld),$.direction.sub(a),$.direction.transformDirection(d),n++}else if(m.isSpotLight){let g=r.spot[h];g.position.setFromMatrixPosition(m.matrixWorld),g.position.applyMatrix4(d),g.direction.setFromMatrixPosition(m.matrixWorld),a.setFromMatrixPosition(m.target.matrixWorld),g.direction.sub(a),g.direction.transformDirection(d),h++}else if(m.isRectAreaLight){let v=r.rectArea[u];v.position.setFromMatrixPosition(m.matrixWorld),v.position.applyMatrix4(d),l.identity(),o.copy(m.matrixWorld),o.premultiply(d),l.extractRotation(o),v.halfWidth.set(.5*m.width,0,0),v.halfHeight.set(0,.5*m.height,0),v.halfWidth.applyMatrix4(l),v.halfHeight.applyMatrix4(l),u++}else if(m.isPointLight){let x=r.point[s];x.position.setFromMatrixPosition(m.matrixWorld),x.position.applyMatrix4(d),s++}else if(m.isHemisphereLight){let y=r.hemi[c];y.direction.setFromMatrixPosition(m.matrixWorld),y.direction.transformDirection(d),c++}}},state:r}}function nq(e,t){let i=new nj(e,t),n=[],r=[];return{init:function e(){n.length=0,r.length=0},state:{lightsArray:n,shadowsArray:r,lights:i},setupLights:function e(t){i.setup(n,t)},setupLightsView:function e(t){i.setupView(n,t)},pushLight:function e(t){n.push(t)},pushShadow:function e(t){r.push(t)}}}function nY(e,t){let i=new WeakMap;return{get:function n(r,s=0){let a=i.get(r),o;return void 0===a?(o=new nq(e,t),i.set(r,[o])):s>=a.length?(o=new nq(e,t),a.push(o)):o=a[s],o},dispose:function e(){i=new WeakMap}}}class nZ extends te{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class nJ extends te{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function nK(e,t,i){let n=new tK,r=new S,s=new S,a=new V,o=new nZ({depthPacking:3201}),l=new nJ,h={},u=i.maxTextureSize,c={0:1,1:0,2:2},d=new t3({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new S},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=d.clone();p.defines.HORIZONTAL_PASS=1;let f=new tb;f.setAttribute("position",new tp(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let m=new tB(f,d),$=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1;let g=this.type;function v(i,n){let s=t.update(m);d.defines.VSM_SAMPLES!==i.blurSamples&&(d.defines.VSM_SAMPLES=i.blurSamples,p.defines.VSM_SAMPLES=i.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),null===i.mapPass&&(i.mapPass=new W(r.x,r.y)),d.uniforms.shadow_pass.value=i.map.texture,d.uniforms.resolution.value=i.mapSize,d.uniforms.radius.value=i.radius,e.setRenderTarget(i.mapPass),e.clear(),e.renderBufferDirect(n,null,s,d,m,null),p.uniforms.shadow_pass.value=i.mapPass.texture,p.uniforms.resolution.value=i.mapSize,p.uniforms.radius.value=i.radius,e.setRenderTarget(i.map),e.clear(),e.renderBufferDirect(n,null,s,p,m,null)}function x(t,i,n,r){let s=null,a=!0===n.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(void 0!==a)s=a;else if(s=!0===n.isPointLight?l:o,e.localClippingEnabled&&!0===i.clipShadows&&Array.isArray(i.clippingPlanes)&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&i.alphaTest>0||i.map&&i.alphaTest>0){let u=s.uuid,d=i.uuid,p=h[u];void 0===p&&(p={},h[u]=p);let f=p[d];void 0===f&&(f=s.clone(),p[d]=f),s=f}if(s.visible=i.visible,s.wireframe=i.wireframe,3===r?s.side=null!==i.shadowSide?i.shadowSide:i.side:s.side=null!==i.shadowSide?i.shadowSide:c[i.side],s.alphaMap=i.alphaMap,s.alphaTest=i.alphaTest,s.map=i.map,s.clipShadows=i.clipShadows,s.clippingPlanes=i.clippingPlanes,s.clipIntersection=i.clipIntersection,s.displacementMap=i.displacementMap,s.displacementScale=i.displacementScale,s.displacementBias=i.displacementBias,s.wireframeLinewidth=i.wireframeLinewidth,s.linewidth=i.linewidth,!0===n.isPointLight&&!0===s.isMeshDistanceMaterial){let m=e.properties.get(s);m.light=n}return s}function y(i,r,s,a,o){if(!1===i.visible)return;let l=i.layers.test(r.layers);if(l&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&3===o)&&(!i.frustumCulled||n.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,i.matrixWorld);let h=t.update(i),u=i.material;if(Array.isArray(u)){let c=h.groups;for(let d=0,p=c.length;d<p;d++){let f=c[d],m=u[f.materialIndex];if(m&&m.visible){let $=x(i,m,a,o);e.renderBufferDirect(s,null,h,$,i,f)}}}else if(u.visible){let g=x(i,u,a,o);e.renderBufferDirect(s,null,h,g,i,null)}}let v=i.children;for(let S=0,_=v.length;S<_;S++)y(v[S],r,s,a,o)}this.render=function(t,i,o){if(!1===$.enabled||!1===$.autoUpdate&&!1===$.needsUpdate||0===t.length)return;let l=e.getRenderTarget(),h=e.getActiveCubeFace(),c=e.getActiveMipmapLevel(),d=e.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);let p=3!==g&&3===this.type,f=3===g&&3!==this.type;for(let m=0,x=t.length;m<x;m++){let S=t[m],_=S.shadow;if(void 0===_){console.warn("THREE.WebGLShadowMap:",S,"has no shadow.");continue}if(!1===_.autoUpdate&&!1===_.needsUpdate)continue;r.copy(_.mapSize);let b=_.getFrameExtents();if(r.multiply(b),s.copy(_.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(s.x=Math.floor(u/b.x),r.x=s.x*b.x,_.mapSize.x=s.x),r.y>u&&(s.y=Math.floor(u/b.y),r.y=s.y*b.y,_.mapSize.y=s.y)),null===_.map||!0===p||!0===f){let M=3!==this.type?{minFilter:1003,magFilter:1003}:{};null!==_.map&&_.map.dispose(),_.map=new W(r.x,r.y,M),_.map.texture.name=S.name+".shadowMap",_.camera.updateProjectionMatrix()}e.setRenderTarget(_.map),e.clear();let E=_.getViewportCount();for(let T=0;T<E;T++){let w=_.getViewport(T);a.set(s.x*w.x,s.y*w.y,s.x*w.z,s.y*w.w),d.viewport(a),_.updateMatrices(S,T),n=_.getFrustum(),y(i,o,_.camera,S,this.type)}!0!==_.isPointLightShadow&&3===this.type&&v(_,o),_.needsUpdate=!1}g=this.type,$.needsUpdate=!1,e.setRenderTarget(l,h,c)}}function n9(e,t,i){let n=i.isWebGL2,r=new function t(){let i=!1,n=new V,r=null,s=new V(0,0,0,0);return{setMask:function(t){r===t||i||(e.colorMask(t,t,t,t),r=t)},setLocked:function(e){i=e},setClear:function(t,i,r,a,o){!0===o&&(t*=a,i*=a,r*=a),n.set(t,i,r,a),!1===s.equals(n)&&(e.clearColor(t,i,r,a),s.copy(n))},reset:function(){i=!1,r=null,s.set(-1,0,0,0)}}},s=new function t(){let i=!1,n=null,r=null,s=null;return{setTest:function(t){t?z(e.DEPTH_TEST):G(e.DEPTH_TEST)},setMask:function(t){n===t||i||(e.depthMask(t),n=t)},setFunc:function(t){if(r!==t){switch(t){case 0:e.depthFunc(e.NEVER);break;case 1:e.depthFunc(e.ALWAYS);break;case 2:e.depthFunc(e.LESS);break;case 3:default:e.depthFunc(e.LEQUAL);break;case 4:e.depthFunc(e.EQUAL);break;case 5:e.depthFunc(e.GEQUAL);break;case 6:e.depthFunc(e.GREATER);break;case 7:e.depthFunc(e.NOTEQUAL)}r=t}},setLocked:function(e){i=e},setClear:function(t){s!==t&&(e.clearDepth(t),s=t)},reset:function(){i=!1,n=null,r=null,s=null}}},a=new function t(){let i=!1,n=null,r=null,s=null,a=null,o=null,l=null,h=null,u=null;return{setTest:function(t){i||(t?z(e.STENCIL_TEST):G(e.STENCIL_TEST))},setMask:function(t){n===t||i||(e.stencilMask(t),n=t)},setFunc:function(t,i,n){(r!==t||s!==i||a!==n)&&(e.stencilFunc(t,i,n),r=t,s=i,a=n)},setOp:function(t,i,n){(o!==t||l!==i||h!==n)&&(e.stencilOp(t,i,n),o=t,l=i,h=n)},setLocked:function(e){i=e},setClear:function(t){u!==t&&(e.clearStencil(t),u=t)},reset:function(){i=!1,n=null,r=null,s=null,a=null,o=null,l=null,h=null,u=null}}},o=new WeakMap,l=new WeakMap,h={},u={},c=new WeakMap,d=[],p=null,f=!1,m=null,$=null,g=null,v=null,x=null,y=null,S=null,_=!1,b=null,M=null,E=null,T=null,w=null,A=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),R=!1,C=0,L=e.getParameter(e.VERSION);-1!==L.indexOf("WebGL")?R=(C=parseFloat(/^WebGL (\d)/.exec(L)[1]))>=1:-1!==L.indexOf("OpenGL ES")&&(R=(C=parseFloat(/^OpenGL ES (\d)/.exec(L)[1]))>=2);let P=null,I={},U=e.getParameter(e.SCISSOR_BOX),D=e.getParameter(e.VIEWPORT),N=new V().fromArray(U),F=new V().fromArray(D);function O(t,i,r,s){let a=new Uint8Array(4),o=e.createTexture();e.bindTexture(t,o),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let l=0;l<r;l++)n&&(t===e.TEXTURE_3D||t===e.TEXTURE_2D_ARRAY)?e.texImage3D(i,0,e.RGBA,1,1,s,0,e.RGBA,e.UNSIGNED_BYTE,a):e.texImage2D(i+l,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,a);return o}let B={};function z(t){!0!==h[t]&&(e.enable(t),h[t]=!0)}function G(t){!1!==h[t]&&(e.disable(t),h[t]=!1)}B[e.TEXTURE_2D]=O(e.TEXTURE_2D,e.TEXTURE_2D,1),B[e.TEXTURE_CUBE_MAP]=O(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(B[e.TEXTURE_2D_ARRAY]=O(e.TEXTURE_2D_ARRAY,e.TEXTURE_2D_ARRAY,1,1),B[e.TEXTURE_3D]=O(e.TEXTURE_3D,e.TEXTURE_3D,1,1)),r.setClear(0,0,0,1),s.setClear(1),a.setClear(0),z(e.DEPTH_TEST),s.setFunc(3),j(!1),q(1),z(e.CULL_FACE),X(0);let H={100:e.FUNC_ADD,101:e.FUNC_SUBTRACT,102:e.FUNC_REVERSE_SUBTRACT};if(n)H[103]=e.MIN,H[104]=e.MAX;else{let k=t.get("EXT_blend_minmax");null!==k&&(H[103]=k.MIN_EXT,H[104]=k.MAX_EXT)}let W={200:e.ZERO,201:e.ONE,202:e.SRC_COLOR,204:e.SRC_ALPHA,210:e.SRC_ALPHA_SATURATE,208:e.DST_COLOR,206:e.DST_ALPHA,203:e.ONE_MINUS_SRC_COLOR,205:e.ONE_MINUS_SRC_ALPHA,209:e.ONE_MINUS_DST_COLOR,207:e.ONE_MINUS_DST_ALPHA};function X(t,i,n,r,s,a,o,l){if(0===t){!0===f&&(G(e.BLEND),f=!1);return}if(!1===f&&(z(e.BLEND),f=!0),5!==t){if(t!==m||l!==_){if((100!==$||100!==x)&&(e.blendEquation(e.FUNC_ADD),$=100,x=100),l)switch(t){case 1:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.ONE,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.SRC_ALPHA,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFunc(e.ZERO,e.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}g=null,v=null,y=null,S=null,m=t,_=l}return}s=s||i,a=a||n,o=o||r,(i!==$||s!==x)&&(e.blendEquationSeparate(H[i],H[s]),$=i,x=s),(n!==g||r!==v||a!==y||o!==S)&&(e.blendFuncSeparate(W[n],W[r],W[a],W[o]),g=n,v=r,y=a,S=o),m=t,_=!1}function j(t){b!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),b=t)}function q(t){0!==t?(z(e.CULL_FACE),t!==M&&(1===t?e.cullFace(e.BACK):2===t?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):G(e.CULL_FACE),M=t}function Y(t,i,n){t?(z(e.POLYGON_OFFSET_FILL),(T!==i||w!==n)&&(e.polygonOffset(i,n),T=i,w=n)):G(e.POLYGON_OFFSET_FILL)}return{buffers:{color:r,depth:s,stencil:a},enable:z,disable:G,bindFramebuffer:function t(i,r){return u[i]!==r&&(e.bindFramebuffer(i,r),u[i]=r,n&&(i===e.DRAW_FRAMEBUFFER&&(u[e.FRAMEBUFFER]=r),i===e.FRAMEBUFFER&&(u[e.DRAW_FRAMEBUFFER]=r)),!0)},drawBuffers:function n(r,s){let a=d,o=!1;if(r){if(void 0===(a=c.get(s))&&(a=[],c.set(s,a)),r.isWebGLMultipleRenderTargets){let l=r.texture;if(a.length!==l.length||a[0]!==e.COLOR_ATTACHMENT0){for(let h=0,u=l.length;h<u;h++)a[h]=e.COLOR_ATTACHMENT0+h;a.length=l.length,o=!0}}else a[0]!==e.COLOR_ATTACHMENT0&&(a[0]=e.COLOR_ATTACHMENT0,o=!0)}else a[0]!==e.BACK&&(a[0]=e.BACK,o=!0);o&&(i.isWebGL2?e.drawBuffers(a):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(a))},useProgram:function t(i){return p!==i&&(e.useProgram(i),p=i,!0)},setBlending:X,setMaterial:function t(i,n){2===i.side?G(e.CULL_FACE):z(e.CULL_FACE);let o=1===i.side;n&&(o=!o),j(o),1===i.blending&&!1===i.transparent?X(0):X(i.blending,i.blendEquation,i.blendSrc,i.blendDst,i.blendEquationAlpha,i.blendSrcAlpha,i.blendDstAlpha,i.premultipliedAlpha),s.setFunc(i.depthFunc),s.setTest(i.depthTest),s.setMask(i.depthWrite),r.setMask(i.colorWrite);let l=i.stencilWrite;a.setTest(l),l&&(a.setMask(i.stencilWriteMask),a.setFunc(i.stencilFunc,i.stencilRef,i.stencilFuncMask),a.setOp(i.stencilFail,i.stencilZFail,i.stencilZPass)),Y(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits),!0===i.alphaToCoverage?z(e.SAMPLE_ALPHA_TO_COVERAGE):G(e.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:j,setCullFace:q,setLineWidth:function t(i){i!==E&&(R&&e.lineWidth(i),E=i)},setPolygonOffset:Y,setScissorTest:function t(i){i?z(e.SCISSOR_TEST):G(e.SCISSOR_TEST)},activeTexture:function t(i){void 0===i&&(i=e.TEXTURE0+A-1),P!==i&&(e.activeTexture(i),P=i)},bindTexture:function t(i,n,r){void 0===r&&(r=null===P?e.TEXTURE0+A-1:P);let s=I[r];void 0===s&&(s={type:void 0,texture:void 0},I[r]=s),(s.type!==i||s.texture!==n)&&(P!==r&&(e.activeTexture(r),P=r),e.bindTexture(i,n||B[i]),s.type=i,s.texture=n)},unbindTexture:function t(){let i=I[P];void 0!==i&&void 0!==i.type&&(e.bindTexture(i.type,null),i.type=void 0,i.texture=void 0)},compressedTexImage2D:function t(){try{e.compressedTexImage2D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},compressedTexImage3D:function t(){try{e.compressedTexImage3D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},texImage2D:function t(){try{e.texImage2D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},texImage3D:function t(){try{e.texImage3D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},updateUBOMapping:function t(i,n){let r=l.get(n);void 0===r&&(r=new WeakMap,l.set(n,r));let s=r.get(i);void 0===s&&(s=e.getUniformBlockIndex(n,i.name),r.set(i,s))},uniformBlockBinding:function t(i,n){let r=l.get(n),s=r.get(i);o.get(n)!==s&&(e.uniformBlockBinding(n,s,i.__bindingPointIndex),o.set(n,s))},texStorage2D:function t(){try{e.texStorage2D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},texStorage3D:function t(){try{e.texStorage3D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},texSubImage2D:function t(){try{e.texSubImage2D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},texSubImage3D:function t(){try{e.texSubImage3D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},compressedTexSubImage2D:function t(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},compressedTexSubImage3D:function t(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},scissor:function t(i){!1===N.equals(i)&&(e.scissor(i.x,i.y,i.z,i.w),N.copy(i))},viewport:function t(i){!1===F.equals(i)&&(e.viewport(i.x,i.y,i.z,i.w),F.copy(i))},reset:function t(){e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(e.LESS),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(e.ALWAYS,0,4294967295),e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.clearStencil(0),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.activeTexture(e.TEXTURE0),e.bindFramebuffer(e.FRAMEBUFFER,null),!0===n&&(e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),h={},P=null,I={},u={},c=new WeakMap,d=[],p=null,f=!1,m=null,$=null,g=null,v=null,x=null,y=null,S=null,_=!1,b=null,M=null,E=null,T=null,w=null,N.set(0,0,e.canvas.width,e.canvas.height),F.set(0,0,e.canvas.width,e.canvas.height),r.reset(),s.reset(),a.reset()}}}function nQ(e,n,r,s,a,o,l){let h=a.isWebGL2,u=a.maxTextures,c=a.maxCubemapSize,d=a.maxTextureSize,p=a.maxSamples,f=n.has("WEBGL_multisampled_render_to_texture")?n.get("WEBGL_multisampled_render_to_texture"):null,m="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap,x,y=new WeakMap,S=!1;try{S="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(_){}function b(e,t){return S?new OffscreenCanvas(e,t):w("canvas")}function M(e,t,i,n){let r=1;if((e.width>n||e.height>n)&&(r=n/Math.max(e.width,e.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let s=t?v:Math.floor,a=s(r*e.width),o=s(r*e.height);void 0===x&&(x=b(a,o));let l=i?b(a,o):x;l.width=a,l.height=o;let h=l.getContext("2d");return h.drawImage(e,0,0,a,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+a+"x"+o+")."),l}"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+").")}return e}function E(e){return $(e.width)&&$(e.height)}function T(e,t){return e.generateMipmaps&&t&&1003!==e.minFilter&&1006!==e.minFilter}function A(t){e.generateMipmap(t)}function R(i,r,s,a,o=!1){if(!1===h)return r;if(null!==i){if(void 0!==e[i])return e[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let l=r;return r===e.RED&&(s===e.FLOAT&&(l=e.R32F),s===e.HALF_FLOAT&&(l=e.R16F),s===e.UNSIGNED_BYTE&&(l=e.R8)),r===e.RG&&(s===e.FLOAT&&(l=e.RG32F),s===e.HALF_FLOAT&&(l=e.RG16F),s===e.UNSIGNED_BYTE&&(l=e.RG8)),r===e.RGBA&&(s===e.FLOAT&&(l=e.RGBA32F),s===e.HALF_FLOAT&&(l=e.RGBA16F),s===e.UNSIGNED_BYTE&&(l=a===t&&!1===o?e.SRGB8_ALPHA8:e.RGBA8),s===e.UNSIGNED_SHORT_4_4_4_4&&(l=e.RGBA4),s===e.UNSIGNED_SHORT_5_5_5_1&&(l=e.RGB5_A1)),(l===e.R16F||l===e.R32F||l===e.RG16F||l===e.RG32F||l===e.RGBA16F||l===e.RGBA32F)&&n.get("EXT_color_buffer_float"),l}function C(e,t,i){return!0===T(e,i)||e.isFramebufferTexture&&1003!==e.minFilter&&1006!==e.minFilter?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function L(t){return 1003===t||1004===t||1005===t?e.NEAREST:e.LINEAR}function P(e){let t=e.target;t.removeEventListener("dispose",P),function e(t){let i=s.get(t);if(void 0===i.__webglInit)return;let n=t.source,r=y.get(n);if(r){let a=r[i.__cacheKey];a.usedTimes--,0===a.usedTimes&&U(t),0===Object.keys(r).length&&y.delete(n)}s.remove(t)}(t),t.isVideoTexture&&g.delete(t)}function I(t){let i=t.target;i.removeEventListener("dispose",I),function t(i){let n=i.texture,r=s.get(i),a=s.get(n);if(void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),l.memory.textures--),i.depthTexture&&i.depthTexture.dispose(),i.isWebGLCubeRenderTarget)for(let o=0;o<6;o++)e.deleteFramebuffer(r.__webglFramebuffer[o]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[o]);else{if(e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer)for(let h=0;h<r.__webglColorRenderbuffer.length;h++)r.__webglColorRenderbuffer[h]&&e.deleteRenderbuffer(r.__webglColorRenderbuffer[h]);r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer)}if(i.isWebGLMultipleRenderTargets)for(let u=0,c=n.length;u<c;u++){let d=s.get(n[u]);d.__webglTexture&&(e.deleteTexture(d.__webglTexture),l.memory.textures--),s.remove(n[u])}s.remove(n),s.remove(i)}(i)}function U(t){let i=s.get(t);e.deleteTexture(i.__webglTexture);let n=t.source,r=y.get(n);delete r[i.__cacheKey],l.memory.textures--}let D=0;function N(t,i){let n=s.get(t);if(t.isVideoTexture&&function e(t){let i=l.render.frame;g.get(t)!==i&&(g.set(t,i),t.update())}(t),!1===t.isRenderTargetTexture&&t.version>0&&n.__version!==t.version){let a=t.image;if(null===a)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(!1===a.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{k(n,t,i);return}}r.bindTexture(e.TEXTURE_2D,n.__webglTexture,e.TEXTURE0+i)}let F={1e3:e.REPEAT,1001:e.CLAMP_TO_EDGE,1002:e.MIRRORED_REPEAT},B={1003:e.NEAREST,1004:e.NEAREST_MIPMAP_NEAREST,1005:e.NEAREST_MIPMAP_LINEAR,1006:e.LINEAR,1007:e.LINEAR_MIPMAP_NEAREST,1008:e.LINEAR_MIPMAP_LINEAR},z={512:e.NEVER,519:e.ALWAYS,513:e.LESS,515:e.LEQUAL,514:e.EQUAL,518:e.GEQUAL,516:e.GREATER,517:e.NOTEQUAL};function G(t,i,r){if(r?(e.texParameteri(t,e.TEXTURE_WRAP_S,F[i.wrapS]),e.texParameteri(t,e.TEXTURE_WRAP_T,F[i.wrapT]),(t===e.TEXTURE_3D||t===e.TEXTURE_2D_ARRAY)&&e.texParameteri(t,e.TEXTURE_WRAP_R,F[i.wrapR]),e.texParameteri(t,e.TEXTURE_MAG_FILTER,B[i.magFilter]),e.texParameteri(t,e.TEXTURE_MIN_FILTER,B[i.minFilter])):(e.texParameteri(t,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(t,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),(t===e.TEXTURE_3D||t===e.TEXTURE_2D_ARRAY)&&e.texParameteri(t,e.TEXTURE_WRAP_R,e.CLAMP_TO_EDGE),(1001!==i.wrapS||1001!==i.wrapT)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(t,e.TEXTURE_MAG_FILTER,L(i.magFilter)),e.texParameteri(t,e.TEXTURE_MIN_FILTER,L(i.minFilter)),1003!==i.minFilter&&1006!==i.minFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),i.compareFunction&&(e.texParameteri(t,e.TEXTURE_COMPARE_MODE,e.COMPARE_REF_TO_TEXTURE),e.texParameteri(t,e.TEXTURE_COMPARE_FUNC,z[i.compareFunction])),!0===n.has("EXT_texture_filter_anisotropic")){let o=n.get("EXT_texture_filter_anisotropic");1003!==i.magFilter&&(1005===i.minFilter||1008===i.minFilter)&&(1015!==i.type||!1!==n.has("OES_texture_float_linear"))&&(!1!==h||1016!==i.type||!1!==n.has("OES_texture_half_float_linear"))&&(i.anisotropy>1||s.get(i).__currentAnisotropy)&&(e.texParameterf(t,o.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(i.anisotropy,a.getMaxAnisotropy())),s.get(i).__currentAnisotropy=i.anisotropy)}}function H(t,i){let n=!1;void 0===t.__webglInit&&(t.__webglInit=!0,i.addEventListener("dispose",P));let r=i.source,s=y.get(r);void 0===s&&(s={},y.set(r,s));let a=function e(t){let i=[];return i.push(t.wrapS),i.push(t.wrapT),i.push(t.wrapR||0),i.push(t.magFilter),i.push(t.minFilter),i.push(t.anisotropy),i.push(t.internalFormat),i.push(t.format),i.push(t.type),i.push(t.generateMipmaps),i.push(t.premultiplyAlpha),i.push(t.flipY),i.push(t.unpackAlignment),i.push(t.colorSpace),i.join()}(i);if(a!==t.__cacheKey){void 0===s[a]&&(s[a]={texture:e.createTexture(),usedTimes:0},l.memory.textures++,n=!0),s[a].usedTimes++;let o=s[t.__cacheKey];void 0!==o&&(s[t.__cacheKey].usedTimes--,0===o.usedTimes&&U(i)),t.__cacheKey=a,t.__webglTexture=s[a].texture}return n}function k(t,i,n){let a=e.TEXTURE_2D;(i.isDataArrayTexture||i.isCompressedArrayTexture)&&(a=e.TEXTURE_2D_ARRAY),i.isData3DTexture&&(a=e.TEXTURE_3D);let l=H(t,i),u=i.source;r.bindTexture(a,t.__webglTexture,e.TEXTURE0+n);let c=s.get(u);if(u.version!==c.__version||!0===l){var p;r.activeTexture(e.TEXTURE0+n),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,i.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,i.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,e.NONE);let f=(p=i,!h&&(1001!==p.wrapS||1001!==p.wrapT||1003!==p.minFilter&&1006!==p.minFilter)&&!1===E(i.image)),m=M(i.image,f,!1,d);m=Y(i,m);let $=E(m)||h,g=o.convert(i.format,i.colorSpace),v=o.convert(i.type),x=R(i.internalFormat,g,v,i.colorSpace);G(a,i,$);let y,S=i.mipmaps,_=h&&!0!==i.isVideoTexture,b=void 0===c.__version||!0===l,w=C(i,m,$);if(i.isDepthTexture)x=e.DEPTH_COMPONENT,h?x=1015===i.type?e.DEPTH_COMPONENT32F:1014===i.type?e.DEPTH_COMPONENT24:1020===i.type?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT16:1015===i.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===i.format&&x===e.DEPTH_COMPONENT&&1012!==i.type&&1014!==i.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=1014,v=o.convert(i.type)),1027===i.format&&x===e.DEPTH_COMPONENT&&(x=e.DEPTH_STENCIL,1020!==i.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=1020,v=o.convert(i.type))),b&&(_?r.texStorage2D(e.TEXTURE_2D,1,x,m.width,m.height):r.texImage2D(e.TEXTURE_2D,0,x,m.width,m.height,0,g,v,null));else if(i.isDataTexture){if(S.length>0&&$){_&&b&&r.texStorage2D(e.TEXTURE_2D,w,x,S[0].width,S[0].height);for(let L=0,P=S.length;L<P;L++)y=S[L],_?r.texSubImage2D(e.TEXTURE_2D,L,0,0,y.width,y.height,g,v,y.data):r.texImage2D(e.TEXTURE_2D,L,x,y.width,y.height,0,g,v,y.data);i.generateMipmaps=!1}else _?(b&&r.texStorage2D(e.TEXTURE_2D,w,x,m.width,m.height),r.texSubImage2D(e.TEXTURE_2D,0,0,0,m.width,m.height,g,v,m.data)):r.texImage2D(e.TEXTURE_2D,0,x,m.width,m.height,0,g,v,m.data)}else if(i.isCompressedTexture){if(i.isCompressedArrayTexture){_&&b&&r.texStorage3D(e.TEXTURE_2D_ARRAY,w,x,S[0].width,S[0].height,m.depth);for(let I=0,U=S.length;I<U;I++)y=S[I],1023!==i.format?null!==g?_?r.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,I,0,0,0,y.width,y.height,m.depth,g,y.data,0,0):r.compressedTexImage3D(e.TEXTURE_2D_ARRAY,I,x,y.width,y.height,m.depth,0,y.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):_?r.texSubImage3D(e.TEXTURE_2D_ARRAY,I,0,0,0,y.width,y.height,m.depth,g,v,y.data):r.texImage3D(e.TEXTURE_2D_ARRAY,I,x,y.width,y.height,m.depth,0,g,v,y.data)}else{_&&b&&r.texStorage2D(e.TEXTURE_2D,w,x,S[0].width,S[0].height);for(let D=0,N=S.length;D<N;D++)y=S[D],1023!==i.format?null!==g?_?r.compressedTexSubImage2D(e.TEXTURE_2D,D,0,0,y.width,y.height,g,y.data):r.compressedTexImage2D(e.TEXTURE_2D,D,x,y.width,y.height,0,y.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):_?r.texSubImage2D(e.TEXTURE_2D,D,0,0,y.width,y.height,g,v,y.data):r.texImage2D(e.TEXTURE_2D,D,x,y.width,y.height,0,g,v,y.data)}}else if(i.isDataArrayTexture)_?(b&&r.texStorage3D(e.TEXTURE_2D_ARRAY,w,x,m.width,m.height,m.depth),r.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,m.width,m.height,m.depth,g,v,m.data)):r.texImage3D(e.TEXTURE_2D_ARRAY,0,x,m.width,m.height,m.depth,0,g,v,m.data);else if(i.isData3DTexture)_?(b&&r.texStorage3D(e.TEXTURE_3D,w,x,m.width,m.height,m.depth),r.texSubImage3D(e.TEXTURE_3D,0,0,0,0,m.width,m.height,m.depth,g,v,m.data)):r.texImage3D(e.TEXTURE_3D,0,x,m.width,m.height,m.depth,0,g,v,m.data);else if(i.isFramebufferTexture){if(b){if(_)r.texStorage2D(e.TEXTURE_2D,w,x,m.width,m.height);else{let F=m.width,O=m.height;for(let B=0;B<w;B++)r.texImage2D(e.TEXTURE_2D,B,x,F,O,0,g,v,null),F>>=1,O>>=1}}}else if(S.length>0&&$){_&&b&&r.texStorage2D(e.TEXTURE_2D,w,x,S[0].width,S[0].height);for(let z=0,k=S.length;z<k;z++)y=S[z],_?r.texSubImage2D(e.TEXTURE_2D,z,0,0,g,v,y):r.texImage2D(e.TEXTURE_2D,z,x,g,v,y);i.generateMipmaps=!1}else _?(b&&r.texStorage2D(e.TEXTURE_2D,w,x,m.width,m.height),r.texSubImage2D(e.TEXTURE_2D,0,0,0,g,v,m)):r.texImage2D(e.TEXTURE_2D,0,x,g,v,m);T(i,$)&&A(a),c.__version=u.version,i.onUpdate&&i.onUpdate(i)}t.__version=i.version}function V(t,i,n,a,l){let h=o.convert(n.format,n.colorSpace),u=o.convert(n.type),c=R(n.internalFormat,h,u,n.colorSpace),d=s.get(i);d.__hasExternalTextures||(l===e.TEXTURE_3D||l===e.TEXTURE_2D_ARRAY?r.texImage3D(l,0,c,i.width,i.height,i.depth,0,h,u,null):r.texImage2D(l,0,c,i.width,i.height,0,h,u,null)),r.bindFramebuffer(e.FRAMEBUFFER,t),q(i)?f.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,a,l,s.get(n).__webglTexture,0,j(i)):(l===e.TEXTURE_2D||l>=e.TEXTURE_CUBE_MAP_POSITIVE_X&&l<=e.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&e.framebufferTexture2D(e.FRAMEBUFFER,a,l,s.get(n).__webglTexture,0),r.bindFramebuffer(e.FRAMEBUFFER,null)}function W(t,i,n){if(e.bindRenderbuffer(e.RENDERBUFFER,t),i.depthBuffer&&!i.stencilBuffer){let r=e.DEPTH_COMPONENT16;if(n||q(i)){let s=i.depthTexture;s&&s.isDepthTexture&&(1015===s.type?r=e.DEPTH_COMPONENT32F:1014===s.type&&(r=e.DEPTH_COMPONENT24));let a=j(i);q(i)?f.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,a,r,i.width,i.height):e.renderbufferStorageMultisample(e.RENDERBUFFER,a,r,i.width,i.height)}else e.renderbufferStorage(e.RENDERBUFFER,r,i.width,i.height);e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)}else if(i.depthBuffer&&i.stencilBuffer){let l=j(i);n&&!1===q(i)?e.renderbufferStorageMultisample(e.RENDERBUFFER,l,e.DEPTH24_STENCIL8,i.width,i.height):q(i)?f.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,l,e.DEPTH24_STENCIL8,i.width,i.height):e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,i.width,i.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)}else{let h=!0===i.isWebGLMultipleRenderTargets?i.texture:[i.texture];for(let u=0;u<h.length;u++){let c=h[u],d=o.convert(c.format,c.colorSpace),p=o.convert(c.type),m=R(c.internalFormat,d,p,c.colorSpace),$=j(i);n&&!1===q(i)?e.renderbufferStorageMultisample(e.RENDERBUFFER,$,m,i.width,i.height):q(i)?f.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,$,m,i.width,i.height):e.renderbufferStorage(e.RENDERBUFFER,m,i.width,i.height)}}e.bindRenderbuffer(e.RENDERBUFFER,null)}function X(t){let i=s.get(t),n=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!i.__autoAllocateDepthBuffer){if(n)throw Error("target.depthTexture not supported in Cube render targets");!function t(i,n){let a=n&&n.isWebGLCubeRenderTarget;if(a)throw Error("Depth Texture with cube render targets is not supported");if(r.bindFramebuffer(e.FRAMEBUFFER,i),!(n.depthTexture&&n.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");s.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),N(n.depthTexture,0);let o=s.get(n.depthTexture).__webglTexture,l=j(n);if(1026===n.depthTexture.format)q(n)?f.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,o,0,l):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,o,0);else if(1027===n.depthTexture.format)q(n)?f.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,o,0,l):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,o,0);else throw Error("Unknown depthTexture format")}(i.__webglFramebuffer,t)}else if(n){i.__webglDepthbuffer=[];for(let a=0;a<6;a++)r.bindFramebuffer(e.FRAMEBUFFER,i.__webglFramebuffer[a]),i.__webglDepthbuffer[a]=e.createRenderbuffer(),W(i.__webglDepthbuffer[a],t,!1)}else r.bindFramebuffer(e.FRAMEBUFFER,i.__webglFramebuffer),i.__webglDepthbuffer=e.createRenderbuffer(),W(i.__webglDepthbuffer,t,!1);r.bindFramebuffer(e.FRAMEBUFFER,null)}function j(e){return Math.min(p,e.samples)}function q(e){let t=s.get(e);return h&&e.samples>0&&!0===n.has("WEBGL_multisampled_render_to_texture")&&!1!==t.__useRenderToTexture}function Y(e,r){let s=e.colorSpace,a=e.format,o=e.type;return!0===e.isCompressedTexture||1035===e.format||s!==i&&""!==s&&(s===t?!1===h?!0===n.has("EXT_sRGB")&&1023===a?(e.format=1035,e.minFilter=1006,e.generateMipmaps=!1):r=O.sRGBToLinear(r):(1023!==a||1009!==o)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",s)),r}this.allocateTextureUnit=function e(){let t=D;return t>=u&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+u),D+=1,t},this.resetTextureUnits=function e(){D=0},this.setTexture2D=N,this.setTexture2DArray=function t(i,n){let a=s.get(i);if(i.version>0&&a.__version!==i.version){k(a,i,n);return}r.bindTexture(e.TEXTURE_2D_ARRAY,a.__webglTexture,e.TEXTURE0+n)},this.setTexture3D=function t(i,n){let a=s.get(i);if(i.version>0&&a.__version!==i.version){k(a,i,n);return}r.bindTexture(e.TEXTURE_3D,a.__webglTexture,e.TEXTURE0+n)},this.setTextureCube=function t(i,n){let a=s.get(i);if(i.version>0&&a.__version!==i.version){(function t(i,n,a){if(6!==n.image.length)return;let l=H(i,n),u=n.source;r.bindTexture(e.TEXTURE_CUBE_MAP,i.__webglTexture,e.TEXTURE0+a);let d=s.get(u);if(u.version!==d.__version||!0===l){r.activeTexture(e.TEXTURE0+a),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,n.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,n.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,e.NONE);let p=n.isCompressedTexture||n.image[0].isCompressedTexture,f=n.image[0]&&n.image[0].isDataTexture,m=[];for(let $=0;$<6;$++)p||f?m[$]=f?n.image[$].image:n.image[$]:m[$]=M(n.image[$],!1,!0,c),m[$]=Y(n,m[$]);let g=m[0],v=E(g)||h,x=o.convert(n.format,n.colorSpace),y=o.convert(n.type),S=R(n.internalFormat,x,y,n.colorSpace),_=h&&!0!==n.isVideoTexture,b=void 0===d.__version||!0===l,w=C(n,g,v);G(e.TEXTURE_CUBE_MAP,n,v);let L;if(p){_&&b&&r.texStorage2D(e.TEXTURE_CUBE_MAP,w,S,g.width,g.height);for(let P=0;P<6;P++){L=m[P].mipmaps;for(let I=0;I<L.length;I++){let U=L[I];1023!==n.format?null!==x?_?r.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+P,I,0,0,U.width,U.height,x,U.data):r.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+P,I,S,U.width,U.height,0,U.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):_?r.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+P,I,0,0,U.width,U.height,x,y,U.data):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+P,I,S,U.width,U.height,0,x,y,U.data)}}}else{L=n.mipmaps,_&&b&&(L.length>0&&w++,r.texStorage2D(e.TEXTURE_CUBE_MAP,w,S,m[0].width,m[0].height));for(let D=0;D<6;D++)if(f){_?r.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+D,0,0,0,m[D].width,m[D].height,x,y,m[D].data):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+D,0,S,m[D].width,m[D].height,0,x,y,m[D].data);for(let N=0;N<L.length;N++){let F=L[N],O=F.image[D].image;_?r.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+D,N+1,0,0,O.width,O.height,x,y,O.data):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+D,N+1,S,O.width,O.height,0,x,y,O.data)}}else{_?r.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+D,0,0,0,x,y,m[D]):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+D,0,S,x,y,m[D]);for(let B=0;B<L.length;B++){let z=L[B];_?r.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+D,B+1,0,0,x,y,z.image[D]):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+D,B+1,S,x,y,z.image[D])}}}T(n,v)&&A(e.TEXTURE_CUBE_MAP),d.__version=u.version,n.onUpdate&&n.onUpdate(n)}i.__version=n.version})(a,i,n);return}r.bindTexture(e.TEXTURE_CUBE_MAP,a.__webglTexture,e.TEXTURE0+n)},this.rebindTextures=function t(i,n,r){let a=s.get(i);void 0!==n&&V(a.__webglFramebuffer,i,i.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D),void 0!==r&&X(i)},this.setupRenderTarget=function t(i){let n=i.texture,u=s.get(i),c=s.get(n);i.addEventListener("dispose",I),!0!==i.isWebGLMultipleRenderTargets&&(void 0===c.__webglTexture&&(c.__webglTexture=e.createTexture()),c.__version=n.version,l.memory.textures++);let d=!0===i.isWebGLCubeRenderTarget,p=!0===i.isWebGLMultipleRenderTargets,f=E(i)||h;if(d){u.__webglFramebuffer=[];for(let m=0;m<6;m++)u.__webglFramebuffer[m]=e.createFramebuffer()}else{if(u.__webglFramebuffer=e.createFramebuffer(),p){if(a.drawBuffers){let $=i.texture;for(let g=0,v=$.length;g<v;g++){let x=s.get($[g]);void 0===x.__webglTexture&&(x.__webglTexture=e.createTexture(),l.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.")}if(h&&i.samples>0&&!1===q(i)){let y=p?n:[n];u.__webglMultisampledFramebuffer=e.createFramebuffer(),u.__webglColorRenderbuffer=[],r.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer);for(let S=0;S<y.length;S++){let _=y[S];u.__webglColorRenderbuffer[S]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,u.__webglColorRenderbuffer[S]);let b=o.convert(_.format,_.colorSpace),M=o.convert(_.type),w=R(_.internalFormat,b,M,_.colorSpace,!0===i.isXRRenderTarget),C=j(i);e.renderbufferStorageMultisample(e.RENDERBUFFER,C,w,i.width,i.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+S,e.RENDERBUFFER,u.__webglColorRenderbuffer[S])}e.bindRenderbuffer(e.RENDERBUFFER,null),i.depthBuffer&&(u.__webglDepthRenderbuffer=e.createRenderbuffer(),W(u.__webglDepthRenderbuffer,i,!0)),r.bindFramebuffer(e.FRAMEBUFFER,null)}}if(d){r.bindTexture(e.TEXTURE_CUBE_MAP,c.__webglTexture),G(e.TEXTURE_CUBE_MAP,n,f);for(let L=0;L<6;L++)V(u.__webglFramebuffer[L],i,n,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+L);T(n,f)&&A(e.TEXTURE_CUBE_MAP),r.unbindTexture()}else if(p){let P=i.texture;for(let U=0,D=P.length;U<D;U++){let N=P[U],F=s.get(N);r.bindTexture(e.TEXTURE_2D,F.__webglTexture),G(e.TEXTURE_2D,N,f),V(u.__webglFramebuffer,i,N,e.COLOR_ATTACHMENT0+U,e.TEXTURE_2D),T(N,f)&&A(e.TEXTURE_2D)}r.unbindTexture()}else{let O=e.TEXTURE_2D;(i.isWebGL3DRenderTarget||i.isWebGLArrayRenderTarget)&&(h?O=i.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),r.bindTexture(O,c.__webglTexture),G(O,n,f),V(u.__webglFramebuffer,i,n,e.COLOR_ATTACHMENT0,O),T(n,f)&&A(O),r.unbindTexture()}i.depthBuffer&&X(i)},this.updateRenderTargetMipmap=function t(i){let n=E(i)||h,a=!0===i.isWebGLMultipleRenderTargets?i.texture:[i.texture];for(let o=0,l=a.length;o<l;o++){let u=a[o];if(T(u,n)){let c=i.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,d=s.get(u).__webglTexture;r.bindTexture(c,d),A(c),r.unbindTexture()}}},this.updateMultisampleRenderTarget=function t(i){if(h&&i.samples>0&&!1===q(i)){let n=i.isWebGLMultipleRenderTargets?i.texture:[i.texture],a=i.width,o=i.height,l=e.COLOR_BUFFER_BIT,u=[],c=i.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,d=s.get(i),p=!0===i.isWebGLMultipleRenderTargets;if(p)for(let f=0;f<n.length;f++)r.bindFramebuffer(e.FRAMEBUFFER,d.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+f,e.RENDERBUFFER,null),r.bindFramebuffer(e.FRAMEBUFFER,d.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+f,e.TEXTURE_2D,null,0);r.bindFramebuffer(e.READ_FRAMEBUFFER,d.__webglMultisampledFramebuffer),r.bindFramebuffer(e.DRAW_FRAMEBUFFER,d.__webglFramebuffer);for(let $=0;$<n.length;$++){u.push(e.COLOR_ATTACHMENT0+$),i.depthBuffer&&u.push(c);let g=void 0!==d.__ignoreDepthValues&&d.__ignoreDepthValues;if(!1===g&&(i.depthBuffer&&(l|=e.DEPTH_BUFFER_BIT),i.stencilBuffer&&(l|=e.STENCIL_BUFFER_BIT)),p&&e.framebufferRenderbuffer(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,d.__webglColorRenderbuffer[$]),!0===g&&(e.invalidateFramebuffer(e.READ_FRAMEBUFFER,[c]),e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[c])),p){let v=s.get(n[$]).__webglTexture;e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,v,0)}e.blitFramebuffer(0,0,a,o,0,0,a,o,l,e.NEAREST),m&&e.invalidateFramebuffer(e.READ_FRAMEBUFFER,u)}if(r.bindFramebuffer(e.READ_FRAMEBUFFER,null),r.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),p)for(let x=0;x<n.length;x++){r.bindFramebuffer(e.FRAMEBUFFER,d.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+x,e.RENDERBUFFER,d.__webglColorRenderbuffer[x]);let y=s.get(n[x]).__webglTexture;r.bindFramebuffer(e.FRAMEBUFFER,d.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+x,e.TEXTURE_2D,y,0)}r.bindFramebuffer(e.DRAW_FRAMEBUFFER,d.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=X,this.setupFrameBufferTexture=V,this.useMultisampledRTT=q}function re(e,i,n){let r=n.isWebGL2;return{convert:function n(s,a=""){let o;if(1009===s)return e.UNSIGNED_BYTE;if(1017===s)return e.UNSIGNED_SHORT_4_4_4_4;if(1018===s)return e.UNSIGNED_SHORT_5_5_5_1;if(1010===s)return e.BYTE;if(1011===s)return e.SHORT;if(1012===s)return e.UNSIGNED_SHORT;if(1013===s)return e.INT;if(1014===s)return e.UNSIGNED_INT;if(1015===s)return e.FLOAT;if(1016===s)return r?e.HALF_FLOAT:null!==(o=i.get("OES_texture_half_float"))?o.HALF_FLOAT_OES:null;if(1021===s)return e.ALPHA;if(1023===s)return e.RGBA;if(1024===s)return e.LUMINANCE;if(1025===s)return e.LUMINANCE_ALPHA;if(1026===s)return e.DEPTH_COMPONENT;if(1027===s)return e.DEPTH_STENCIL;if(1035===s)return null!==(o=i.get("EXT_sRGB"))?o.SRGB_ALPHA_EXT:null;if(1028===s)return e.RED;if(1029===s)return e.RED_INTEGER;if(1030===s)return e.RG;if(1031===s)return e.RG_INTEGER;if(1033===s)return e.RGBA_INTEGER;if(33776===s||33777===s||33778===s||33779===s){if(a===t){if(null===(o=i.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(33776===s)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(33777===s)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(33778===s)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(33779===s)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(o=i.get("WEBGL_compressed_texture_s3tc")))return null;if(33776===s)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===s)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===s)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===s)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}}if(35840===s||35841===s||35842===s||35843===s){if(null===(o=i.get("WEBGL_compressed_texture_pvrtc")))return null;if(35840===s)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===s)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===s)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===s)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===s)return null!==(o=i.get("WEBGL_compressed_texture_etc1"))?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===s||37496===s){if(null===(o=i.get("WEBGL_compressed_texture_etc")))return null;if(37492===s)return a===t?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(37496===s)return a===t?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}if(37808===s||37809===s||37810===s||37811===s||37812===s||37813===s||37814===s||37815===s||37816===s||37817===s||37818===s||37819===s||37820===s||37821===s){if(null===(o=i.get("WEBGL_compressed_texture_astc")))return null;if(37808===s)return a===t?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===s)return a===t?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===s)return a===t?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===s)return a===t?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===s)return a===t?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===s)return a===t?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===s)return a===t?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===s)return a===t?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===s)return a===t?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===s)return a===t?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===s)return a===t?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===s)return a===t?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===s)return a===t?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===s)return a===t?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}if(36492===s){if(null===(o=i.get("EXT_texture_compression_bptc")))return null;if(36492===s)return a===t?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(36283===s||36284===s||36285===s||36286===s){if(null===(o=i.get("EXT_texture_compression_rgtc")))return null;if(36492===s)return o.COMPRESSED_RED_RGTC1_EXT;if(36284===s)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(36285===s)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(36286===s)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return 1020===s?r?e.UNSIGNED_INT_24_8:null!==(o=i.get("WEBGL_depth_texture"))?o.UNSIGNED_INT_24_8_WEBGL:null:void 0!==e[s]?e[s]:null}}}class rt extends t6{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ri extends eW{constructor(){super(),this.isGroup=!0,this.type="Group"}}let rn={type:"move"};class rr{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new ri,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new ri,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Y,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Y),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new ri,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Y,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Y),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){let t=this._hand;if(t)for(let i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,i){let n=null,r=null,s=null,a=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){for(let h of(s=!0,e.hand.values())){let u=t.getJointPose(h,i),c=this._getHandJoint(l,h);null!==u&&(c.matrix.fromArray(u.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,c.jointRadius=u.radius),c.visible=null!==u}let d=l.joints["index-finger-tip"],p=l.joints["thumb-tip"],f=d.position.distanceTo(p.position);l.inputState.pinching&&f>.025?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&f<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&null!==(r=t.getPose(e.gripSpace,i))&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1);null!==a&&(null===(n=t.getPose(e.targetRaySpace,i))&&null!==r&&(n=r),null!==n&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,n.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(n.linearVelocity)):a.hasLinearVelocity=!1,n.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(n.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(rn)))}return null!==a&&(a.visible=null!==n),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==s),this}_getHandJoint(e,t){if(void 0===e.joints[t.jointName]){let i=new ri;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class rs extends k{constructor(e,t,i,n,r,s,a,o,l,h){if(1026!==(h=void 0!==h?h:1026)&&1027!==h)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&1026===h&&(i=1014),void 0===i&&1027===h&&(i=1020),super(null,n,r,s,a,o,h,i,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==a?a:1003,this.minFilter=void 0!==o?o:1003,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){let t=super.toJSON(e);return null!==this.compareFunction&&(t.compareFunction=this.compareFunction),t}}function ra(e,t){function i(e,t){!0===e.matrixAutoUpdate&&e.updateMatrix(),t.value.copy(e.matrix)}function n(n,r){n.opacity.value=r.opacity,r.color&&n.diffuse.value.copy(r.color),r.emissive&&n.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(n.map.value=r.map,i(r.map,n.mapTransform)),r.alphaMap&&(n.alphaMap.value=r.alphaMap,i(r.alphaMap,n.alphaMapTransform)),r.bumpMap&&(n.bumpMap.value=r.bumpMap,i(r.bumpMap,n.bumpMapTransform),n.bumpScale.value=r.bumpScale,1===r.side&&(n.bumpScale.value*=-1)),r.normalMap&&(n.normalMap.value=r.normalMap,i(r.normalMap,n.normalMapTransform),n.normalScale.value.copy(r.normalScale),1===r.side&&n.normalScale.value.negate()),r.displacementMap&&(n.displacementMap.value=r.displacementMap,i(r.displacementMap,n.displacementMapTransform),n.displacementScale.value=r.displacementScale,n.displacementBias.value=r.displacementBias),r.emissiveMap&&(n.emissiveMap.value=r.emissiveMap,i(r.emissiveMap,n.emissiveMapTransform)),r.specularMap&&(n.specularMap.value=r.specularMap,i(r.specularMap,n.specularMapTransform)),r.alphaTest>0&&(n.alphaTest.value=r.alphaTest);let s=t.get(r).envMap;if(s&&(n.envMap.value=s,n.flipEnvMap.value=s.isCubeTexture&&!1===s.isRenderTargetTexture?-1:1,n.reflectivity.value=r.reflectivity,n.ior.value=r.ior,n.refractionRatio.value=r.refractionRatio),r.lightMap){n.lightMap.value=r.lightMap;let a=!0===e.useLegacyLights?Math.PI:1;n.lightMapIntensity.value=r.lightMapIntensity*a,i(r.lightMap,n.lightMapTransform)}r.aoMap&&(n.aoMap.value=r.aoMap,n.aoMapIntensity.value=r.aoMapIntensity,i(r.aoMap,n.aoMapTransform))}return{refreshFogUniforms:function t(i,n){n.color.getRGB(i.fogColor.value,tk(e)),n.isFog?(i.fogNear.value=n.near,i.fogFar.value=n.far):n.isFogExp2&&(i.fogDensity.value=n.density)},refreshMaterialUniforms:function e(r,s,a,o,l){var h,u,c,d,p,f,m,$,g,v,x,y,S,_,b,M,E,T,w;s.isMeshBasicMaterial?n(r,s):s.isMeshLambertMaterial?n(r,s):s.isMeshToonMaterial?(n(r,s),h=r,(u=s).gradientMap&&(h.gradientMap.value=u.gradientMap)):s.isMeshPhongMaterial?(n(r,s),c=r,d=s,c.specular.value.copy(d.specular),c.shininess.value=Math.max(d.shininess,1e-4)):s.isMeshStandardMaterial?(n(r,s),function e(n,r){n.metalness.value=r.metalness,r.metalnessMap&&(n.metalnessMap.value=r.metalnessMap,i(r.metalnessMap,n.metalnessMapTransform)),n.roughness.value=r.roughness,r.roughnessMap&&(n.roughnessMap.value=r.roughnessMap,i(r.roughnessMap,n.roughnessMapTransform));let s=t.get(r).envMap;s&&(n.envMapIntensity.value=r.envMapIntensity)}(r,s),s.isMeshPhysicalMaterial&&(p=r,f=s,m=l,p.ior.value=f.ior,f.sheen>0&&(p.sheenColor.value.copy(f.sheenColor).multiplyScalar(f.sheen),p.sheenRoughness.value=f.sheenRoughness,f.sheenColorMap&&(p.sheenColorMap.value=f.sheenColorMap,i(f.sheenColorMap,p.sheenColorMapTransform)),f.sheenRoughnessMap&&(p.sheenRoughnessMap.value=f.sheenRoughnessMap,i(f.sheenRoughnessMap,p.sheenRoughnessMapTransform))),f.clearcoat>0&&(p.clearcoat.value=f.clearcoat,p.clearcoatRoughness.value=f.clearcoatRoughness,f.clearcoatMap&&(p.clearcoatMap.value=f.clearcoatMap,i(f.clearcoatMap,p.clearcoatMapTransform)),f.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=f.clearcoatRoughnessMap,i(f.clearcoatRoughnessMap,p.clearcoatRoughnessMapTransform)),f.clearcoatNormalMap&&(p.clearcoatNormalMap.value=f.clearcoatNormalMap,i(f.clearcoatNormalMap,p.clearcoatNormalMapTransform),p.clearcoatNormalScale.value.copy(f.clearcoatNormalScale),1===f.side&&p.clearcoatNormalScale.value.negate())),f.iridescence>0&&(p.iridescence.value=f.iridescence,p.iridescenceIOR.value=f.iridescenceIOR,p.iridescenceThicknessMinimum.value=f.iridescenceThicknessRange[0],p.iridescenceThicknessMaximum.value=f.iridescenceThicknessRange[1],f.iridescenceMap&&(p.iridescenceMap.value=f.iridescenceMap,i(f.iridescenceMap,p.iridescenceMapTransform)),f.iridescenceThicknessMap&&(p.iridescenceThicknessMap.value=f.iridescenceThicknessMap,i(f.iridescenceThicknessMap,p.iridescenceThicknessMapTransform))),f.transmission>0&&(p.transmission.value=f.transmission,p.transmissionSamplerMap.value=m.texture,p.transmissionSamplerSize.value.set(m.width,m.height),f.transmissionMap&&(p.transmissionMap.value=f.transmissionMap,i(f.transmissionMap,p.transmissionMapTransform)),p.thickness.value=f.thickness,f.thicknessMap&&(p.thicknessMap.value=f.thicknessMap,i(f.thicknessMap,p.thicknessMapTransform)),p.attenuationDistance.value=f.attenuationDistance,p.attenuationColor.value.copy(f.attenuationColor)),f.anisotropy>0&&(p.anisotropyVector.value.set(f.anisotropy*Math.cos(f.anisotropyRotation),f.anisotropy*Math.sin(f.anisotropyRotation)),f.anisotropyMap&&(p.anisotropyMap.value=f.anisotropyMap,i(f.anisotropyMap,p.anisotropyMapTransform))),p.specularIntensity.value=f.specularIntensity,p.specularColor.value.copy(f.specularColor),f.specularColorMap&&(p.specularColorMap.value=f.specularColorMap,i(f.specularColorMap,p.specularColorMapTransform)),f.specularIntensityMap&&(p.specularIntensityMap.value=f.specularIntensityMap,i(f.specularIntensityMap,p.specularIntensityMapTransform)))):s.isMeshMatcapMaterial?(n(r,s),$=r,(g=s).matcap&&($.matcap.value=g.matcap)):s.isMeshDepthMaterial?n(r,s):s.isMeshDistanceMaterial?(n(r,s),function e(i,n){let r=t.get(n).light;i.referencePosition.value.setFromMatrixPosition(r.matrixWorld),i.nearDistance.value=r.shadow.camera.near,i.farDistance.value=r.shadow.camera.far}(r,s)):s.isMeshNormalMaterial?n(r,s):s.isLineBasicMaterial?(v=r,x=s,v.diffuse.value.copy(x.color),v.opacity.value=x.opacity,x.map&&(v.map.value=x.map,i(x.map,v.mapTransform)),s.isLineDashedMaterial&&(y=r,S=s,y.dashSize.value=S.dashSize,y.totalSize.value=S.dashSize+S.gapSize,y.scale.value=S.scale)):s.isPointsMaterial?(_=r,b=s,M=a,E=o,_.diffuse.value.copy(b.color),_.opacity.value=b.opacity,_.size.value=b.size*M,_.scale.value=.5*E,b.map&&(_.map.value=b.map,i(b.map,_.uvTransform)),b.alphaMap&&(_.alphaMap.value=b.alphaMap,i(b.alphaMap,_.alphaMapTransform)),b.alphaTest>0&&(_.alphaTest.value=b.alphaTest)):s.isSpriteMaterial?(T=r,w=s,T.diffuse.value.copy(w.color),T.opacity.value=w.opacity,T.rotation.value=w.rotation,w.map&&(T.map.value=w.map,i(w.map,T.mapTransform)),w.alphaMap&&(T.alphaMap.value=w.alphaMap,i(w.alphaMap,T.alphaMapTransform)),w.alphaTest>0&&(T.alphaTest.value=w.alphaTest)):s.isShadowMaterial?(r.color.value.copy(s.color),r.opacity.value=s.opacity):s.isShaderMaterial&&(s.uniformsNeedUpdate=!1)}}}function ro(e,t,i,n){let r={},s={},a=[],o=i.isWebGL2?e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(e,t,i){let n=e.value;if(void 0===i[t]){if("number"==typeof n)i[t]=n;else{let r=Array.isArray(n)?n:[n],s=[];for(let a=0;a<r.length;a++)s.push(r[a].clone());i[t]=s}return!0}if("number"==typeof n){if(i[t]!==n)return i[t]=n,!0}else{let o=Array.isArray(i[t])?i[t]:[i[t]],l=Array.isArray(n)?n:[n];for(let h=0;h<o.length;h++){let u=o[h];if(!1===u.equals(l[h]))return u.copy(l[h]),!0}}return!1}function h(e){let t={boundary:0,storage:0};return"number"==typeof e?(t.boundary=4,t.storage=4):e.isVector2?(t.boundary=8,t.storage=8):e.isVector3||e.isColor?(t.boundary=16,t.storage=12):e.isVector4?(t.boundary=16,t.storage=16):e.isMatrix3?(t.boundary=48,t.storage=48):e.isMatrix4?(t.boundary=64,t.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),t}function u(t){let i=t.target;i.removeEventListener("dispose",u);let n=a.indexOf(i.__bindingPointIndex);a.splice(n,1),e.deleteBuffer(r[i.id]),delete r[i.id],delete s[i.id]}return{bind:function e(t,i){let r=i.program;n.uniformBlockBinding(t,r)},update:function i(c,d){let p=r[c.id];void 0===p&&(function e(t){let i=t.uniforms,n=0,r=0;for(let s=0,a=i.length;s<a;s++){let o=i[s],l={boundary:0,storage:0},u=Array.isArray(o.value)?o.value:[o.value];for(let c=0,d=u.length;c<d;c++){let p=u[c],f=h(p);l.boundary+=f.boundary,l.storage+=f.storage}if(o.__data=new Float32Array(l.storage/Float32Array.BYTES_PER_ELEMENT),o.__offset=n,s>0){r=n%16;let m=16-r;0!==r&&m-l.boundary<0&&(n+=16-r,o.__offset=n)}n+=l.storage}return(r=n%16)>0&&(n+=16-r),t.__size=n,t.__cache={},this}(c),p=function t(i){let n=function e(){for(let t=0;t<o;t++)if(-1===a.indexOf(t))return a.push(t),t;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();i.__bindingPointIndex=n;let r=e.createBuffer(),s=i.__size,l=i.usage;return e.bindBuffer(e.UNIFORM_BUFFER,r),e.bufferData(e.UNIFORM_BUFFER,s,l),e.bindBuffer(e.UNIFORM_BUFFER,null),e.bindBufferBase(e.UNIFORM_BUFFER,n,r),r}(c),r[c.id]=p,c.addEventListener("dispose",u));let f=d.program;n.updateUBOMapping(c,f);let m=t.render.frame;s[c.id]!==m&&(function t(i){let n=r[i.id],s=i.uniforms,a=i.__cache;e.bindBuffer(e.UNIFORM_BUFFER,n);for(let o=0,u=s.length;o<u;o++){let c=s[o];if(!0===l(c,o,a)){let d=c.__offset,p=Array.isArray(c.value)?c.value:[c.value],f=0;for(let m=0;m<p.length;m++){let $=p[m],g=h($);"number"==typeof $?(c.__data[0]=$,e.bufferSubData(e.UNIFORM_BUFFER,d+f,c.__data)):$.isMatrix3?(c.__data[0]=$.elements[0],c.__data[1]=$.elements[1],c.__data[2]=$.elements[2],c.__data[3]=$.elements[0],c.__data[4]=$.elements[3],c.__data[5]=$.elements[4],c.__data[6]=$.elements[5],c.__data[7]=$.elements[0],c.__data[8]=$.elements[6],c.__data[9]=$.elements[7],c.__data[10]=$.elements[8],c.__data[11]=$.elements[0]):($.toArray(c.__data,f),f+=g.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(e.UNIFORM_BUFFER,d,c.__data)}}e.bindBuffer(e.UNIFORM_BUFFER,null)}(c),s[c.id]=m)},dispose:function t(){for(let i in r)e.deleteBuffer(r[i]);a=[],r={},s={}}}}class rl{constructor(e={}){let{canvas:n=function e(){let t=w("canvas");return t.style.display="block",t}(),context:r=null,depth:a=!0,stencil:o=!0,alpha:l=!1,antialias:u=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:d=!1,powerPreference:p="default",failIfMajorPerformanceCaveat:f=!1}=e;this.isWebGLRenderer=!0;let m;m=null!==r?r.getContextAttributes().alpha:l;let $=new Uint32Array(4),g=new Int32Array(4),x=null,y=null,_=[],b=[];this.domElement=n,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=t,this.useLegacyLights=!0,this.toneMapping=0,this.toneMappingExposure=1;let M=this,E=!1,T=0,A=0,R=null,C=-1,L=null,P=new V,I=new V,U=null,D=new ts(0),N=0,F=n.width,O=n.height,B=1,z=null,G=null,H=new V(0,0,F,O),k=new V(0,0,F,O),X=!1,j=new tK,q=!1,Z=!1,J=null,K=new eM,Q=new S,ee=new Y,et={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ei(){return null===R?B:1}let en=r;function er(e,t){for(let i=0;i<e.length;i++){let r=e[i],s=n.getContext(r,t);if(null!==s)return s}return null}try{if("setAttribute"in n&&n.setAttribute("data-engine","three.js r153"),n.addEventListener("webglcontextlost",eP,!1),n.addEventListener("webglcontextrestored",e1,!1),n.addEventListener("webglcontextcreationerror",eI,!1),null===en){let es=["webgl2","webgl","experimental-webgl"];if(!0===M.isWebGL1Renderer&&es.shift(),en=er(es,{alpha:!0,depth:a,stencil:o,antialias:u,premultipliedAlpha:c,preserveDrawingBuffer:d,powerPreference:p,failIfMajorPerformanceCaveat:f}),null===en){if(er(es))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}en instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),void 0===en.getShaderPrecisionFormat&&(en.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(ea){throw console.error("THREE.WebGLRenderer: "+ea.message),ea}let eo,el,eh,eu,ec,ed,ep,ef,em,e$,eg,ev,e8,ex,ey,eS,e_,eb,eE,eT,ew,eA,eR,eC;function eL(){eo=new iw(en),el=new ih(en,eo,e),eo.init(el),eA=new re(en,eo,el),eh=new n9(en,eo,el),eu=new iC(en),ec=new nV,ed=new nQ(en,eo,eh,ec,el,eA,eu),ep=new ic(M),ef=new iT(M),em=new tQ(en,el),eR=new io(en,eo,em,el),e$=new iA(en,em,eu,eR),eg=new i1(en,e$,em,eu),eE=new iP(en,el,ed),eS=new iu(ec),ev=new nk(M,ep,ef,eo,el,eR,eS),e8=new ra(M,ec),ex=new n4,ey=new nY(eo,el),eb=new ia(M,ep,ef,eh,eg,m,c),e_=new nK(M,eg,el),eC=new ro(en,eu,el,eh),eT=new il(en,eo,eu,el),ew=new iR(en,eo,eu,el),eu.programs=ev.programs,M.capabilities=el,M.extensions=eo,M.properties=ec,M.renderLists=ex,M.shadowMap=e_,M.state=eh,M.info=eu}eL();let e0=new class e extends s{constructor(e,t){super();let i=this,n=null,r=1,s=null,a="local-floor",o=1,l=null,u=null,c=null,d=null,p=null,f=null,m=t.getContextAttributes(),$=null,g=null,v=[],x=[],y=null,S=new t6;S.layers.enable(1),S.viewport=new V;let _=new t6;_.layers.enable(2),_.viewport=new V;let b=[S,_],M=new rt;M.layers.enable(1),M.layers.enable(2);let E=null,T=null;function w(e){let t=x.indexOf(e.inputSource);if(-1===t)return;let i=v[t];void 0!==i&&(i.update(e.inputSource,e.frame,l||s),i.dispatchEvent({type:e.type,data:e.inputSource}))}function A(){n.removeEventListener("select",w),n.removeEventListener("selectstart",w),n.removeEventListener("selectend",w),n.removeEventListener("squeeze",w),n.removeEventListener("squeezestart",w),n.removeEventListener("squeezeend",w),n.removeEventListener("end",A),n.removeEventListener("inputsourceschange",R);for(let t=0;t<v.length;t++){let r=x[t];null!==r&&(x[t]=null,v[t].disconnect(r))}E=null,T=null,e.setRenderTarget($),p=null,d=null,c=null,n=null,g=null,U.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function R(e){for(let t=0;t<e.removed.length;t++){let i=e.removed[t],n=x.indexOf(i);n>=0&&(x[n]=null,v[n].disconnect(i))}for(let r=0;r<e.added.length;r++){let s=e.added[r],a=x.indexOf(s);if(-1===a){for(let o=0;o<v.length;o++){if(o>=x.length){x.push(s),a=o;break}if(null===x[o]){x[o]=s,a=o;break}}if(-1===a)break}let l=v[a];l&&l.connect(s)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getCamera=function(){},this.setUserCamera=function(e){y=e},this.getController=function(e){let t=v[e];return void 0===t&&(t=new rr,v[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=v[e];return void 0===t&&(t=new rr,v[e]=t),t.getGripSpace()},this.getHand=function(e){let t=v[e];return void 0===t&&(t=new rr,v[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){r=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){a=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||s},this.setReferenceSpace=function(e){l=e},this.getBaseLayer=function(){return null!==d?d:p},this.getBinding=function(){return c},this.getFrame=function(){return f},this.getSession=function(){return n},this.setSession=async function(h){if(null!==(n=h)){if($=e.getRenderTarget(),n.addEventListener("select",w),n.addEventListener("selectstart",w),n.addEventListener("selectend",w),n.addEventListener("squeeze",w),n.addEventListener("squeezestart",w),n.addEventListener("squeezeend",w),n.addEventListener("end",A),n.addEventListener("inputsourceschange",R),!0!==m.xrCompatible&&await t.makeXRCompatible(),void 0===n.renderState.layers||!1===e.capabilities.isWebGL2){let u={antialias:void 0!==n.renderState.layers||m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:r};p=new XRWebGLLayer(n,t,u),n.updateRenderState({baseLayer:p}),g=new W(p.framebufferWidth,p.framebufferHeight,{format:1023,type:1009,colorSpace:e.outputColorSpace,stencilBuffer:m.stencil})}else{let f=null,v=null,x=null;m.depth&&(x=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,f=m.stencil?1027:1026,v=m.stencil?1020:1014);let y={colorFormat:t.RGBA8,depthFormat:x,scaleFactor:r};d=(c=new XRWebGLBinding(n,t)).createProjectionLayer(y),n.updateRenderState({layers:[d]}),g=new W(d.textureWidth,d.textureHeight,{format:1023,type:1009,depthTexture:new rs(d.textureWidth,d.textureHeight,v,void 0,void 0,void 0,void 0,void 0,void 0,f),stencilBuffer:m.stencil,colorSpace:e.outputColorSpace,samples:m.antialias?4:0});let S=e.properties.get(g);S.__ignoreDepthValues=d.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(o),l=null,s=await n.requestReferenceSpace(a),U.setContext(n),U.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==n)return n.environmentBlendMode};let C=new Y,L=new Y;function P(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCameraXR=function(e){if(null===n)return e;y&&(e=y),M.near=_.near=S.near=e.near,M.far=_.far=S.far=e.far,(E!==M.near||T!==M.far)&&(n.updateRenderState({depthNear:M.near,depthFar:M.far}),E=M.near,T=M.far);let t=e.parent,i=M.cameras;P(M,t);for(let r=0;r<i.length;r++)P(i[r],t);return 2===i.length?function e(t,i,n){C.setFromMatrixPosition(i.matrixWorld),L.setFromMatrixPosition(n.matrixWorld);let r=C.distanceTo(L),s=i.projectionMatrix.elements,a=n.projectionMatrix.elements,o=s[14]/(s[10]-1),l=s[14]/(s[10]+1),h=(s[9]+1)/s[5],u=(s[9]-1)/s[5],c=(s[8]-1)/s[0],d=(a[8]+1)/a[0],p=r/(-c+d),f=-(p*c);i.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(f),t.translateZ(p),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();let m=o+p,$=l+p;t.projectionMatrix.makePerspective(o*c-f,o*d+(r-f),h*l/$*m,u*l/$*m,m,$),t.projectionMatrixInverse.copy(t.projectionMatrix).invert()}(M,S,_):M.projectionMatrix.copy(S.projectionMatrix),y&&function e(t,i){let n=y;null===i?n.matrix.copy(t.matrixWorld):(n.matrix.copy(i.matrixWorld),n.matrix.invert(),n.matrix.multiply(t.matrixWorld)),n.matrix.decompose(n.position,n.quaternion,n.scale),n.updateMatrixWorld(!0);let r=n.children;for(let s=0,a=r.length;s<a;s++)r[s].updateMatrixWorld(!0);n.projectionMatrix.copy(t.projectionMatrix),n.projectionMatrixInverse.copy(t.projectionMatrixInverse),n.isPerspectiveCamera&&(n.fov=2*h*Math.atan(1/n.projectionMatrix.elements[5]),n.zoom=1)}(M,t),M},this.getFoveation=function(){if(null!==d||null!==p)return o},this.setFoveation=function(e){o=e,null!==d&&(d.fixedFoveation=e),null!==p&&void 0!==p.fixedFoveation&&(p.fixedFoveation=e)};let I=null,U=new t9;U.setAnimationLoop(function t(n,r){if(u=r.getViewerPose(l||s),f=r,null!==u){let a=u.views;null!==p&&(e.setRenderTargetFramebuffer(g,p.framebuffer),e.setRenderTarget(g));let o=!1;a.length!==M.cameras.length&&(M.cameras.length=0,o=!0);for(let h=0;h<a.length;h++){let m=a[h],$=null;if(null!==p)$=p.getViewport(m);else{let y=c.getViewSubImage(d,m);$=y.viewport,0===h&&(e.setRenderTargetTextures(g,y.colorTexture,d.ignoreDepthValues?void 0:y.depthStencilTexture),e.setRenderTarget(g))}let S=b[h];void 0===S&&((S=new t6).layers.enable(h),S.viewport=new V,b[h]=S),S.matrix.fromArray(m.transform.matrix),S.matrix.decompose(S.position,S.quaternion,S.scale),S.projectionMatrix.fromArray(m.projectionMatrix),S.projectionMatrixInverse.copy(S.projectionMatrix).invert(),S.viewport.set($.x,$.y,$.width,$.height),0===h&&(M.matrix.copy(S.matrix),M.matrix.decompose(M.position,M.quaternion,M.scale)),!0===o&&M.cameras.push(S)}}for(let _=0;_<v.length;_++){let E=x[_],T=v[_];null!==E&&void 0!==T&&T.update(E,r,l||s)}I&&I(n,r),r.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:r}),f=null}),this.setAnimationLoop=function(e){I=e},this.dispose=function(){}}}(M,en);function eP(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),E=!0}function e1(){console.log("THREE.WebGLRenderer: Context Restored."),E=!1;let e=eu.autoReset,t=e_.enabled,i=e_.autoUpdate,n=e_.needsUpdate,r=e_.type;eL(),eu.autoReset=e,e_.enabled=t,e_.autoUpdate=i,e_.needsUpdate=n,e_.type=r}function eI(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function eU(e){var t;let i=e.target;i.removeEventListener("dispose",eU),function e(t){let i=ec.get(t).programs;void 0!==i&&(i.forEach(function(e){ev.releaseProgram(e)}),t.isShaderMaterial&&ev.releaseShaderCache(t))}(t=i),ec.remove(t)}this.xr=e0,this.getContext=function(){return en},this.getContextAttributes=function(){return en.getContextAttributes()},this.forceContextLoss=function(){let e=eo.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){let e=eo.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return B},this.setPixelRatio=function(e){void 0!==e&&(B=e,this.setSize(F,O,!1))},this.getSize=function(e){return e.set(F,O)},this.setSize=function(e,t,i=!0){if(e0.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}F=e,O=t,n.width=Math.floor(e*B),n.height=Math.floor(t*B),!0===i&&(n.style.width=e+"px",n.style.height=t+"px"),this.setViewport(0,0,e,t)},this.getDrawingBufferSize=function(e){return e.set(F*B,O*B).floor()},this.setDrawingBufferSize=function(e,t,i){F=e,O=t,B=i,n.width=Math.floor(e*i),n.height=Math.floor(t*i),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e.copy(P)},this.getViewport=function(e){return e.copy(H)},this.setViewport=function(e,t,i,n){e.isVector4?H.set(e.x,e.y,e.z,e.w):H.set(e,t,i,n),eh.viewport(P.copy(H).multiplyScalar(B).floor())},this.getScissor=function(e){return e.copy(k)},this.setScissor=function(e,t,i,n){e.isVector4?k.set(e.x,e.y,e.z,e.w):k.set(e,t,i,n),eh.scissor(I.copy(k).multiplyScalar(B).floor())},this.getScissorTest=function(){return X},this.setScissorTest=function(e){eh.setScissorTest(X=e)},this.setOpaqueSort=function(e){z=e},this.setTransparentSort=function(e){G=e},this.getClearColor=function(e){return e.copy(eb.getClearColor())},this.setClearColor=function(){eb.setClearColor.apply(eb,arguments)},this.getClearAlpha=function(){return eb.getClearAlpha()},this.setClearAlpha=function(){eb.setClearAlpha.apply(eb,arguments)},this.clear=function(e=!0,t=!0,i=!0){let n=0;if(e){let r=!1;if(null!==R){let s=R.texture.format;r=1033===s||1031===s||1029===s}if(r){let a=R.texture.type,o=eb.getClearColor(),l=eb.getClearAlpha(),h=o.r,u=o.g,c=o.b,d=ec.get(R).__webglFramebuffer;1009===a||1014===a||1012===a||1020===a||1017===a||1018===a?($[0]=h,$[1]=u,$[2]=c,$[3]=l,en.clearBufferuiv(en.COLOR,d,$)):(g[0]=h,g[1]=u,g[2]=c,g[3]=l,en.clearBufferiv(en.COLOR,d,g))}else n|=en.COLOR_BUFFER_BIT}t&&(n|=en.DEPTH_BUFFER_BIT),i&&(n|=en.STENCIL_BUFFER_BIT),en.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){n.removeEventListener("webglcontextlost",eP,!1),n.removeEventListener("webglcontextrestored",e1,!1),n.removeEventListener("webglcontextcreationerror",eI,!1),ex.dispose(),ey.dispose(),ec.dispose(),ep.dispose(),ef.dispose(),eg.dispose(),eR.dispose(),eC.dispose(),ev.dispose(),e0.dispose(),e0.removeEventListener("sessionstart",eN),e0.removeEventListener("sessionend",eF),J&&(J.dispose(),J=null),eO.stop()},this.renderBufferDirect=function(e,t,n,r,s,a){null===t&&(t=et);let o=s.isMesh&&0>s.matrixWorld.determinant(),l=function e(t,n,r,s,a){var o,l;!0!==n.isScene&&(n=et),ed.resetTextureUnits();let h=n.fog,u=s.isMeshStandardMaterial?n.environment:null,c=null===R?M.outputColorSpace:!0===R.isXRRenderTarget?R.texture.colorSpace:i,d=(s.isMeshStandardMaterial?ef:ep).get(s.envMap||u),p=!0===s.vertexColors&&!!r.attributes.color&&4===r.attributes.color.itemSize,f=!!r.attributes.tangent&&(!!s.normalMap||s.anisotropy>0),m=!!r.morphAttributes.position,$=!!r.morphAttributes.normal,g=!!r.morphAttributes.color,v=s.toneMapped?M.toneMapping:0,x=r.morphAttributes.position||r.morphAttributes.normal||r.morphAttributes.color,S=void 0!==x?x.length:0,_=ec.get(s),b=y.state.lights;if(!0===q&&(!0===Z||t!==L)){let E=t===L&&s.id===C;eS.setState(s,t,E)}let T=!1;s.version===_.__version?_.needsLights&&_.lightsStateVersion!==b.state.version?T=!0:_.outputColorSpace!==c?T=!0:a.isInstancedMesh&&!1===_.instancing?T=!0:a.isInstancedMesh||!0!==_.instancing?a.isSkinnedMesh&&!1===_.skinning?T=!0:a.isSkinnedMesh||!0!==_.skinning?_.envMap!==d?T=!0:!0===s.fog&&_.fog!==h?T=!0:void 0!==_.numClippingPlanes&&(_.numClippingPlanes!==eS.numPlanes||_.numIntersection!==eS.numIntersection)?T=!0:_.vertexAlphas!==p?T=!0:_.vertexTangents!==f?T=!0:_.morphTargets!==m?T=!0:_.morphNormals!==$?T=!0:_.morphColors!==g?T=!0:_.toneMapping!==v?T=!0:!0===el.isWebGL2&&_.morphTargetsCount!==S&&(T=!0):T=!0:T=!0:(T=!0,_.__version=s.version);let w=_.currentProgram;!0===T&&(w=eH(s,n,a));let A=!1,P=!1,I=!1,U=w.getUniforms(),D=_.uniforms;if(eh.useProgram(w.program)&&(A=!0,P=!0,I=!0),s.id!==C&&(C=s.id,P=!0),A||L!==t){if(U.setValue(en,"projectionMatrix",t.projectionMatrix),el.logarithmicDepthBuffer&&U.setValue(en,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),L!==t&&(L=t,P=!0,I=!0),s.isShaderMaterial||s.isMeshPhongMaterial||s.isMeshToonMaterial||s.isMeshStandardMaterial||s.envMap){let N=U.map.cameraPosition;void 0!==N&&N.setValue(en,ee.setFromMatrixPosition(t.matrixWorld))}(s.isMeshPhongMaterial||s.isMeshToonMaterial||s.isMeshLambertMaterial||s.isMeshBasicMaterial||s.isMeshStandardMaterial||s.isShaderMaterial)&&U.setValue(en,"isOrthographic",!0===t.isOrthographicCamera),(s.isMeshPhongMaterial||s.isMeshToonMaterial||s.isMeshLambertMaterial||s.isMeshBasicMaterial||s.isMeshStandardMaterial||s.isShaderMaterial||s.isShadowMaterial||a.isSkinnedMesh)&&U.setValue(en,"viewMatrix",t.matrixWorldInverse)}if(a.isSkinnedMesh){U.setOptional(en,a,"bindMatrix"),U.setOptional(en,a,"bindMatrixInverse");let F=a.skeleton;F&&(el.floatVertexTextures?(null===F.boneTexture&&F.computeBoneTexture(),U.setValue(en,"boneTexture",F.boneTexture,ed),U.setValue(en,"boneTextureSize",F.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}let z=r.morphAttributes;if((void 0!==z.position||void 0!==z.normal||void 0!==z.color&&!0===el.isWebGL2)&&eE.update(a,r,w),(P||_.receiveShadow!==a.receiveShadow)&&(_.receiveShadow=a.receiveShadow,U.setValue(en,"receiveShadow",a.receiveShadow)),s.isMeshGouraudMaterial&&null!==s.envMap&&(D.envMap.value=d,D.flipEnvMap.value=d.isCubeTexture&&!1===d.isRenderTargetTexture?-1:1),P&&(U.setValue(en,"toneMappingExposure",M.toneMappingExposure),_.needsLights&&(o=D,l=I,o.ambientLightColor.needsUpdate=l,o.lightProbe.needsUpdate=l,o.directionalLights.needsUpdate=l,o.directionalLightShadows.needsUpdate=l,o.pointLights.needsUpdate=l,o.pointLightShadows.needsUpdate=l,o.spotLights.needsUpdate=l,o.spotLightShadows.needsUpdate=l,o.rectAreaLights.needsUpdate=l,o.hemisphereLights.needsUpdate=l),h&&!0===s.fog&&e8.refreshFogUniforms(D,h),e8.refreshMaterialUniforms(D,s,B,O,J),nA.upload(en,_.uniformsList,D,ed)),s.isShaderMaterial&&!0===s.uniformsNeedUpdate&&(nA.upload(en,_.uniformsList,D,ed),s.uniformsNeedUpdate=!1),s.isSpriteMaterial&&U.setValue(en,"center",a.center),U.setValue(en,"modelViewMatrix",a.modelViewMatrix),U.setValue(en,"normalMatrix",a.normalMatrix),U.setValue(en,"modelMatrix",a.matrixWorld),s.isShaderMaterial||s.isRawShaderMaterial){let G=s.uniformsGroups;for(let H=0,k=G.length;H<k;H++)if(el.isWebGL2){let V=G[H];eC.update(V,w),eC.bind(V,w)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return w}(e,t,n,r,s);eh.setMaterial(r,o);let h=n.index,u=1;!0===r.wireframe&&(h=e$.getWireframeAttribute(n),u=2);let c=n.drawRange,d=n.attributes.position,p=c.start*u,f=(c.start+c.count)*u;null!==a&&(p=Math.max(p,a.start*u),f=Math.min(f,(a.start+a.count)*u)),null!==h?(p=Math.max(p,0),f=Math.min(f,h.count)):null!=d&&(p=Math.max(p,0),f=Math.min(f,d.count));let m=f-p;if(m<0||m===1/0)return;eR.setup(s,r,l,n,h);let $,g=eT;if(null!==h&&($=em.get(h),(g=ew).setIndex($)),s.isMesh)!0===r.wireframe?(eh.setLineWidth(r.wireframeLinewidth*ei()),g.setMode(en.LINES)):g.setMode(en.TRIANGLES);else if(s.isLine){let v=r.linewidth;void 0===v&&(v=1),eh.setLineWidth(v*ei()),s.isLineSegments?g.setMode(en.LINES):s.isLineLoop?g.setMode(en.LINE_LOOP):g.setMode(en.LINE_STRIP)}else s.isPoints?g.setMode(en.POINTS):s.isSprite&&g.setMode(en.TRIANGLES);if(s.isInstancedMesh)g.renderInstances(p,m,s.count);else if(n.isInstancedBufferGeometry){let x=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,S=Math.min(n.instanceCount,x);g.renderInstances(p,m,S)}else g.render(p,m)},this.compile=function(e,t){function i(e,t,i){!0===e.transparent&&2===e.side&&!1===e.forceSinglePass?(e.side=1,e.needsUpdate=!0,eH(e,t,i),e.side=0,e.needsUpdate=!0,eH(e,t,i),e.side=2):eH(e,t,i)}(y=ey.get(e)).init(),b.push(y),e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(y.pushLight(e),e.castShadow&&y.pushShadow(e))}),y.setupLights(M.useLegacyLights),e.traverse(function(t){let n=t.material;if(n){if(Array.isArray(n))for(let r=0;r<n.length;r++){let s=n[r];i(s,e,t)}else i(n,e,t)}}),b.pop(),y=null};let eD=null;function eN(){eO.stop()}function eF(){eO.start()}let eO=new t9;function eB(e,t,i,n){let r=e.opaque,s=e.transmissive,a=e.transparent;y.setupLightsView(i),!0===q&&eS.setGlobalState(M.clippingPlanes,i),s.length>0&&function e(t,i,n,r){let s=el.isWebGL2;null===J&&(J=new W(1,1,{generateMipmaps:!0,type:eo.has("EXT_color_buffer_half_float")?1016:1009,minFilter:1008,samples:s&&!0===u?4:0})),M.getDrawingBufferSize(Q),s?J.setSize(Q.x,Q.y):J.setSize(v(Q.x),v(Q.y));let a=M.getRenderTarget();M.setRenderTarget(J),M.getClearColor(D),(N=M.getClearAlpha())<1&&M.setClearColor(16777215,.5),M.clear();let o=M.toneMapping;M.toneMapping=0,ez(t,n,r),ed.updateMultisampleRenderTarget(J),ed.updateRenderTargetMipmap(J);let l=!1;for(let h=0,c=i.length;h<c;h++){let d=i[h],p=d.object,f=d.geometry,m=d.material,$=d.group;if(2===m.side&&p.layers.test(r.layers)){let g=m.side;m.side=1,m.needsUpdate=!0,eG(p,n,r,f,m,$),m.side=g,m.needsUpdate=!0,l=!0}}!0===l&&(ed.updateMultisampleRenderTarget(J),ed.updateRenderTargetMipmap(J)),M.setRenderTarget(a),M.setClearColor(D,N),M.toneMapping=o}(r,s,t,i),n&&eh.viewport(P.copy(n)),r.length>0&&ez(r,t,i),s.length>0&&ez(s,t,i),a.length>0&&ez(a,t,i),eh.buffers.depth.setTest(!0),eh.buffers.depth.setMask(!0),eh.buffers.color.setMask(!0),eh.setPolygonOffset(!1)}function ez(e,t,i){let n=!0===t.isScene?t.overrideMaterial:null;for(let r=0,s=e.length;r<s;r++){let a=e[r],o=a.object,l=a.geometry,h=null===n?a.material:n,u=a.group;o.layers.test(i.layers)&&eG(o,t,i,l,h,u)}}function eG(e,t,i,n,r,s){e.onBeforeRender(M,t,i,n,r,s),e.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),r.onBeforeRender(M,t,i,n,e,s),!0===r.transparent&&2===r.side&&!1===r.forceSinglePass?(r.side=1,r.needsUpdate=!0,M.renderBufferDirect(i,t,n,r,e,s),r.side=0,r.needsUpdate=!0,M.renderBufferDirect(i,t,n,r,e,s),r.side=2):M.renderBufferDirect(i,t,n,r,e,s),e.onAfterRender(M,t,i,n,r,s)}function eH(e,t,i){var n;!0!==t.isScene&&(t=et);let r=ec.get(e),s=y.state.lights,a=y.state.shadowsArray,o=s.state.version,l=ev.getParameters(e,s.state,a,t,i),h=ev.getProgramCacheKey(l),u=r.programs;r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=(e.isMeshStandardMaterial?ef:ep).get(e.envMap||r.environment),void 0===u&&(e.addEventListener("dispose",eU),u=new Map,r.programs=u);let c=u.get(h);if(void 0!==c){if(r.currentProgram===c&&r.lightsStateVersion===o)return e2(e,l),c}else l.uniforms=ev.getUniforms(e),e.onBuild(i,l,M),e.onBeforeCompile(l,M),c=ev.acquireProgram(l,h),u.set(h,c),r.uniforms=l.uniforms;let d=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(d.clippingPlanes=eS.uniform),e2(e,l),r.needsLights=(n=e,n.isMeshLambertMaterial||n.isMeshToonMaterial||n.isMeshPhongMaterial||n.isMeshStandardMaterial||n.isShadowMaterial||n.isShaderMaterial&&!0===n.lights),r.lightsStateVersion=o,r.needsLights&&(d.ambientLightColor.value=s.state.ambient,d.lightProbe.value=s.state.probe,d.directionalLights.value=s.state.directional,d.directionalLightShadows.value=s.state.directionalShadow,d.spotLights.value=s.state.spot,d.spotLightShadows.value=s.state.spotShadow,d.rectAreaLights.value=s.state.rectArea,d.ltc_1.value=s.state.rectAreaLTC1,d.ltc_2.value=s.state.rectAreaLTC2,d.pointLights.value=s.state.point,d.pointLightShadows.value=s.state.pointShadow,d.hemisphereLights.value=s.state.hemi,d.directionalShadowMap.value=s.state.directionalShadowMap,d.directionalShadowMatrix.value=s.state.directionalShadowMatrix,d.spotShadowMap.value=s.state.spotShadowMap,d.spotLightMatrix.value=s.state.spotLightMatrix,d.spotLightMap.value=s.state.spotLightMap,d.pointShadowMap.value=s.state.pointShadowMap,d.pointShadowMatrix.value=s.state.pointShadowMatrix);let p=c.getUniforms(),f=nA.seqWithValue(p.seq,d);return r.currentProgram=c,r.uniformsList=f,c}function e2(e,t){let i=ec.get(e);i.outputColorSpace=t.outputColorSpace,i.instancing=t.instancing,i.skinning=t.skinning,i.morphTargets=t.morphTargets,i.morphNormals=t.morphNormals,i.morphColors=t.morphColors,i.morphTargetsCount=t.morphTargetsCount,i.numClippingPlanes=t.numClippingPlanes,i.numIntersection=t.numClipIntersection,i.vertexAlphas=t.vertexAlphas,i.vertexTangents=t.vertexTangents,i.toneMapping=t.toneMapping}eO.setAnimationLoop(function e(t){eD&&eD(t)}),"undefined"!=typeof self&&eO.setContext(self),this.setAnimationLoop=function(e){eD=e,e0.setAnimationLoop(e),null===e?eO.stop():eO.start()},e0.addEventListener("sessionstart",eN),e0.addEventListener("sessionend",eF),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===E)return;!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===e0.enabled&&!0===e0.isPresenting&&(t=e0.updateCameraXR(t)),!0===e.isScene&&e.onBeforeRender(M,e,t,R),(y=ey.get(e,b.length)).init(),b.push(y),K.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),j.setFromProjectionMatrix(K),Z=this.localClippingEnabled,q=eS.init(this.clippingPlanes,Z),(x=ex.get(e,_.length)).init(),_.push(x),function e(t,i,n,r){if(!1===t.visible)return;let s=t.layers.test(i.layers);if(s){if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(i);else if(t.isLight)y.pushLight(t),t.castShadow&&y.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||j.intersectsSprite(t)){r&&ee.setFromMatrixPosition(t.matrixWorld).applyMatrix4(K);let a=eg.update(t),o=t.material;o.visible&&x.push(t,a,o,n,ee.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(!t.frustumCulled||j.intersectsObject(t))){t.isSkinnedMesh&&t.skeleton.frame!==eu.render.frame&&(t.skeleton.update(),t.skeleton.frame=eu.render.frame);let l=eg.update(t),h=t.material;if(r&&(void 0!==t.boundingSphere?(null===t.boundingSphere&&t.computeBoundingSphere(),ee.copy(t.boundingSphere.center)):(null===l.boundingSphere&&l.computeBoundingSphere(),ee.copy(l.boundingSphere.center)),ee.applyMatrix4(t.matrixWorld).applyMatrix4(K)),Array.isArray(h)){let u=l.groups;for(let c=0,d=u.length;c<d;c++){let p=u[c],f=h[p.materialIndex];f&&f.visible&&x.push(t,l,f,n,ee.z,p)}}else h.visible&&x.push(t,l,h,n,ee.z,null)}}let m=t.children;for(let $=0,g=m.length;$<g;$++)e(m[$],i,n,r)}(e,t,0,M.sortObjects),x.finish(),!0===M.sortObjects&&x.sort(z,G),!0===q&&eS.beginShadows();let i=y.state.shadowsArray;if(e_.render(i,e,t),!0===q&&eS.endShadows(),!0===this.info.autoReset&&this.info.reset(),this.info.render.frame++,eb.render(x,e),y.setupLights(M.useLegacyLights),t.isArrayCamera){let n=t.cameras;for(let r=0,s=n.length;r<s;r++){let a=n[r];eB(x,e,a,a.viewport)}}else eB(x,e,t);null!==R&&(ed.updateMultisampleRenderTarget(R),ed.updateRenderTargetMipmap(R)),!0===e.isScene&&e.onAfterRender(M,e,t),eR.resetDefaultState(),C=-1,L=null,b.pop(),y=b.length>0?b[b.length-1]:null,_.pop(),x=_.length>0?_[_.length-1]:null},this.getActiveCubeFace=function(){return T},this.getActiveMipmapLevel=function(){return A},this.getRenderTarget=function(){return R},this.setRenderTargetTextures=function(e,t,i){ec.get(e.texture).__webglTexture=t,ec.get(e.depthTexture).__webglTexture=i;let n=ec.get(e);n.__hasExternalTextures=!0,n.__hasExternalTextures&&(n.__autoAllocateDepthBuffer=void 0===i,n.__autoAllocateDepthBuffer||!0!==eo.has("WEBGL_multisampled_render_to_texture")||(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),n.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){let i=ec.get(e);i.__webglFramebuffer=t,i.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,i=0){R=e,T=t,A=i;let n=!0,r=null,s=!1,a=!1;if(e){let o=ec.get(e);void 0!==o.__useDefaultFramebuffer?(eh.bindFramebuffer(en.FRAMEBUFFER,null),n=!1):void 0===o.__webglFramebuffer?ed.setupRenderTarget(e):o.__hasExternalTextures&&ed.rebindTextures(e,ec.get(e.texture).__webglTexture,ec.get(e.depthTexture).__webglTexture);let l=e.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(a=!0);let h=ec.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(r=h[t],s=!0):r=el.isWebGL2&&e.samples>0&&!1===ed.useMultisampledRTT(e)?ec.get(e).__webglMultisampledFramebuffer:h,P.copy(e.viewport),I.copy(e.scissor),U=e.scissorTest}else P.copy(H).multiplyScalar(B).floor(),I.copy(k).multiplyScalar(B).floor(),U=X;let u=eh.bindFramebuffer(en.FRAMEBUFFER,r);if(u&&el.drawBuffers&&n&&eh.drawBuffers(e,r),eh.viewport(P),eh.scissor(I),eh.setScissorTest(U),s){let c=ec.get(e.texture);en.framebufferTexture2D(en.FRAMEBUFFER,en.COLOR_ATTACHMENT0,en.TEXTURE_CUBE_MAP_POSITIVE_X+t,c.__webglTexture,i)}else if(a){let d=ec.get(e.texture);en.framebufferTextureLayer(en.FRAMEBUFFER,en.COLOR_ATTACHMENT0,d.__webglTexture,i||0,t||0)}C=-1},this.readRenderTargetPixels=function(e,t,i,n,r,s,a){if(!(e&&e.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let o=ec.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==a&&(o=o[a]),o){eh.bindFramebuffer(en.FRAMEBUFFER,o);try{let l=e.texture,h=l.format,u=l.type;if(1023!==h&&eA.convert(h)!==en.getParameter(en.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let c=1016===u&&(eo.has("EXT_color_buffer_half_float")||el.isWebGL2&&eo.has("EXT_color_buffer_float"));if(1009!==u&&eA.convert(u)!==en.getParameter(en.IMPLEMENTATION_COLOR_READ_TYPE)&&!(1015===u&&(el.isWebGL2||eo.has("OES_texture_float")||eo.has("WEBGL_color_buffer_float")))&&!c){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}t>=0&&t<=e.width-n&&i>=0&&i<=e.height-r&&en.readPixels(t,i,n,r,eA.convert(h),eA.convert(u),s)}finally{let d=null!==R?ec.get(R).__webglFramebuffer:null;eh.bindFramebuffer(en.FRAMEBUFFER,d)}}},this.copyFramebufferToTexture=function(e,t,i=0){let n=Math.pow(2,-i),r=Math.floor(t.image.width*n),s=Math.floor(t.image.height*n);ed.setTexture2D(t,0),en.copyTexSubImage2D(en.TEXTURE_2D,i,0,0,e.x,e.y,r,s),eh.unbindTexture()},this.copyTextureToTexture=function(e,t,i,n=0){let r=t.image.width,s=t.image.height,a=eA.convert(i.format),o=eA.convert(i.type);ed.setTexture2D(i,0),en.pixelStorei(en.UNPACK_FLIP_Y_WEBGL,i.flipY),en.pixelStorei(en.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),en.pixelStorei(en.UNPACK_ALIGNMENT,i.unpackAlignment),t.isDataTexture?en.texSubImage2D(en.TEXTURE_2D,n,e.x,e.y,r,s,a,o,t.image.data):t.isCompressedTexture?en.compressedTexSubImage2D(en.TEXTURE_2D,n,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,a,t.mipmaps[0].data):en.texSubImage2D(en.TEXTURE_2D,n,e.x,e.y,a,o,t.image),0===n&&i.generateMipmaps&&en.generateMipmap(en.TEXTURE_2D),eh.unbindTexture()},this.copyTextureToTexture3D=function(e,t,i,n,r=0){if(M.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let s=e.max.x-e.min.x+1,a=e.max.y-e.min.y+1,o=e.max.z-e.min.z+1,l=eA.convert(n.format),h=eA.convert(n.type),u;if(n.isData3DTexture)ed.setTexture3D(n,0),u=en.TEXTURE_3D;else if(n.isDataArrayTexture)ed.setTexture2DArray(n,0),u=en.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}en.pixelStorei(en.UNPACK_FLIP_Y_WEBGL,n.flipY),en.pixelStorei(en.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),en.pixelStorei(en.UNPACK_ALIGNMENT,n.unpackAlignment);let c=en.getParameter(en.UNPACK_ROW_LENGTH),d=en.getParameter(en.UNPACK_IMAGE_HEIGHT),p=en.getParameter(en.UNPACK_SKIP_PIXELS),f=en.getParameter(en.UNPACK_SKIP_ROWS),m=en.getParameter(en.UNPACK_SKIP_IMAGES),$=i.isCompressedTexture?i.mipmaps[0]:i.image;en.pixelStorei(en.UNPACK_ROW_LENGTH,$.width),en.pixelStorei(en.UNPACK_IMAGE_HEIGHT,$.height),en.pixelStorei(en.UNPACK_SKIP_PIXELS,e.min.x),en.pixelStorei(en.UNPACK_SKIP_ROWS,e.min.y),en.pixelStorei(en.UNPACK_SKIP_IMAGES,e.min.z),i.isDataTexture||i.isData3DTexture?en.texSubImage3D(u,r,t.x,t.y,t.z,s,a,o,l,h,$.data):i.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),en.compressedTexSubImage3D(u,r,t.x,t.y,t.z,s,a,o,l,$.data)):en.texSubImage3D(u,r,t.x,t.y,t.z,s,a,o,l,h,$),en.pixelStorei(en.UNPACK_ROW_LENGTH,c),en.pixelStorei(en.UNPACK_IMAGE_HEIGHT,d),en.pixelStorei(en.UNPACK_SKIP_PIXELS,p),en.pixelStorei(en.UNPACK_SKIP_ROWS,f),en.pixelStorei(en.UNPACK_SKIP_IMAGES,m),0===r&&n.generateMipmaps&&en.generateMipmap(u),eh.unbindTexture()},this.initTexture=function(e){e.isCubeTexture?ed.setTextureCube(e,0):e.isData3DTexture?ed.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?ed.setTexture2DArray(e,0):ed.setTexture2D(e,0),eh.unbindTexture()},this.resetState=function(){T=0,A=0,R=null,eh.reset(),eR.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return 2e3}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===t?3001:3e3}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=3001===e?t:i}}class rh extends rl{}rh.prototype.isWebGL1Renderer=!0;class ru{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new ts(e),this.density=t}clone(){return new ru(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class rc{constructor(e,t=1,i=1e3){this.isFog=!0,this.name="",this.color=new ts(e),this.near=t,this.far=i}clone(){return new rc(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class rd extends eW{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){let t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(t.object.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class rp{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=u()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,r=this.stride;n<r;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=u()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=u()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}let rf=new Y;class rm{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)rf.fromBufferAttribute(this,t),rf.applyMatrix4(e),this.setXYZ(t,rf.x,rf.y,rf.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)rf.fromBufferAttribute(this,t),rf.applyNormalMatrix(e),this.setXYZ(t,rf.x,rf.y,rf.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)rf.fromBufferAttribute(this,t),rf.transformDirection(e),this.setXYZ(t,rf.x,rf.y,rf.z);return this}setX(e,t){return this.normalized&&(t=y(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=y(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=y(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=y(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=x(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=x(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=x(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=x(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=y(t,this.array),i=y(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=y(t,this.array),i=y(i,this.array),n=y(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=y(t,this.array),i=y(i,this.array),n=y(n,this.array),r=y(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=r,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new rm(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");let t=[];for(let i=0;i<this.count;i++){let n=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[n+r])}return new tp(new this.array.constructor(t),this.itemSize,this.normalized)}}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");let t=[];for(let i=0;i<this.count;i++){let n=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[n+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}}}class r$ extends te{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new ts(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let rg,rv=new Y,r8=new Y,rx=new Y,ry=new S,rS=new S,r_=new eM,rb=new Y,rM=new Y,rE=new Y,rT=new S,rw=new S,rA=new S;class rR extends eW{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",void 0===rg){rg=new tb;let t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new rp(t,5);rg.setIndex([0,1,2,0,2,3]),rg.setAttribute("position",new rm(i,3,0,!1)),rg.setAttribute("uv",new rm(i,2,3,!1))}this.geometry=rg,this.material=void 0!==e?e:new r$,this.center=new S(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),r8.setFromMatrixScale(this.matrixWorld),r_.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),rx.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&r8.multiplyScalar(-rx.z);let i=this.material.rotation,n,r;0!==i&&(r=Math.cos(i),n=Math.sin(i));let s=this.center;rC(rb.set(-.5,-.5,0),rx,s,r8,n,r),rC(rM.set(.5,-.5,0),rx,s,r8,n,r),rC(rE.set(.5,.5,0),rx,s,r8,n,r),rT.set(0,0),rw.set(1,0),rA.set(1,1);let a=e.ray.intersectTriangle(rb,rM,rE,!1,rv);if(null===a&&(rC(rM.set(-.5,.5,0),rx,s,r8,n,r),rw.set(0,1),null===(a=e.ray.intersectTriangle(rb,rE,rM,!1,rv))))return;let o=e.ray.origin.distanceTo(rv);o<e.near||o>e.far||t.push({distance:o,point:rv.clone(),uv:e9.getInterpolation(rv,rb,rM,rE,rT,rw,rA,new S),face:null,object:this})}copy(e,t){return super.copy(e,t),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function rC(e,t,i,n,r,s){ry.subVectors(e,i).addScalar(.5).multiply(n),void 0!==r?(rS.x=s*ry.x-r*ry.y,rS.y=r*ry.x+s*ry.y):rS.copy(ry),e.copy(t),e.x+=rS.x,e.y+=rS.y,e.applyMatrix4(r_)}let rL=new Y,r0=new Y;class rP extends eW{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);let t=e.levels;for(let i=0,n=t.length;i<n;i++){let r=t[i];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,i=0){t=Math.abs(t);let n=this.levels,r;for(r=0;r<n.length&&!(t<n[r].distance);r++);return n.splice(r,0,{distance:t,hysteresis:i,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){let t=this.levels;if(t.length>0){let i,n;for(i=1,n=t.length;i<n;i++){let r=t[i].distance;if(t[i].object.visible&&(r-=r*t[i].hysteresis),e<r)break}return t[i-1].object}return null}raycast(e,t){let i=this.levels;if(i.length>0){rL.setFromMatrixPosition(this.matrixWorld);let n=e.ray.origin.distanceTo(rL);this.getObjectForDistance(n).raycast(e,t)}}update(e){let t=this.levels;if(t.length>1){rL.setFromMatrixPosition(e.matrixWorld),r0.setFromMatrixPosition(this.matrixWorld);let i=rL.distanceTo(r0)/e.zoom;t[0].object.visible=!0;let n,r;for(n=1,r=t.length;n<r;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),i>=s)t[n-1].object.visible=!1,t[n].object.visible=!0;else break}for(this._currentLevel=n-1;n<r;n++)t[n].object.visible=!1}}toJSON(e){let t=super.toJSON(e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];let i=this.levels;for(let n=0,r=i.length;n<r;n++){let s=i[n];t.object.levels.push({object:s.object.uuid,distance:s.distance,hysteresis:s.hysteresis})}return t}}let r1=new Y,rI=new V,rU=new V,rD=new Y,rN=new eM,rF=new Y,rO=new e$,rB=new eM,rz=new eb;class rG extends tB{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new eM,this.bindMatrixInverse=new eM,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){let e=this.geometry;null===this.boundingBox&&(this.boundingBox=new K),this.boundingBox.makeEmpty();let t=e.getAttribute("position");for(let i=0;i<t.count;i++)rF.fromBufferAttribute(t,i),this.applyBoneTransform(i,rF),this.boundingBox.expandByPoint(rF)}computeBoundingSphere(){let e=this.geometry;null===this.boundingSphere&&(this.boundingSphere=new e$),this.boundingSphere.makeEmpty();let t=e.getAttribute("position");for(let i=0;i<t.count;i++)rF.fromBufferAttribute(t,i),this.applyBoneTransform(i,rF),this.boundingSphere.expandByPoint(rF)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){let i=this.material,n=this.matrixWorld;if(void 0!==i&&(null===this.boundingSphere&&this.computeBoundingSphere(),rO.copy(this.boundingSphere),rO.applyMatrix4(n),!1!==e.ray.intersectsSphere(rO))){if(rB.copy(n).invert(),rz.copy(e.ray).applyMatrix4(rB),null!==this.boundingBox&&!1===rz.intersectsBox(this.boundingBox))return;this._computeIntersections(e,t,rz)}}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){let e=new V,t=this.geometry.attributes.skinWeight;for(let i=0,n=t.count;i<n;i++){e.fromBufferAttribute(t,i);let r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){let i=this.skeleton,n=this.geometry;rI.fromBufferAttribute(n.attributes.skinIndex,e),rU.fromBufferAttribute(n.attributes.skinWeight,e),r1.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){let s=rU.getComponent(r);if(0!==s){let a=rI.getComponent(r);rN.multiplyMatrices(i.bones[a].matrixWorld,i.boneInverses[a]),t.addScaledVector(rD.copy(r1).applyMatrix4(rN),s)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class rH extends eW{constructor(){super(),this.isBone=!0,this.type="Bone"}}class r2 extends k{constructor(e=null,t=1,i=1,n,r,s,a,o,l=1003,h=1003,u,c){super(null,s,a,o,l,h,n,r,u,c),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}let rk=new eM,rV=new eM;class r3{constructor(e=[],t=[]){this.uuid=u(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){let e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new eM)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){let i=new eM;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){let i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let n=0,r=this.bones.length;n<r;n++){let s=this.bones[n];s&&(s.parent&&s.parent.isBone?(s.matrix.copy(s.parent.matrixWorld).invert(),s.matrix.multiply(s.matrixWorld)):s.matrix.copy(s.matrixWorld),s.matrix.decompose(s.position,s.quaternion,s.scale))}}update(){let e=this.bones,t=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let r=0,s=e.length;r<s;r++){let a=e[r]?e[r].matrixWorld:rV;rk.multiplyMatrices(a,t[r]),rk.toArray(i,16*r)}null!==n&&(n.needsUpdate=!0)}clone(){return new r3(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=Math.max(e=g(e),4);let t=new Float32Array(e*e*4);t.set(this.boneMatrices);let i=new r2(t,e,e,1023,1015);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){let n=this.bones[t];if(n.name===e)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,n=e.bones.length;i<n;i++){let r=e.bones[i],s=t[r];void 0===s&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),s=new rH),this.bones.push(s),this.boneInverses.push(new eM().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){let e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;let t=this.bones,i=this.boneInverses;for(let n=0,r=t.length;n<r;n++){let s=t[n];e.bones.push(s.uuid);let a=i[n];e.boneInverses.push(a.toArray())}return e}}class rW extends tp{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){let e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}let r6=new eM,r4=new eM,rX=[],r7=new K,r5=new eM,rj=new tB,rq=new e$;class rY extends tB{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new rW(new Float32Array(16*i),16),this.instanceColor=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let n=0;n<i;n++)this.setMatrixAt(n,r5)}computeBoundingBox(){let e=this.geometry,t=this.count;null===this.boundingBox&&(this.boundingBox=new K),null===e.boundingBox&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,r6),r7.copy(e.boundingBox).applyMatrix4(r6),this.boundingBox.union(r7)}computeBoundingSphere(){let e=this.geometry,t=this.count;null===this.boundingSphere&&(this.boundingSphere=new e$),null===e.boundingSphere&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,r6),rq.copy(e.boundingSphere).applyMatrix4(r6),this.boundingSphere.union(rq)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){let i=this.matrixWorld,n=this.count;if(rj.geometry=this.geometry,rj.material=this.material,void 0!==rj.material&&(null===this.boundingSphere&&this.computeBoundingSphere(),rq.copy(this.boundingSphere),rq.applyMatrix4(i),!1!==e.ray.intersectsSphere(rq)))for(let r=0;r<n;r++){this.getMatrixAt(r,r6),r4.multiplyMatrices(i,r6),rj.matrixWorld=r4,rj.raycast(e,rX);for(let s=0,a=rX.length;s<a;s++){let o=rX[s];o.instanceId=r,o.object=this,t.push(o)}rX.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new rW(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class rZ extends te{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new ts(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}let rJ=new Y,rK=new Y,r9=new eM,rQ=new eb,se=new e$;class st extends eW{constructor(e=new tb,t=new rZ){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){let e=this.geometry;if(null===e.index){let t=e.attributes.position,i=[0];for(let n=1,r=t.count;n<r;n++)rJ.fromBufferAttribute(t,n-1),rK.fromBufferAttribute(t,n),i[n]=i[n-1],i[n]+=rJ.distanceTo(rK);e.setAttribute("lineDistance",new t$(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){let i=this.geometry,n=this.matrixWorld,r=e.params.Line.threshold,s=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),se.copy(i.boundingSphere),se.applyMatrix4(n),se.radius+=r,!1===e.ray.intersectsSphere(se))return;r9.copy(n).invert(),rQ.copy(e.ray).applyMatrix4(r9);let a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=new Y,h=new Y,u=new Y,c=new Y,d=this.isLineSegments?2:1,p=i.index,f=i.attributes,m=f.position;if(null!==p){let $=Math.max(0,s.start),g=Math.min(p.count,s.start+s.count);for(let v=$,x=g-1;v<x;v+=d){let y=p.getX(v),S=p.getX(v+1);l.fromBufferAttribute(m,y),h.fromBufferAttribute(m,S);let _=rQ.distanceSqToSegment(l,h,c,u);if(_>o)continue;c.applyMatrix4(this.matrixWorld);let b=e.ray.origin.distanceTo(c);b<e.near||b>e.far||t.push({distance:b,point:u.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else{let M=Math.max(0,s.start),E=Math.min(m.count,s.start+s.count);for(let T=M,w=E-1;T<w;T+=d){l.fromBufferAttribute(m,T),h.fromBufferAttribute(m,T+1);let A=rQ.distanceSqToSegment(l,h,c,u);if(A>o)continue;c.applyMatrix4(this.matrixWorld);let R=e.ray.origin.distanceTo(c);R<e.near||R>e.far||t.push({distance:R,point:u.clone().applyMatrix4(this.matrixWorld),index:T,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){let e=this.geometry,t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let n=t[i[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=n.length;r<s;r++){let a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}let si=new Y,sn=new Y;class sr extends st{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){let e=this.geometry;if(null===e.index){let t=e.attributes.position,i=[];for(let n=0,r=t.count;n<r;n+=2)si.fromBufferAttribute(t,n),sn.fromBufferAttribute(t,n+1),i[n]=0===n?0:i[n-1],i[n+1]=i[n]+si.distanceTo(sn);e.setAttribute("lineDistance",new t$(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class ss extends st{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class sa extends te{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new ts(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let so=new eM,sl=new eb,sh=new e$,su=new Y;class sc extends eW{constructor(e=new tb,t=new sa){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){let i=this.geometry,n=this.matrixWorld,r=e.params.Points.threshold,s=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),sh.copy(i.boundingSphere),sh.applyMatrix4(n),sh.radius+=r,!1===e.ray.intersectsSphere(sh))return;so.copy(n).invert(),sl.copy(e.ray).applyMatrix4(so);let a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=i.index,h=i.attributes,u=h.position;if(null!==l){let c=Math.max(0,s.start),d=Math.min(l.count,s.start+s.count);for(let p=c,f=d;p<f;p++){let m=l.getX(p);su.fromBufferAttribute(u,m),sd(su,m,o,n,e,t,this)}}else{let $=Math.max(0,s.start),g=Math.min(u.count,s.start+s.count);for(let v=$,x=g;v<x;v++)su.fromBufferAttribute(u,v),sd(su,v,o,n,e,t,this)}}updateMorphTargets(){let e=this.geometry,t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let n=t[i[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=n.length;r<s;r++){let a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function sd(e,t,i,n,r,s,a){let o=sl.distanceSqToPoint(e);if(o<i){let l=new Y;sl.closestPointToPoint(e,l),l.applyMatrix4(n);let h=r.ray.origin.distanceTo(l);if(h<r.near||h>r.far)return;s.push({distance:h,distanceToRay:Math.sqrt(o),point:l,index:t,face:null,object:a})}}class sp extends k{constructor(e,t,i,n,r,s,a,o,l,h,u,c){super(null,s,a,o,l,h,n,r,u,c),this.isCompressedTexture=!0,this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class sf{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){let i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){let e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let t=[],i,n=this.getPoint(0),r=0;t.push(0);for(let s=1;s<=e;s++)r+=(i=this.getPoint(s/e)).distanceTo(n),t.push(r),n=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){let i=this.getLengths(),n=0,r=i.length,s;s=t||e*i[r-1];let a=0,o=r-1,l;for(;a<=o;)if((l=i[n=Math.floor(a+(o-a)/2)]-s)<0)a=n+1;else if(l>0)o=n-1;else{o=n;break}if(i[n=o]===s)return n/(r-1);let h=i[n],u=i[n+1],c=(s-h)/(u-h),d=(n+c)/(r-1);return d}getTangent(e,t){let i=e-1e-4,n=e+1e-4;i<0&&(i=0),n>1&&(n=1);let r=this.getPoint(i),s=this.getPoint(n),a=t||(r.isVector2?new S:new Y);return a.copy(s).sub(r).normalize(),a}getTangentAt(e,t){let i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){let i=new Y,n=[],r=[],s=[],a=new Y,o=new eM;for(let l=0;l<=e;l++){let h=l/e;n[l]=this.getTangentAt(h,new Y)}r[0]=new Y,s[0]=new Y;let u=Number.MAX_VALUE,d=Math.abs(n[0].x),p=Math.abs(n[0].y),f=Math.abs(n[0].z);d<=u&&(u=d,i.set(1,0,0)),p<=u&&(u=p,i.set(0,1,0)),f<=u&&i.set(0,0,1),a.crossVectors(n[0],i).normalize(),r[0].crossVectors(n[0],a),s[0].crossVectors(n[0],r[0]);for(let m=1;m<=e;m++){if(r[m]=r[m-1].clone(),s[m]=s[m-1].clone(),a.crossVectors(n[m-1],n[m]),a.length()>Number.EPSILON){a.normalize();let $=Math.acos(c(n[m-1].dot(n[m]),-1,1));r[m].applyMatrix4(o.makeRotationAxis(a,$))}s[m].crossVectors(n[m],r[m])}if(!0===t){let g=Math.acos(c(r[0].dot(r[e]),-1,1));g/=e,n[0].dot(a.crossVectors(r[0],r[e]))>0&&(g=-g);for(let v=1;v<=e;v++)r[v].applyMatrix4(o.makeRotationAxis(n[v],g*v)),s[v].crossVectors(n[v],r[v])}return{tangents:n,normals:r,binormals:s}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){let e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class sm extends sf{constructor(e=0,t=0,i=1,n=1,r=0,s=2*Math.PI,a=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=n,this.aStartAngle=r,this.aEndAngle=s,this.aClockwise=a,this.aRotation=o}getPoint(e,t){let i=t||new S,n=2*Math.PI,r=this.aEndAngle-this.aStartAngle,s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=n;for(;r>n;)r-=n;r<Number.EPSILON&&(r=s?0:n),!0!==this.aClockwise||s||(r===n?r=-n:r-=n);let a=this.aStartAngle+e*r,o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){let h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),c=o-this.aX,d=l-this.aY;o=c*h-d*u+this.aX,l=c*u+d*h+this.aY}return i.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){let e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class s$ extends sm{constructor(e,t,i,n,r,s){super(e,t,i,i,n,r,s),this.isArcCurve=!0,this.type="ArcCurve"}}function sg(){let e=0,t=0,i=0,n=0;function r(r,s,a,o){e=r,t=a,i=-3*r+3*s-2*a-o,n=2*r-2*s+a+o}return{initCatmullRom:function(e,t,i,n,s){r(t,i,s*(i-e),s*(n-t))},initNonuniformCatmullRom:function(e,t,i,n,s,a,o){let l=(t-e)/s-(i-e)/(s+a)+(i-t)/a,h=(i-t)/a-(n-t)/(a+o)+(n-i)/o;r(t,i,l*=a,h*=a)},calc:function(r){let s=r*r;return e+t*r+i*s+n*(s*r)}}}let sv=new Y,s8=new sg,sx=new sg,sy=new sg;class sS extends sf{constructor(e=[],t=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=n}getPoint(e,t=new Y){let i=t,n=this.points,r=n.length,s=(r-(this.closed?0:1))*e,a=Math.floor(s),o=s-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:0===o&&a===r-1&&(a=r-2,o=1);let l,h;this.closed||a>0?l=n[(a-1)%r]:(sv.subVectors(n[0],n[1]).add(n[0]),l=sv);let u=n[a%r],c=n[(a+1)%r];if(this.closed||a+2<r?h=n[(a+2)%r]:(sv.subVectors(n[r-1],n[r-2]).add(n[r-1]),h=sv),"centripetal"===this.curveType||"chordal"===this.curveType){let d="chordal"===this.curveType?.5:.25,p=Math.pow(l.distanceToSquared(u),d),f=Math.pow(u.distanceToSquared(c),d),m=Math.pow(c.distanceToSquared(h),d);f<1e-4&&(f=1),p<1e-4&&(p=f),m<1e-4&&(m=f),s8.initNonuniformCatmullRom(l.x,u.x,c.x,h.x,p,f,m),sx.initNonuniformCatmullRom(l.y,u.y,c.y,h.y,p,f,m),sy.initNonuniformCatmullRom(l.z,u.z,c.z,h.z,p,f,m)}else"catmullrom"===this.curveType&&(s8.initCatmullRom(l.x,u.x,c.x,h.x,this.tension),sx.initCatmullRom(l.y,u.y,c.y,h.y,this.tension),sy.initCatmullRom(l.z,u.z,c.z,h.z,this.tension));return i.set(s8.calc(o),sx.calc(o),sy.calc(o)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let n=e.points[t];this.points.push(new Y().fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function s_(e,t,i,n,r){let s=(n-t)*.5,a=(r-i)*.5,o=e*e;return(2*i-2*n+s+a)*(e*o)+(-3*i+3*n-2*s-a)*o+s*e+i}function sb(e,t){return e*e*t}function sM(e,t,i,n){var r,s,a,o;return function e(t,i){let n=1-t;return n*n*i}(e,t)+(r=e,2*(1-r)*r*(s=i))+(a=e,a*a*(o=n))}function sE(e,t,i,n,r){var s,a,o,l;return function e(t,i){let n=1-t;return n*n*n*i}(e,t)+function e(t,i){let n=1-t;return 3*n*n*t*i}(e,i)+(s=e,3*(1-s)*s*s*(a=n))+(o=e,o*o*o*(l=r))}class sT extends sf{constructor(e=new S,t=new S,i=new S,n=new S){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new S){let i=t,n=this.v0,r=this.v1,s=this.v2,a=this.v3;return i.set(sE(e,n.x,r.x,s.x,a.x),sE(e,n.y,r.y,s.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class sw extends sf{constructor(e=new Y,t=new Y,i=new Y,n=new Y){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new Y){let i=t,n=this.v0,r=this.v1,s=this.v2,a=this.v3;return i.set(sE(e,n.x,r.x,s.x,a.x),sE(e,n.y,r.y,s.y,a.y),sE(e,n.z,r.z,s.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class sA extends sf{constructor(e=new S,t=new S){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new S){let i=t;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new S){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class sR extends sf{constructor(e=new Y,t=new Y){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new Y){let i=t;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new Y){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class sC extends sf{constructor(e=new S,t=new S,i=new S){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new S){let i=t,n=this.v0,r=this.v1,s=this.v2;return i.set(sM(e,n.x,r.x,s.x),sM(e,n.y,r.y,s.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class sL extends sf{constructor(e=new Y,t=new Y,i=new Y){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new Y){let i=t,n=this.v0,r=this.v1,s=this.v2;return i.set(sM(e,n.x,r.x,s.x),sM(e,n.y,r.y,s.y),sM(e,n.z,r.z,s.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class s0 extends sf{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new S){let i=t,n=this.points,r=(n.length-1)*e,s=Math.floor(r),a=r-s,o=n[0===s?s:s-1],l=n[s],h=n[s>n.length-2?n.length-1:s+1],u=n[s>n.length-3?n.length-1:s+2];return i.set(s_(a,o.x,l.x,h.x,u.x),s_(a,o.y,l.y,h.y,u.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let n=e.points[t];this.points.push(n.clone())}return this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let n=e.points[t];this.points.push(new S().fromArray(n))}return this}}var sP=Object.freeze({__proto__:null,ArcCurve:s$,CatmullRomCurve3:sS,CubicBezierCurve:sT,CubicBezierCurve3:sw,EllipseCurve:sm,LineCurve:sA,LineCurve3:sR,QuadraticBezierCurve:sC,QuadraticBezierCurve3:sL,SplineCurve:s0});class s1 extends sf{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){let e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new sA(t,e))}getPoint(e,t){let i=e*this.getLength(),n=this.getCurveLengths(),r=0;for(;r<n.length;){if(n[r]>=i){let s=n[r]-i,a=this.curves[r],o=a.getLength(),l=0===o?0:1-s/o;return a.getPointAt(l,t)}r++}return null}getLength(){let e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let e=[],t=0;for(let i=0,n=this.curves.length;i<n;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){let t=[],i;for(let n=0,r=this.curves;n<r.length;n++){let s=r[n],a=s.isEllipseCurve?2*e:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?e*s.points.length:e,o=s.getPoints(a);for(let l=0;l<o.length;l++){let h=o[l];i&&i.equals(h)||(t.push(h),i=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){let e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){let n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let n=e.curves[t];this.curves.push(new sP[n.type]().fromJSON(n))}return this}}class sI extends s1{constructor(e){super(),this.type="Path",this.currentPoint=new S,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){let i=new sA(this.currentPoint.clone(),new S(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,n){let r=new sC(this.currentPoint.clone(),new S(e,t),new S(i,n));return this.curves.push(r),this.currentPoint.set(i,n),this}bezierCurveTo(e,t,i,n,r,s){let a=new sT(this.currentPoint.clone(),new S(e,t),new S(i,n),new S(r,s));return this.curves.push(a),this.currentPoint.set(r,s),this}splineThru(e){let t=[this.currentPoint.clone()].concat(e),i=new s0(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,n,r,s){let a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+a,t+o,i,n,r,s),this}absarc(e,t,i,n,r,s){return this.absellipse(e,t,i,i,n,r,s),this}ellipse(e,t,i,n,r,s,a,o){let l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,i,n,r,s,a,o),this}absellipse(e,t,i,n,r,s,a,o){let l=new sm(e,t,i,n,r,s,a,o);if(this.curves.length>0){let h=l.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(l);let u=l.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){let e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class sU extends tb{constructor(e=[new S(0,-.5),new S(.5,0),new S(0,.5)],t=12,i=0,n=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:n},t=Math.floor(t),n=c(n,0,2*Math.PI);let r=[],s=[],a=[],o=[],l=[],h=1/t,u=new Y,d=new S,p=new Y,f=new Y,m=new Y,$=0,g=0;for(let v=0;v<=e.length-1;v++)switch(v){case 0:$=e[v+1].x-e[v].x,g=e[v+1].y-e[v].y,p.x=1*g,p.y=-$,p.z=0*g,m.copy(p),p.normalize(),o.push(p.x,p.y,p.z);break;case e.length-1:o.push(m.x,m.y,m.z);break;default:$=e[v+1].x-e[v].x,g=e[v+1].y-e[v].y,p.x=1*g,p.y=-$,p.z=0*g,f.copy(p),p.x+=m.x,p.y+=m.y,p.z+=m.z,p.normalize(),o.push(p.x,p.y,p.z),m.copy(f)}for(let x=0;x<=t;x++){let y=i+x*h*n,_=Math.sin(y),b=Math.cos(y);for(let M=0;M<=e.length-1;M++){u.x=e[M].x*_,u.y=e[M].y,u.z=e[M].x*b,s.push(u.x,u.y,u.z),d.x=x/t,d.y=M/(e.length-1),a.push(d.x,d.y);let E=o[3*M+0]*_,T=o[3*M+1],w=o[3*M+0]*b;l.push(E,T,w)}}for(let A=0;A<t;A++)for(let R=0;R<e.length-1;R++){let C=R+A*e.length,L=C,P=C+e.length,I=C+e.length+1,U=C+1;r.push(L,P,U),r.push(I,U,P)}this.setIndex(r),this.setAttribute("position",new t$(s,3)),this.setAttribute("uv",new t$(a,2)),this.setAttribute("normal",new t$(l,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new sU(e.points,e.segments,e.phiStart,e.phiLength)}}class sD extends sU{constructor(e=1,t=1,i=4,n=8){let r=new sI;r.absarc(0,-t/2,e,1.5*Math.PI,0),r.absarc(0,t/2,e,0,.5*Math.PI),super(r.getPoints(i),n),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:i,radialSegments:n}}static fromJSON(e){return new sD(e.radius,e.length,e.capSegments,e.radialSegments)}}class sN extends tb{constructor(e=1,t=32,i=0,n=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},t=Math.max(3,t);let r=[],s=[],a=[],o=[],l=new Y,h=new S;s.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let u=0,c=3;u<=t;u++,c+=3){let d=i+u/t*n;l.x=e*Math.cos(d),l.y=e*Math.sin(d),s.push(l.x,l.y,l.z),a.push(0,0,1),h.x=(s[c]/e+1)/2,h.y=(s[c+1]/e+1)/2,o.push(h.x,h.y)}for(let p=1;p<=t;p++)r.push(p,p+1,0);this.setIndex(r),this.setAttribute("position",new t$(s,3)),this.setAttribute("normal",new t$(a,3)),this.setAttribute("uv",new t$(o,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new sN(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class sF extends tb{constructor(e=1,t=1,i=1,n=32,r=1,s=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:o};let l=this;n=Math.floor(n),r=Math.floor(r);let h=[],u=[],c=[],d=[],p=0,f=[],m=i/2,$=0;function g(i){let r=p,s=new S,f=new Y,g=0,v=!0===i?e:t,x=!0===i?1:-1;for(let y=1;y<=n;y++)u.push(0,m*x,0),c.push(0,x,0),d.push(.5,.5),p++;let _=p;for(let b=0;b<=n;b++){let M=b/n,E=M*o+a,T=Math.cos(E),w=Math.sin(E);f.x=v*w,f.y=m*x,f.z=v*T,u.push(f.x,f.y,f.z),c.push(0,x,0),s.x=.5*T+.5,s.y=.5*w*x+.5,d.push(s.x,s.y),p++}for(let A=0;A<n;A++){let R=r+A,C=_+A;!0===i?h.push(C,C+1,R):h.push(C+1,C,R),g+=3}l.addGroup($,g,!0===i?1:2),$+=g}(function s(){let g=new Y,v=new Y,x=0,y=(t-e)/i;for(let S=0;S<=r;S++){let _=[],b=S/r,M=b*(t-e)+e;for(let E=0;E<=n;E++){let T=E/n,w=T*o+a,A=Math.sin(w),R=Math.cos(w);v.x=M*A,v.y=-b*i+m,v.z=M*R,u.push(v.x,v.y,v.z),g.set(A,y,R).normalize(),c.push(g.x,g.y,g.z),d.push(T,1-b),_.push(p++)}f.push(_)}for(let C=0;C<n;C++)for(let L=0;L<r;L++){let P=f[L][C],I=f[L+1][C],U=f[L+1][C+1],D=f[L][C+1];h.push(P,I,D),h.push(I,U,D),x+=6}l.addGroup($,x,0),$+=x})(),!1===s&&(e>0&&g(!0),t>0&&g(!1)),this.setIndex(h),this.setAttribute("position",new t$(u,3)),this.setAttribute("normal",new t$(c,3)),this.setAttribute("uv",new t$(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new sF(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class sO extends sF{constructor(e=1,t=1,i=32,n=1,r=!1,s=0,a=2*Math.PI){super(0,e,t,i,n,r,s,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:s,thetaLength:a}}static fromJSON(e){return new sO(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class sB extends tb{constructor(e=[],t=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n};let r=[],s=[];function a(e,t,i,n){let r=n+1,s=[];for(let a=0;a<=r;a++){s[a]=[];let l=e.clone().lerp(i,a/r),h=t.clone().lerp(i,a/r),u=r-a;for(let c=0;c<=u;c++)0===c&&a===r?s[a][c]=l:s[a][c]=l.clone().lerp(h,c/u)}for(let d=0;d<r;d++)for(let p=0;p<2*(r-d)-1;p++){let f=Math.floor(p/2);p%2==0?(o(s[d][f+1]),o(s[d+1][f]),o(s[d][f])):(o(s[d][f+1]),o(s[d+1][f+1]),o(s[d+1][f]))}}function o(e){r.push(e.x,e.y,e.z)}function l(t,i){let n=3*t;i.x=e[n+0],i.y=e[n+1],i.z=e[n+2]}function h(e,t,i,n){n<0&&1===e.x&&(s[t]=e.x-1),0===i.x&&0===i.z&&(s[t]=n/2/Math.PI+.5)}function u(e){return Math.atan2(e.z,-e.x)}function c(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(function e(i){let n=new Y,r=new Y,s=new Y;for(let o=0;o<t.length;o+=3)l(t[o+0],n),l(t[o+1],r),l(t[o+2],s),a(n,r,s,i)})(n),function e(t){let i=new Y;for(let n=0;n<r.length;n+=3)i.x=r[n+0],i.y=r[n+1],i.z=r[n+2],i.normalize().multiplyScalar(t),r[n+0]=i.x,r[n+1]=i.y,r[n+2]=i.z}(i),function e(){let t=new Y;for(let i=0;i<r.length;i+=3){t.x=r[i+0],t.y=r[i+1],t.z=r[i+2];let n=u(t)/2/Math.PI+.5,a=c(t)/Math.PI+.5;s.push(n,1-a)}(function e(){let t=new Y,i=new Y,n=new Y,a=new Y,o=new S,l=new S,c=new S;for(let d=0,p=0;d<r.length;d+=9,p+=6){t.set(r[d+0],r[d+1],r[d+2]),i.set(r[d+3],r[d+4],r[d+5]),n.set(r[d+6],r[d+7],r[d+8]),o.set(s[p+0],s[p+1]),l.set(s[p+2],s[p+3]),c.set(s[p+4],s[p+5]),a.copy(t).add(i).add(n).divideScalar(3);let f=u(a);h(o,p+0,t,f),h(l,p+2,i,f),h(c,p+4,n,f)}})(),function e(){for(let t=0;t<s.length;t+=6){let i=s[t+0],n=s[t+2],r=s[t+4],a=Math.max(i,n,r),o=Math.min(i,n,r);a>.9&&o<.1&&(i<.2&&(s[t+0]+=1),n<.2&&(s[t+2]+=1),r<.2&&(s[t+4]+=1))}}()}(),this.setAttribute("position",new t$(r,3)),this.setAttribute("normal",new t$(r.slice(),3)),this.setAttribute("uv",new t$(s,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new sB(e.vertices,e.indices,e.radius,e.details)}}class sz extends sB{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2,n=1/i;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new sz(e.radius,e.detail)}}let sG=new Y,sH=new Y,s2=new Y,sk=new e9;class sV extends tb{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},null!==e){let i=Math.cos(l*t),n=e.getIndex(),r=e.getAttribute("position"),s=n?n.count:r.count,a=[0,0,0],o=["a","b","c"],h=[,,,],u={},c=[];for(let d=0;d<s;d+=3){n?(a[0]=n.getX(d),a[1]=n.getX(d+1),a[2]=n.getX(d+2)):(a[0]=d,a[1]=d+1,a[2]=d+2);let{a:p,b:f,c:m}=sk;if(p.fromBufferAttribute(r,a[0]),f.fromBufferAttribute(r,a[1]),m.fromBufferAttribute(r,a[2]),sk.getNormal(s2),h[0]=`${Math.round(1e4*p.x)},${Math.round(1e4*p.y)},${Math.round(1e4*p.z)}`,h[1]=`${Math.round(1e4*f.x)},${Math.round(1e4*f.y)},${Math.round(1e4*f.z)}`,h[2]=`${Math.round(1e4*m.x)},${Math.round(1e4*m.y)},${Math.round(1e4*m.z)}`,h[0]!==h[1]&&h[1]!==h[2]&&h[2]!==h[0])for(let $=0;$<3;$++){let g=($+1)%3,v=h[$],x=h[g],y=sk[o[$]],S=sk[o[g]],_=`${v}_${x}`,b=`${x}_${v}`;b in u&&u[b]?(s2.dot(u[b].normal)<=i&&(c.push(y.x,y.y,y.z),c.push(S.x,S.y,S.z)),u[b]=null):_ in u||(u[_]={index0:a[$],index1:a[g],normal:s2.clone()})}}for(let M in u)if(u[M]){let{index0:E,index1:T}=u[M];sG.fromBufferAttribute(r,E),sH.fromBufferAttribute(r,T),c.push(sG.x,sG.y,sG.z),c.push(sH.x,sH.y,sH.z)}this.setAttribute("position",new t$(c,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class s3 extends sI{constructor(e){super(e),this.uuid=u(),this.type="Shape",this.holes=[]}getPointsHoles(e){let t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){let e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){let n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let n=e.holes[t];this.holes.push(new sI().fromJSON(n))}return this}}let sW={triangulate:function(e,t,i=2){let n=t&&t.length,r=n?t[0]*i:e.length,s=s6(e,0,r,i,!0),a=[];if(!s||s.next===s.prev)return a;let o,l,h,u,c,d,p;if(n&&(s=function e(t,i,n,r){let s=[],a,o,l,h,u;for(a=0,o=i.length;a<o;a++)l=i[a]*r,h=a<o-1?i[a+1]*r:t.length,(u=s6(t,l,h,r,!1))===u.next&&(u.steiner=!0),s.push(s9(u));for(s.sort(sY),a=0;a<s.length;a++)n=sZ(s[a],n);return n}(e,t,s,i)),e.length>80*i){o=h=e[0],l=u=e[1];for(let f=i;f<r;f+=i)c=e[f],d=e[f+1],c<o&&(o=c),d<l&&(l=d),c>h&&(h=c),d>u&&(u=d);p=0!==(p=Math.max(h-o,u-l))?32767/p:0}return sX(s,a,i,o,l,p,0),a}};function s6(e,t,i,n,r){let s,a;if(r===function e(t,i,n,r){let s=0;for(let a=i,o=n-r;a<n;a+=r)s+=(t[o]-t[a])*(t[a+1]+t[o+1]),o=a;return s}(e,t,i,n)>0)for(s=t;s<i;s+=n)a=al(s,e[s],e[s+1],a);else for(s=i-n;s>=t;s-=n)a=al(s,e[s],e[s+1],a);return a&&ai(a,a.next)&&(ah(a),a=a.next),a}function s4(e,t){if(!e)return e;t||(t=e);let i=e,n;do if(n=!1,!i.steiner&&(ai(i,i.next)||0===at(i.prev,i,i.next))){if(ah(i),(i=t=i.prev)===i.next)break;n=!0}else i=i.next;while(n||i!==t);return t}function sX(e,t,i,n,r,s,a){if(!e)return;!a&&s&&function e(t,i,n,r){let s=t;do 0===s.z&&(s.z=sK(s.x,s.y,i,n,r)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next;while(s!==t);s.prevZ.nextZ=null,s.prevZ=null,function e(t){let i,n,r,s,a,o,l,h,u=1;do{for(n=t,t=null,a=null,o=0;n;){for(o++,r=n,l=0,i=0;i<u&&(l++,r=r.nextZ);i++);for(h=u;l>0||h>0&&r;)0!==l&&(0===h||!r||n.z<=r.z)?(s=n,n=n.nextZ,l--):(s=r,r=r.nextZ,h--),a?a.nextZ=s:t=s,s.prevZ=a,a=s;n=r}a.nextZ=null,u*=2}while(o>1);return t}(s)}(e,n,r,s);let o=e,l,h;for(;e.prev!==e.next;){if(l=e.prev,h=e.next,s?s5(e,n,r,s):s7(e)){t.push(l.i/i|0),t.push(e.i/i|0),t.push(h.i/i|0),ah(e),e=h.next,o=h.next;continue}if((e=h)===o){a?1===a?sX(e=sj(s4(e),t,i),t,i,n,r,s,2):2===a&&sq(e,t,i,n,r,s):sX(s4(e),t,i,n,r,s,1);break}}}function s7(e){let t=e.prev,i=e,n=e.next;if(at(t,i,n)>=0)return!1;let r=t.x,s=i.x,a=n.x,o=t.y,l=i.y,h=n.y,u=r<s?r<a?r:a:s<a?s:a,c=o<l?o<h?o:h:l<h?l:h,d=r>s?r>a?r:a:s>a?s:a,p=o>l?o>h?o:h:l>h?l:h,f=n.next;for(;f!==t;){if(f.x>=u&&f.x<=d&&f.y>=c&&f.y<=p&&sQ(r,o,s,l,a,h,f.x,f.y)&&at(f.prev,f,f.next)>=0)return!1;f=f.next}return!0}function s5(e,t,i,n){let r=e.prev,s=e,a=e.next;if(at(r,s,a)>=0)return!1;let o=r.x,l=s.x,h=a.x,u=r.y,c=s.y,d=a.y,p=o<l?o<h?o:h:l<h?l:h,f=u<c?u<d?u:d:c<d?c:d,m=o>l?o>h?o:h:l>h?l:h,$=u>c?u>d?u:d:c>d?c:d,g=sK(p,f,t,i,n),v=sK(m,$,t,i,n),x=e.prevZ,y=e.nextZ;for(;x&&x.z>=g&&y&&y.z<=v;){if(x.x>=p&&x.x<=m&&x.y>=f&&x.y<=$&&x!==r&&x!==a&&sQ(o,u,l,c,h,d,x.x,x.y)&&at(x.prev,x,x.next)>=0||(x=x.prevZ,y.x>=p&&y.x<=m&&y.y>=f&&y.y<=$&&y!==r&&y!==a&&sQ(o,u,l,c,h,d,y.x,y.y)&&at(y.prev,y,y.next)>=0))return!1;y=y.nextZ}for(;x&&x.z>=g;){if(x.x>=p&&x.x<=m&&x.y>=f&&x.y<=$&&x!==r&&x!==a&&sQ(o,u,l,c,h,d,x.x,x.y)&&at(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;y&&y.z<=v;){if(y.x>=p&&y.x<=m&&y.y>=f&&y.y<=$&&y!==r&&y!==a&&sQ(o,u,l,c,h,d,y.x,y.y)&&at(y.prev,y,y.next)>=0)return!1;y=y.nextZ}return!0}function sj(e,t,i){let n=e;do{let r=n.prev,s=n.next.next;!ai(r,s)&&an(r,n,n.next,s)&&aa(r,s)&&aa(s,r)&&(t.push(r.i/i|0),t.push(n.i/i|0),t.push(s.i/i|0),ah(n),ah(n.next),n=e=s),n=n.next}while(n!==e);return s4(n)}function sq(e,t,i,n,r,s){let a=e;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&ae(a,o)){let l=ao(a,o);a=s4(a,a.next),l=s4(l,l.next),sX(a,t,i,n,r,s,0),sX(l,t,i,n,r,s,0);return}o=o.next}a=a.next}while(a!==e)}function sY(e,t){return e.x-t.x}function sZ(e,t){let i=function e(t,i){let n=i,r=-1/0,s,a=t.x,o=t.y;do{if(o<=n.y&&o>=n.next.y&&n.next.y!==n.y){let l=n.x+(o-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(l<=a&&l>r&&(r=l,s=n.x<n.next.x?n:n.next,l===a))return s}n=n.next}while(n!==i);if(!s)return null;let h=s,u=s.x,c=s.y,d=1/0,p;n=s;do a>=n.x&&n.x>=u&&a!==n.x&&sQ(o<c?a:r,o,u,c,o<c?r:a,o,n.x,n.y)&&(p=Math.abs(o-n.y)/(a-n.x),aa(n,t)&&(p<d||p===d&&(n.x>s.x||n.x===s.x&&sJ(s,n)))&&(s=n,d=p)),n=n.next;while(n!==h);return s}(e,t);if(!i)return t;let n=ao(i,e);return s4(n,n.next),s4(i,i.next)}function sJ(e,t){return 0>at(e.prev,e,t.prev)&&0>at(t.next,e,e.next)}function sK(e,t,i,n,r){return(e=((e=((e=((e=((e=(e-i)*r|0)|e<<8)&16711935)|e<<4)&252645135)|e<<2)&858993459)|e<<1)&1431655765)|(t=((t=((t=((t=((t=(t-n)*r|0)|t<<8)&16711935)|t<<4)&252645135)|t<<2)&858993459)|t<<1)&1431655765)<<1}function s9(e){let t=e,i=e;do(t.x<i.x||t.x===i.x&&t.y<i.y)&&(i=t),t=t.next;while(t!==e);return i}function sQ(e,t,i,n,r,s,a,o){return(r-a)*(t-o)>=(e-a)*(s-o)&&(e-a)*(n-o)>=(i-a)*(t-o)&&(i-a)*(s-o)>=(r-a)*(n-o)}function ae(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function e(t,i){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==i.i&&n.next.i!==i.i&&an(n,n.next,t,i))return!0;n=n.next}while(n!==t);return!1}(e,t)&&(aa(e,t)&&aa(t,e)&&function e(t,i){let n=t,r=!1,s=(t.x+i.x)/2,a=(t.y+i.y)/2;do n.y>a!=n.next.y>a&&n.next.y!==n.y&&s<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next;while(n!==t);return r}(e,t)&&(at(e.prev,e,t.prev)||at(e,t.prev,t))||ai(e,t)&&at(e.prev,e,e.next)>0&&at(t.prev,t,t.next)>0)}function at(e,t,i){return(t.y-e.y)*(i.x-t.x)-(t.x-e.x)*(i.y-t.y)}function ai(e,t){return e.x===t.x&&e.y===t.y}function an(e,t,i,n){let r=as(at(e,t,i)),s=as(at(e,t,n)),a=as(at(i,n,e)),o=as(at(i,n,t));return!!(r!==s&&a!==o||0===r&&ar(e,i,t)||0===s&&ar(e,n,t)||0===a&&ar(i,e,n)||0===o&&ar(i,t,n))}function ar(e,t,i){return t.x<=Math.max(e.x,i.x)&&t.x>=Math.min(e.x,i.x)&&t.y<=Math.max(e.y,i.y)&&t.y>=Math.min(e.y,i.y)}function as(e){return e>0?1:e<0?-1:0}function aa(e,t){return 0>at(e.prev,e,e.next)?at(e,t,e.next)>=0&&at(e,e.prev,t)>=0:0>at(e,t,e.prev)||0>at(e,e.next,t)}function ao(e,t){let i=new au(e.i,e.x,e.y),n=new au(t.i,t.x,t.y),r=e.next,s=t.prev;return e.next=t,t.prev=e,i.next=r,r.prev=i,n.next=i,i.prev=n,s.next=n,n.prev=s,n}function al(e,t,i,n){let r=new au(e,t,i);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function ah(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function au(e,t,i){this.i=e,this.x=t,this.y=i,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}class ac{static area(e){let t=e.length,i=0;for(let n=t-1,r=0;r<t;n=r++)i+=e[n].x*e[r].y-e[r].x*e[n].y;return .5*i}static isClockWise(e){return 0>ac.area(e)}static triangulateShape(e,t){let i=[],n=[],r=[];ad(e),ap(i,e);let s=e.length;t.forEach(ad);for(let a=0;a<t.length;a++)n.push(s),s+=t[a].length,ap(i,t[a]);let o=sW.triangulate(i,n);for(let l=0;l<o.length;l+=3)r.push(o.slice(l,l+3));return r}}function ad(e){let t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function ap(e,t){for(let i=0;i<t.length;i++)e.push(t[i].x),e.push(t[i].y)}class af extends tb{constructor(e=new s3([new S(.5,.5),new S(-.5,.5),new S(-.5,-.5),new S(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];let i=this,n=[],r=[];for(let s=0,a=e.length;s<a;s++){let o=e[s];l(o)}function l(e){let s=[],a=void 0!==t.curveSegments?t.curveSegments:12,o=void 0!==t.steps?t.steps:1,l=void 0!==t.depth?t.depth:1,h=void 0===t.bevelEnabled||t.bevelEnabled,u=void 0!==t.bevelThickness?t.bevelThickness:.2,c=void 0!==t.bevelSize?t.bevelSize:u-.1,d=void 0!==t.bevelOffset?t.bevelOffset:0,p=void 0!==t.bevelSegments?t.bevelSegments:3,f=t.extrudePath,m=void 0!==t.UVGenerator?t.UVGenerator:am,$,g=!1,v,x,y,_;f&&($=f.getSpacedPoints(o),g=!0,h=!1,v=f.computeFrenetFrames(o,!1),x=new Y,y=new Y,_=new Y),h||(p=0,u=0,c=0,d=0);let b=e.extractPoints(a),M=b.shape,E=b.holes,T=!ac.isClockWise(M);if(T){M=M.reverse();for(let w=0,A=E.length;w<A;w++){let R=E[w];ac.isClockWise(R)&&(E[w]=R.reverse())}}let C=ac.triangulateShape(M,E),L=M;for(let P=0,I=E.length;P<I;P++){let U=E[P];M=M.concat(U)}function D(e,t,i){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().addScaledVector(t,i)}let N=M.length,F=C.length;function O(e,t,i){let n,r,s,a=e.x-t.x,o=e.y-t.y,l=i.x-e.x,h=i.y-e.y,u=a*a+o*o;if(Math.abs(a*h-o*l)>Number.EPSILON){let c=Math.sqrt(u),d=Math.sqrt(l*l+h*h),p=t.x-o/c,f=t.y+a/c,m=i.x-h/d,$=i.y+l/d,g=((m-p)*h-($-f)*l)/(a*h-o*l);n=p+a*g-e.x,r=f+o*g-e.y;let v=n*n+r*r;if(v<=2)return new S(n,r);s=Math.sqrt(v/2)}else{let x=!1;a>Number.EPSILON?l>Number.EPSILON&&(x=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(x=!0):Math.sign(o)===Math.sign(h)&&(x=!0),x?(n=-o,r=a,s=Math.sqrt(u)):(n=a,r=o,s=Math.sqrt(u/2))}return new S(n/s,r/s)}let B=[];for(let z=0,G=L.length,H=G-1,k=z+1;z<G;z++,H++,k++)H===G&&(H=0),k===G&&(k=0),B[z]=O(L[z],L[H],L[k]);let V=[],W,X=B.concat();for(let j=0,q=E.length;j<q;j++){let Z=E[j];W=[];for(let J=0,K=Z.length,Q=K-1,ee=J+1;J<K;J++,Q++,ee++)Q===K&&(Q=0),ee===K&&(ee=0),W[J]=O(Z[J],Z[Q],Z[ee]);V.push(W),X=X.concat(W)}for(let et=0;et<p;et++){let ei=et/p,en=u*Math.cos(ei*Math.PI/2),er=c*Math.sin(ei*Math.PI/2)+d;for(let es=0,ea=L.length;es<ea;es++){let eo=D(L[es],B[es],er);eP(eo.x,eo.y,-en)}for(let el=0,eh=E.length;el<eh;el++){let eu=E[el];W=V[el];for(let ec=0,ed=eu.length;ec<ed;ec++){let ep=D(eu[ec],W[ec],er);eP(ep.x,ep.y,-en)}}}let ef=c+d;for(let em=0;em<N;em++){let e$=h?D(M[em],X[em],ef):M[em];g?(y.copy(v.normals[0]).multiplyScalar(e$.x),x.copy(v.binormals[0]).multiplyScalar(e$.y),_.copy($[0]).add(y).add(x),eP(_.x,_.y,_.z)):eP(e$.x,e$.y,0)}for(let eg=1;eg<=o;eg++)for(let ev=0;ev<N;ev++){let e8=h?D(M[ev],X[ev],ef):M[ev];g?(y.copy(v.normals[eg]).multiplyScalar(e8.x),x.copy(v.binormals[eg]).multiplyScalar(e8.y),_.copy($[eg]).add(y).add(x),eP(_.x,_.y,_.z)):eP(e8.x,e8.y,l/o*eg)}for(let ex=p-1;ex>=0;ex--){let ey=ex/p,eS=u*Math.cos(ey*Math.PI/2),e_=c*Math.sin(ey*Math.PI/2)+d;for(let eb=0,eM=L.length;eb<eM;eb++){let eE=D(L[eb],B[eb],e_);eP(eE.x,eE.y,l+eS)}for(let eT=0,ew=E.length;eT<ew;eT++){let eA=E[eT];W=V[eT];for(let eR=0,eC=eA.length;eR<eC;eR++){let eL=D(eA[eR],W[eR],e_);g?eP(eL.x,eL.y+$[o-1].y,$[o-1].x+eS):eP(eL.x,eL.y,l+eS)}}}function e0(e,t){let i=e.length;for(;--i>=0;){let n=i,r=i-1;r<0&&(r=e.length-1);for(let s=0,a=o+2*p;s<a;s++){let l=N*s,h=N*(s+1),u=t+n+l,c=t+r+l,d=t+r+h,f=t+n+h;eI(u,c,d,f)}}}function eP(e,t,i){s.push(e),s.push(t),s.push(i)}function e1(e,t,r){eU(e),eU(t),eU(r);let s=n.length/3,a=m.generateTopUV(i,n,s-3,s-2,s-1);eD(a[0]),eD(a[1]),eD(a[2])}function eI(e,t,r,s){eU(e),eU(t),eU(s),eU(t),eU(r),eU(s);let a=n.length/3,o=m.generateSideWallUV(i,n,a-6,a-3,a-2,a-1);eD(o[0]),eD(o[1]),eD(o[3]),eD(o[1]),eD(o[2]),eD(o[3])}function eU(e){n.push(s[3*e+0]),n.push(s[3*e+1]),n.push(s[3*e+2])}function eD(e){r.push(e.x),r.push(e.y)}(function e(){let t=n.length/3;if(h){let r=0,s=N*r;for(let a=0;a<F;a++){let l=C[a];e1(l[2]+s,l[1]+s,l[0]+s)}s=N*(r=o+2*p);for(let u=0;u<F;u++){let c=C[u];e1(c[0]+s,c[1]+s,c[2]+s)}}else{for(let d=0;d<F;d++){let f=C[d];e1(f[2],f[1],f[0])}for(let m=0;m<F;m++){let $=C[m];e1($[0]+N*o,$[1]+N*o,$[2]+N*o)}}i.addGroup(t,n.length/3-t,0)})(),function e(){let t=n.length/3,r=0;e0(L,r),r+=L.length;for(let s=0,a=E.length;s<a;s++){let o=E[s];e0(o,r),r+=o.length}i.addGroup(t,n.length/3-t,1)}()}this.setAttribute("position",new t$(n,3)),this.setAttribute("uv",new t$(r,2)),this.computeVertexNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return function e(t,i,n){if(n.shapes=[],Array.isArray(t))for(let r=0,s=t.length;r<s;r++){let a=t[r];n.shapes.push(a.uuid)}else n.shapes.push(t.uuid);return n.options=Object.assign({},i),void 0!==i.extrudePath&&(n.options.extrudePath=i.extrudePath.toJSON()),n}(t,i,e)}static fromJSON(e,t){let i=[];for(let n=0,r=e.shapes.length;n<r;n++){let s=t[e.shapes[n]];i.push(s)}let a=e.options.extrudePath;return void 0!==a&&(e.options.extrudePath=new sP[a.type]().fromJSON(a)),new af(i,e.options)}}let am={generateTopUV:function(e,t,i,n,r){let s=t[3*i],a=t[3*i+1],o=t[3*n],l=t[3*n+1],h=t[3*r],u=t[3*r+1];return[new S(s,a),new S(o,l),new S(h,u)]},generateSideWallUV:function(e,t,i,n,r,s){let a=t[3*i],o=t[3*i+1],l=t[3*i+2],h=t[3*n],u=t[3*n+1],c=t[3*n+2],d=t[3*r],p=t[3*r+1],f=t[3*r+2],m=t[3*s],$=t[3*s+1],g=t[3*s+2];return Math.abs(o-u)<Math.abs(a-h)?[new S(a,1-l),new S(h,1-c),new S(d,1-f),new S(m,1-g)]:[new S(o,1-l),new S(u,1-c),new S(p,1-f),new S($,1-g)]}};class a$ extends sB{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2;super([-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new a$(e.radius,e.detail)}}class ag extends sB{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ag(e.radius,e.detail)}}class av extends tb{constructor(e=.5,t=1,i=32,n=1,r=0,s=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:s},i=Math.max(3,i),n=Math.max(1,n);let a=[],o=[],l=[],h=[],u=e,c=(t-e)/n,d=new Y,p=new S;for(let f=0;f<=n;f++){for(let m=0;m<=i;m++){let $=r+m/i*s;d.x=u*Math.cos($),d.y=u*Math.sin($),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,h.push(p.x,p.y)}u+=c}for(let g=0;g<n;g++){let v=g*(i+1);for(let x=0;x<i;x++){let y=x+v,_=y,b=y+i+1,M=y+i+2,E=y+1;a.push(_,b,E),a.push(b,M,E)}}this.setIndex(a),this.setAttribute("position",new t$(o,3)),this.setAttribute("normal",new t$(l,3)),this.setAttribute("uv",new t$(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new av(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class a8 extends tb{constructor(e=new s3([new S(0,.5),new S(-.5,-.5),new S(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};let i=[],n=[],r=[],s=[],a=0,o=0;if(!1===Array.isArray(e))h(e);else for(let l=0;l<e.length;l++)h(e[l]),this.addGroup(a,o,l),a+=o,o=0;function h(e){let a=n.length/3,l=e.extractPoints(t),h=l.shape,u=l.holes;!1===ac.isClockWise(h)&&(h=h.reverse());for(let c=0,d=u.length;c<d;c++){let p=u[c];!0===ac.isClockWise(p)&&(u[c]=p.reverse())}let f=ac.triangulateShape(h,u);for(let m=0,$=u.length;m<$;m++){let g=u[m];h=h.concat(g)}for(let v=0,x=h.length;v<x;v++){let y=h[v];n.push(y.x,y.y,0),r.push(0,0,1),s.push(y.x,y.y)}for(let S=0,_=f.length;S<_;S++){let b=f[S],M=b[0]+a,E=b[1]+a,T=b[2]+a;i.push(M,E,T),o+=3}}this.setIndex(i),this.setAttribute("position",new t$(n,3)),this.setAttribute("normal",new t$(r,3)),this.setAttribute("uv",new t$(s,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON(),t=this.parameters.shapes;return function e(t,i){if(i.shapes=[],Array.isArray(t))for(let n=0,r=t.length;n<r;n++){let s=t[n];i.shapes.push(s.uuid)}else i.shapes.push(t.uuid);return i}(t,e)}static fromJSON(e,t){let i=[];for(let n=0,r=e.shapes.length;n<r;n++){let s=t[e.shapes[n]];i.push(s)}return new a8(i,e.curveSegments)}}class ax extends tb{constructor(e=1,t=32,i=16,n=0,r=2*Math.PI,s=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:r,thetaStart:s,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));let o=Math.min(s+a,Math.PI),l=0,h=[],u=new Y,c=new Y,d=[],p=[],f=[],m=[];for(let $=0;$<=i;$++){let g=[],v=$/i,x=0;0===$&&0===s?x=.5/t:$===i&&o===Math.PI&&(x=-.5/t);for(let y=0;y<=t;y++){let S=y/t;u.x=-e*Math.cos(n+S*r)*Math.sin(s+v*a),u.y=e*Math.cos(s+v*a),u.z=e*Math.sin(n+S*r)*Math.sin(s+v*a),p.push(u.x,u.y,u.z),c.copy(u).normalize(),f.push(c.x,c.y,c.z),m.push(S+x,1-v),g.push(l++)}h.push(g)}for(let _=0;_<i;_++)for(let b=0;b<t;b++){let M=h[_][b+1],E=h[_][b],T=h[_+1][b],w=h[_+1][b+1];(0!==_||s>0)&&d.push(M,E,w),(_!==i-1||o<Math.PI)&&d.push(E,T,w)}this.setIndex(d),this.setAttribute("position",new t$(p,3)),this.setAttribute("normal",new t$(f,3)),this.setAttribute("uv",new t$(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ax(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class ay extends sB{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ay(e.radius,e.detail)}}class aS extends tb{constructor(e=1,t=.4,i=12,n=48,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:r},i=Math.floor(i),n=Math.floor(n);let s=[],a=[],o=[],l=[],h=new Y,u=new Y,c=new Y;for(let d=0;d<=i;d++)for(let p=0;p<=n;p++){let f=p/n*r,m=d/i*Math.PI*2;u.x=(e+t*Math.cos(m))*Math.cos(f),u.y=(e+t*Math.cos(m))*Math.sin(f),u.z=t*Math.sin(m),a.push(u.x,u.y,u.z),h.x=e*Math.cos(f),h.y=e*Math.sin(f),c.subVectors(u,h).normalize(),o.push(c.x,c.y,c.z),l.push(p/n),l.push(d/i)}for(let $=1;$<=i;$++)for(let g=1;g<=n;g++){let v=(n+1)*$+g-1,x=(n+1)*($-1)+g-1,y=(n+1)*($-1)+g,S=(n+1)*$+g;s.push(v,x,S),s.push(x,y,S)}this.setIndex(s),this.setAttribute("position",new t$(a,3)),this.setAttribute("normal",new t$(o,3)),this.setAttribute("uv",new t$(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new aS(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class a_ extends tb{constructor(e=1,t=.4,i=64,n=8,r=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:r,q:s},i=Math.floor(i),n=Math.floor(n);let a=[],o=[],l=[],h=[],u=new Y,c=new Y,d=new Y,p=new Y,f=new Y,m=new Y,$=new Y;for(let g=0;g<=i;++g){let v=g/i*r*Math.PI*2;R(v,r,s,e,d),R(v+.01,r,s,e,p),m.subVectors(p,d),$.addVectors(p,d),f.crossVectors(m,$),$.crossVectors(f,m),f.normalize(),$.normalize();for(let x=0;x<=n;++x){let y=x/n*Math.PI*2,S=-t*Math.cos(y),_=t*Math.sin(y);u.x=d.x+(S*$.x+_*f.x),u.y=d.y+(S*$.y+_*f.y),u.z=d.z+(S*$.z+_*f.z),o.push(u.x,u.y,u.z),c.subVectors(u,d).normalize(),l.push(c.x,c.y,c.z),h.push(g/i),h.push(x/n)}}for(let b=1;b<=i;b++)for(let M=1;M<=n;M++){let E=(n+1)*(b-1)+(M-1),T=(n+1)*b+(M-1),w=(n+1)*b+M,A=(n+1)*(b-1)+M;a.push(E,T,A),a.push(T,w,A)}function R(e,t,i,n,r){let s=i/t*e,a=Math.cos(s);r.x=n*(2+a)*.5*Math.cos(e),r.y=n*(2+a)*Math.sin(e)*.5,r.z=n*Math.sin(s)*.5}this.setIndex(a),this.setAttribute("position",new t$(o,3)),this.setAttribute("normal",new t$(l,3)),this.setAttribute("uv",new t$(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new a_(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class ab extends tb{constructor(e=new sL(new Y(-1,-1,0),new Y(-1,1,0),new Y(1,1,0)),t=64,i=1,n=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:r};let s=e.computeFrenetFrames(t,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;let a=new Y,o=new Y,l=new S,h=new Y,u=[],c=[],d=[],p=[];function f(r){h=e.getPointAt(r/t,h);let l=s.normals[r],d=s.binormals[r];for(let p=0;p<=n;p++){let f=p/n*Math.PI*2,m=Math.sin(f),$=-Math.cos(f);o.x=$*l.x+m*d.x,o.y=$*l.y+m*d.y,o.z=$*l.z+m*d.z,o.normalize(),c.push(o.x,o.y,o.z),a.x=h.x+i*o.x,a.y=h.y+i*o.y,a.z=h.z+i*o.z,u.push(a.x,a.y,a.z)}}(function e(){for(let i=0;i<t;i++)f(i);f(!1===r?t:0),function e(){for(let i=0;i<=t;i++)for(let r=0;r<=n;r++)l.x=i/t,l.y=r/n,d.push(l.x,l.y)}(),function e(){for(let i=1;i<=t;i++)for(let r=1;r<=n;r++){let s=(n+1)*(i-1)+(r-1),a=(n+1)*i+(r-1),o=(n+1)*i+r,l=(n+1)*(i-1)+r;p.push(s,a,l),p.push(a,o,l)}}()})(),this.setIndex(p),this.setAttribute("position",new t$(u,3)),this.setAttribute("normal",new t$(c,3)),this.setAttribute("uv",new t$(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new ab(new sP[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class aM extends tb{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){let t=[],i=new Set,n=new Y,r=new Y;if(null!==e.index){let s=e.attributes.position,a=e.index,o=e.groups;0===o.length&&(o=[{start:0,count:a.count,materialIndex:0}]);for(let l=0,h=o.length;l<h;++l){let u=o[l],c=u.start,d=u.count;for(let p=c,f=c+d;p<f;p+=3)for(let m=0;m<3;m++){let $=a.getX(p+m),g=a.getX(p+(m+1)%3);n.fromBufferAttribute(s,$),r.fromBufferAttribute(s,g),!0===aE(n,r,i)&&(t.push(n.x,n.y,n.z),t.push(r.x,r.y,r.z))}}}else{let v=e.attributes.position;for(let x=0,y=v.count/3;x<y;x++)for(let S=0;S<3;S++){let _=3*x+S,b=3*x+(S+1)%3;n.fromBufferAttribute(v,_),r.fromBufferAttribute(v,b),!0===aE(n,r,i)&&(t.push(n.x,n.y,n.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new t$(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function aE(e,t,i){let n=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`,r=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;return!0!==i.has(n)&&!0!==i.has(r)&&(i.add(n),i.add(r),!0)}var aT=Object.freeze({__proto__:null,BoxGeometry:tG,CapsuleGeometry:sD,CircleGeometry:sN,ConeGeometry:sO,CylinderGeometry:sF,DodecahedronGeometry:sz,EdgesGeometry:sV,ExtrudeGeometry:af,IcosahedronGeometry:a$,LatheGeometry:sU,OctahedronGeometry:ag,PlaneGeometry:ie,PolyhedronGeometry:sB,RingGeometry:av,ShapeGeometry:a8,SphereGeometry:ax,TetrahedronGeometry:ay,TorusGeometry:aS,TorusKnotGeometry:a_,TubeGeometry:ab,WireframeGeometry:aM});class aw extends te{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new ts(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class aA extends t3{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class aR extends te{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ts(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ts(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new S(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class aC extends aR{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new S(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return c(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new ts(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new ts(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new ts(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class aL extends te{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new ts(16777215),this.specular=new ts(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ts(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new S(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class a0 extends te{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ts(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ts(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new S(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class aP extends te{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new S(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class a1 extends te{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new ts(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ts(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new S(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class aI extends te{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ts(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new S(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class aU extends rZ{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function aD(e,t,i){return aF(e)?new e.constructor(e.subarray(t,void 0!==i?i:e.length)):e.slice(t,i)}function aN(e,t,i){return e&&(i||e.constructor!==t)?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e}function aF(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function aO(e){let t=e.length,i=Array(t);for(let n=0;n!==t;++n)i[n]=n;return i.sort(function t(i,n){return e[i]-e[n]}),i}function aB(e,t,i){let n=e.length,r=new e.constructor(n);for(let s=0,a=0;a!==n;++s){let o=i[s]*t;for(let l=0;l!==t;++l)r[a++]=e[o+l]}return r}function az(e,t,i,n){let r=1,s=e[0];for(;void 0!==s&&void 0===s[n];)s=e[r++];if(void 0===s)return;let a=s[n];if(void 0!==a){if(Array.isArray(a))do void 0!==(a=s[n])&&(t.push(s.time),i.push.apply(i,a)),s=e[r++];while(void 0!==s);else if(void 0!==a.toArray)do void 0!==(a=s[n])&&(t.push(s.time),a.toArray(i,i.length)),s=e[r++];while(void 0!==s);else do void 0!==(a=s[n])&&(t.push(s.time),i.push(a)),s=e[r++];while(void 0!==s)}}class aG{constructor(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){let t=this.parameterPositions,i=this._cachedIndex,n=t[i],r=t[i-1];validate_interval:{seek:{let s;linear_scan:{forward_scan:if(!(e<n)){for(let a=i+2;;){if(void 0===n){if(e<r)break forward_scan;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===a)break;if(r=n,e<(n=t[++i]))break seek}s=t.length;break linear_scan}if(!(e>=r)){let o=t[1];e<o&&(i=2,r=o);for(let l=i-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(n=r,e>=(r=t[--i-1]))break seek}s=i,i=0;break linear_scan}break validate_interval}for(;i<s;){let h=i+s>>>1;e<t[h]?s=h:i=h+1}if(n=t[i],void 0===(r=t[i-1]))return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===n)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){let t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=e*n;for(let s=0;s!==n;++s)t[s]=i[r+s];return t}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}class aH extends aG{constructor(e,t,i,n){super(e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,i){let n=this.parameterPositions,r=e-2,s=e+1,a=n[r],o=n[s];if(void 0===a)switch(this.getSettings_().endingStart){case 2401:r=e,a=2*t-i;break;case 2402:a=t+n[r=n.length-2]-n[r+1];break;default:r=e,a=i}if(void 0===o)switch(this.getSettings_().endingEnd){case 2401:s=e,o=2*i-t;break;case 2402:s=1,o=i+n[1]-n[0];break;default:s=e-1,o=t}let l=(i-t)*.5,h=this.valueSize;this._weightPrev=l/(t-a),this._weightNext=l/(o-i),this._offsetPrev=r*h,this._offsetNext=s*h}interpolate_(e,t,i,n){let r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,h=this._offsetPrev,u=this._offsetNext,c=this._weightPrev,d=this._weightNext,p=(i-t)/(n-t),f=p*p,m=f*p,$=-c*m+2*c*f-c*p,g=(1+c)*m+(-1.5-2*c)*f+(-.5+c)*p+1,v=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f;for(let y=0;y!==a;++y)r[y]=$*s[h+y]+g*s[l+y]+v*s[o+y]+x*s[u+y];return r}}class a2 extends aG{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){let r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,h=(i-t)/(n-t),u=1-h;for(let c=0;c!==a;++c)r[c]=s[l+c]*u+s[o+c]*h;return r}}class ak extends aG{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class aV{constructor(e,t,i,n){if(void 0===e)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=aN(t,this.TimeBufferType),this.values=aN(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){let t=e.constructor,i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:aN(e.times,Array),values:aN(e.values,Array)};let n=e.getInterpolation();n!==e.DefaultInterpolation&&(i.interpolation=n)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new ak(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new a2(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new aH(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case 2300:t=this.InterpolantFactoryMethodDiscrete;break;case 2301:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){let i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(i)}return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){let t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this}scale(e){if(1!==e){let t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this}trim(e,t){let i=this.times,n=i.length,r=0,s=n-1;for(;r!==n&&i[r]<e;)++r;for(;-1!==s&&i[s]>t;)--s;if(++s,0!==r||s!==n){r>=s&&(r=(s=Math.max(s,1))-1);let a=this.getValueSize();this.times=aD(i,r,s),this.values=aD(this.values,r*a,s*a)}return this}validate(){let e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);let i=this.times,n=this.values,r=i.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let s=null;for(let a=0;a!==r;a++){let o=i[a];if("number"==typeof o&&isNaN(o)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,o),e=!1;break}if(null!==s&&s>o){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,o,s),e=!1;break}s=o}if(void 0!==n&&aF(n))for(let l=0,h=n.length;l!==h;++l){let u=n[l];if(isNaN(u)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,u),e=!1;break}}return e}optimize(){let e=aD(this.times),t=aD(this.values),i=this.getValueSize(),n=2302===this.getInterpolation(),r=e.length-1,s=1;for(let a=1;a<r;++a){let o=!1,l=e[a],h=e[a+1];if(l!==h&&(1!==a||l!==e[0])){if(n)o=!0;else{let u=a*i,c=u-i,d=u+i;for(let p=0;p!==i;++p){let f=t[u+p];if(f!==t[c+p]||f!==t[d+p]){o=!0;break}}}}if(o){if(a!==s){e[s]=e[a];let m=a*i,$=s*i;for(let g=0;g!==i;++g)t[$+g]=t[m+g]}++s}}if(r>0){e[s]=e[r];for(let v=r*i,x=s*i,y=0;y!==i;++y)t[x+y]=t[v+y];++s}return s!==e.length?(this.times=aD(e,0,s),this.values=aD(t,0,s*i)):(this.times=e,this.values=t),this}clone(){let e=aD(this.times,0),t=aD(this.values,0),i=this.constructor,n=new i(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}aV.prototype.TimeBufferType=Float32Array,aV.prototype.ValueBufferType=Float32Array,aV.prototype.DefaultInterpolation=2301;class a3 extends aV{}a3.prototype.ValueTypeName="bool",a3.prototype.ValueBufferType=Array,a3.prototype.DefaultInterpolation=2300,a3.prototype.InterpolantFactoryMethodLinear=void 0,a3.prototype.InterpolantFactoryMethodSmooth=void 0;class aW extends aV{}aW.prototype.ValueTypeName="color";class a6 extends aV{}a6.prototype.ValueTypeName="number";class a4 extends aG{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){let r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(i-t)/(n-t),l=e*a;for(let h=l+a;l!==h;l+=4)q.slerpFlat(r,0,s,l-a,s,l,o);return r}}class aX extends aV{InterpolantFactoryMethodLinear(e){return new a4(this.times,this.values,this.getValueSize(),e)}}aX.prototype.ValueTypeName="quaternion",aX.prototype.DefaultInterpolation=2301,aX.prototype.InterpolantFactoryMethodSmooth=void 0;class a7 extends aV{}a7.prototype.ValueTypeName="string",a7.prototype.ValueBufferType=Array,a7.prototype.DefaultInterpolation=2300,a7.prototype.InterpolantFactoryMethodLinear=void 0,a7.prototype.InterpolantFactoryMethodSmooth=void 0;class a5 extends aV{}a5.prototype.ValueTypeName="vector";class aj{constructor(e,t=-1,i,n=2500){this.name=e,this.tracks=i,this.duration=t,this.blendMode=n,this.uuid=u(),this.duration<0&&this.resetDuration()}static parse(e){let t=[],i=e.tracks,n=1/(e.fps||1);for(let r=0,s=i.length;r!==s;++r)t.push(aq(i[r]).scale(n));let a=new this(e.name,e.duration,t,e.blendMode);return a.uuid=e.uuid,a}static toJSON(e){let t=[],i=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,s=i.length;r!==s;++r)t.push(aV.toJSON(i[r]));return n}static CreateFromMorphTargetSequence(e,t,i,n){let r=t.length,s=[];for(let a=0;a<r;a++){let o=[],l=[];o.push((a+r-1)%r,a,(a+1)%r),l.push(0,1,0);let h=aO(o);o=aB(o,1,h),l=aB(l,1,h),n||0!==o[0]||(o.push(r),l.push(l[0])),s.push(new a6(".morphTargetInfluences["+t[a].name+"]",o,l).scale(1/i))}return new this(e,-1,s)}static findByName(e,t){let i=e;if(!Array.isArray(e)){let n=e;i=n.geometry&&n.geometry.animations||n.animations}for(let r=0;r<i.length;r++)if(i[r].name===t)return i[r];return null}static CreateClipsFromMorphTargetSequences(e,t,i){let n={},r=/^([\w-]*?)([\d]+)$/;for(let s=0,a=e.length;s<a;s++){let o=e[s],l=o.name.match(r);if(l&&l.length>1){let h=l[1],u=n[h];u||(n[h]=u=[]),u.push(o)}}let c=[];for(let d in n)c.push(this.CreateFromMorphTargetSequence(d,n[d],t,i));return c}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;let i=function(e,t,i,n,r){if(0!==i.length){let s=[],a=[];az(i,s,a,n),0!==s.length&&r.push(new e(t,s,a))}},n=[],r=e.name||"default",s=e.fps||30,a=e.blendMode,o=e.length||-1,l=e.hierarchy||[];for(let h=0;h<l.length;h++){let u=l[h].keys;if(u&&0!==u.length){if(u[0].morphTargets){let c={},d;for(d=0;d<u.length;d++)if(u[d].morphTargets)for(let p=0;p<u[d].morphTargets.length;p++)c[u[d].morphTargets[p]]=-1;for(let f in c){let m=[],$=[];for(let g=0;g!==u[d].morphTargets.length;++g){let v=u[d];m.push(v.time),$.push(v.morphTarget===f?1:0)}n.push(new a6(".morphTargetInfluence["+f+"]",m,$))}o=c.length*s}else{let x=".bones["+t[h].name+"]";i(a5,x+".position",u,"pos",n),i(aX,x+".quaternion",u,"rot",n),i(a5,x+".scale",u,"scl",n)}}}if(0===n.length)return null;let y=new this(r,o,n,a);return y}resetDuration(){let e=this.tracks,t=0;for(let i=0,n=e.length;i!==n;++i){let r=this.tracks[i];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){let e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function aq(e){if(void 0===e.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");let t=function e(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return a6;case"vector":case"vector2":case"vector3":case"vector4":return a5;case"color":return aW;case"quaternion":return aX;case"bool":case"boolean":return a3;case"string":return a7}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(e.type);if(void 0===e.times){let i=[],n=[];az(e.keys,i,n,"value"),e.times=i,e.values=n}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}let aY={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class aZ{constructor(e,t,i){let n=this,r=!1,s=0,a=0,o,l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(e){a++,!1===r&&void 0!==n.onStart&&n.onStart(e,s,a),r=!0},this.itemEnd=function(e){s++,void 0!==n.onProgress&&n.onProgress(e,s,a),s===a&&(r=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)},this.resolveURL=function(e){return o?o(e):e},this.setURLModifier=function(e){return o=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){let t=l.indexOf(e);return -1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,i=l.length;t<i;t+=2){let n=l[t],r=l[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return r}return null}}}let aJ=new aZ;class aK{constructor(e){this.manager=void 0!==e?e:aJ,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){let i=this;return new Promise(function(n,r){i.load(e,n,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}let a9={};class aQ extends Error{constructor(e,t){super(e),this.response=t}}class oe extends aK{constructor(e){super(e)}load(e,t,i,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=aY.get(e);if(void 0!==r)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(void 0!==a9[e]){a9[e].push({onLoad:t,onProgress:i,onError:n});return}a9[e]=[],a9[e].push({onLoad:t,onProgress:i,onError:n});let s=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,o=this.responseType;fetch(s).then(t=>{if(200===t.status||0===t.status){if(0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===t.body||void 0===t.body.getReader)return t;let i=a9[e],n=t.body.getReader(),r=t.headers.get("Content-Length")||t.headers.get("X-File-Size"),s=r?parseInt(r):0,a=0!==s,o=0,l=new ReadableStream({start(e){(function t(){n.read().then(({done:n,value:r})=>{if(n)e.close();else{o+=r.byteLength;let l=new ProgressEvent("progress",{lengthComputable:a,loaded:o,total:s});for(let h=0,u=i.length;h<u;h++){let c=i[h];c.onProgress&&c.onProgress(l)}e.enqueue(r),t()}})})()}});return new Response(l)}throw new aQ(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`,t)}).then(e=>{switch(o){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then(e=>{let t=new DOMParser;return t.parseFromString(e,a)});case"json":return e.json();default:if(void 0===a)return e.text();{let t=/charset="?([^;"\s]*)"?/i.exec(a),i=t&&t[1]?t[1].toLowerCase():void 0,n=new TextDecoder(i);return e.arrayBuffer().then(e=>n.decode(e))}}}).then(t=>{aY.add(e,t);let i=a9[e];delete a9[e];for(let n=0,r=i.length;n<r;n++){let s=i[n];s.onLoad&&s.onLoad(t)}}).catch(t=>{let i=a9[e];if(void 0===i)throw this.manager.itemError(e),t;delete a9[e];for(let n=0,r=i.length;n<r;n++){let s=i[n];s.onError&&s.onError(t)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class ot extends aK{constructor(e){super(e)}load(e,t,i,n){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=this,s=aY.get(e);if(void 0!==s)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;let a=w("img");function o(){h(),aY.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(t){h(),n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)}function h(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(e),a.src=e,a}}class oi extends eW{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new ts(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){let t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}class on extends oi{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(eW.DEFAULT_UP),this.updateMatrix(),this.groundColor=new ts(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}let or=new eM,os=new Y,oa=new Y;class oo{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new S(512,512),this.map=null,this.mapPass=null,this.matrix=new eM,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new tK,this._frameExtents=new S(1,1),this._viewportCount=1,this._viewports=[new V(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){let t=this.camera,i=this.matrix;os.setFromMatrixPosition(e.matrixWorld),t.position.copy(os),oa.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(oa),t.updateMatrixWorld(),or.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(or),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(or)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class ol extends oi{constructor(e,t,i=0,n=Math.PI/3,r=0,s=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(eW.DEFAULT_UP),this.updateMatrix(),this.target=new eW,this.distance=i,this.angle=n,this.penumbra=r,this.decay=s,this.map=null,this.shadow=new class e extends oo{constructor(){super(new t6(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){let t=this.camera,i=2*h*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(i!==t.fov||n!==t.aspect||r!==t.far)&&(t.fov=i,t.aspect=n,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}let oh=new eM,ou=new Y,oc=new Y;class od extends oi{constructor(e,t,i=0,n=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new class e extends oo{constructor(){super(new t6(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new S(4,2),this._viewportCount=6,this._viewports=[new V(2,1,1,1),new V(0,1,1,1),new V(3,1,1,1),new V(1,1,1,1),new V(3,0,1,1),new V(1,0,1,1)],this._cubeDirections=[new Y(1,0,0),new Y(-1,0,0),new Y(0,0,1),new Y(0,0,-1),new Y(0,1,0),new Y(0,-1,0)],this._cubeUps=[new Y(0,1,0),new Y(0,1,0),new Y(0,1,0),new Y(0,1,0),new Y(0,0,1),new Y(0,0,-1)]}updateMatrices(e,t=0){let i=this.camera,n=this.matrix,r=e.distance||i.far;r!==i.far&&(i.far=r,i.updateProjectionMatrix()),ou.setFromMatrixPosition(e.matrixWorld),i.position.copy(ou),oc.copy(i.position),oc.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(oc),i.updateMatrixWorld(),n.makeTranslation(-ou.x,-ou.y,-ou.z),oh.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(oh)}}}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class op extends oi{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(eW.DEFAULT_UP),this.updateMatrix(),this.target=new eW,this.shadow=new class e extends oo{constructor(){super(new id(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class of extends oi{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class om extends oi{constructor(e,t,i=10,n=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){let t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class o${constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new Y)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){let i=e.x,n=e.y,r=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.282095),t.addScaledVector(s[1],.488603*n),t.addScaledVector(s[2],.488603*r),t.addScaledVector(s[3],.488603*i),t.addScaledVector(s[4],1.092548*(i*n)),t.addScaledVector(s[5],1.092548*(n*r)),t.addScaledVector(s[6],.315392*(3*r*r-1)),t.addScaledVector(s[7],1.092548*(i*r)),t.addScaledVector(s[8],.546274*(i*i-n*n)),t}getIrradianceAt(e,t){let i=e.x,n=e.y,r=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.886227),t.addScaledVector(s[1],1.023328*n),t.addScaledVector(s[2],1.023328*r),t.addScaledVector(s[3],1.023328*i),t.addScaledVector(s[4],.858086*i*n),t.addScaledVector(s[5],.858086*n*r),t.addScaledVector(s[6],.743125*r*r-.247708),t.addScaledVector(s[7],.858086*i*r),t.addScaledVector(s[8],.429043*(i*i-n*n)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){let i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(e,t+3*n);return this}toArray(e=[],t=0){let i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(e,t+3*n);return e}static getBasisAt(e,t){let i=e.x,n=e.y,r=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*r,t[3]=.488603*i,t[4]=1.092548*i*n,t[5]=1.092548*n*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*i*r,t[8]=.546274*(i*i-n*n)}}class og extends oi{constructor(e=new o$,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){let t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class ov extends aK{constructor(e){super(e),this.textures={}}load(e,t,i,n){let r=this,s=new oe(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(i){try{t(r.parse(JSON.parse(i)))}catch(s){n?n(s):console.error(s),r.manager.itemError(e)}},i,n)}parse(e){let t=this.textures;function i(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}let n=ov.createMaterialFromType(e.type);if(void 0!==e.uuid&&(n.uuid=e.uuid),void 0!==e.name&&(n.name=e.name),void 0!==e.color&&void 0!==n.color&&n.color.setHex(e.color),void 0!==e.roughness&&(n.roughness=e.roughness),void 0!==e.metalness&&(n.metalness=e.metalness),void 0!==e.sheen&&(n.sheen=e.sheen),void 0!==e.sheenColor&&(n.sheenColor=new ts().setHex(e.sheenColor)),void 0!==e.sheenRoughness&&(n.sheenRoughness=e.sheenRoughness),void 0!==e.emissive&&void 0!==n.emissive&&n.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==n.specular&&n.specular.setHex(e.specular),void 0!==e.specularIntensity&&(n.specularIntensity=e.specularIntensity),void 0!==e.specularColor&&void 0!==n.specularColor&&n.specularColor.setHex(e.specularColor),void 0!==e.shininess&&(n.shininess=e.shininess),void 0!==e.clearcoat&&(n.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(n.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.iridescence&&(n.iridescence=e.iridescence),void 0!==e.iridescenceIOR&&(n.iridescenceIOR=e.iridescenceIOR),void 0!==e.iridescenceThicknessRange&&(n.iridescenceThicknessRange=e.iridescenceThicknessRange),void 0!==e.transmission&&(n.transmission=e.transmission),void 0!==e.thickness&&(n.thickness=e.thickness),void 0!==e.attenuationDistance&&(n.attenuationDistance=e.attenuationDistance),void 0!==e.attenuationColor&&void 0!==n.attenuationColor&&n.attenuationColor.setHex(e.attenuationColor),void 0!==e.anisotropy&&(n.anisotropy=e.anisotropy),void 0!==e.anisotropyRotation&&(n.anisotropyRotation=e.anisotropyRotation),void 0!==e.fog&&(n.fog=e.fog),void 0!==e.flatShading&&(n.flatShading=e.flatShading),void 0!==e.blending&&(n.blending=e.blending),void 0!==e.combine&&(n.combine=e.combine),void 0!==e.side&&(n.side=e.side),void 0!==e.shadowSide&&(n.shadowSide=e.shadowSide),void 0!==e.opacity&&(n.opacity=e.opacity),void 0!==e.transparent&&(n.transparent=e.transparent),void 0!==e.alphaTest&&(n.alphaTest=e.alphaTest),void 0!==e.depthTest&&(n.depthTest=e.depthTest),void 0!==e.depthWrite&&(n.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(n.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(n.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(n.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(n.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(n.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(n.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(n.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(n.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(n.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(n.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(n.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(n.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(n.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(n.rotation=e.rotation),1!==e.linewidth&&(n.linewidth=e.linewidth),void 0!==e.dashSize&&(n.dashSize=e.dashSize),void 0!==e.gapSize&&(n.gapSize=e.gapSize),void 0!==e.scale&&(n.scale=e.scale),void 0!==e.polygonOffset&&(n.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(n.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(n.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.dithering&&(n.dithering=e.dithering),void 0!==e.alphaToCoverage&&(n.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(n.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.forceSinglePass&&(n.forceSinglePass=e.forceSinglePass),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.toneMapped&&(n.toneMapped=e.toneMapped),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?n.vertexColors=e.vertexColors>0:n.vertexColors=e.vertexColors),void 0!==e.uniforms)for(let r in e.uniforms){let s=e.uniforms[r];switch(n.uniforms[r]={},s.type){case"t":n.uniforms[r].value=i(s.value);break;case"c":n.uniforms[r].value=new ts().setHex(s.value);break;case"v2":n.uniforms[r].value=new S().fromArray(s.value);break;case"v3":n.uniforms[r].value=new Y().fromArray(s.value);break;case"v4":n.uniforms[r].value=new V().fromArray(s.value);break;case"m3":n.uniforms[r].value=new _().fromArray(s.value);break;case"m4":n.uniforms[r].value=new eM().fromArray(s.value);break;default:n.uniforms[r].value=s.value}}if(void 0!==e.defines&&(n.defines=e.defines),void 0!==e.vertexShader&&(n.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(n.fragmentShader=e.fragmentShader),void 0!==e.glslVersion&&(n.glslVersion=e.glslVersion),void 0!==e.extensions)for(let a in e.extensions)n.extensions[a]=e.extensions[a];if(void 0!==e.lights&&(n.lights=e.lights),void 0!==e.clipping&&(n.clipping=e.clipping),void 0!==e.size&&(n.size=e.size),void 0!==e.sizeAttenuation&&(n.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(n.map=i(e.map)),void 0!==e.matcap&&(n.matcap=i(e.matcap)),void 0!==e.alphaMap&&(n.alphaMap=i(e.alphaMap)),void 0!==e.bumpMap&&(n.bumpMap=i(e.bumpMap)),void 0!==e.bumpScale&&(n.bumpScale=e.bumpScale),void 0!==e.normalMap&&(n.normalMap=i(e.normalMap)),void 0!==e.normalMapType&&(n.normalMapType=e.normalMapType),void 0!==e.normalScale){let o=e.normalScale;!1===Array.isArray(o)&&(o=[o,o]),n.normalScale=new S().fromArray(o)}return void 0!==e.displacementMap&&(n.displacementMap=i(e.displacementMap)),void 0!==e.displacementScale&&(n.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(n.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(n.roughnessMap=i(e.roughnessMap)),void 0!==e.metalnessMap&&(n.metalnessMap=i(e.metalnessMap)),void 0!==e.emissiveMap&&(n.emissiveMap=i(e.emissiveMap)),void 0!==e.emissiveIntensity&&(n.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(n.specularMap=i(e.specularMap)),void 0!==e.specularIntensityMap&&(n.specularIntensityMap=i(e.specularIntensityMap)),void 0!==e.specularColorMap&&(n.specularColorMap=i(e.specularColorMap)),void 0!==e.envMap&&(n.envMap=i(e.envMap)),void 0!==e.envMapIntensity&&(n.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(n.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(n.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(n.lightMap=i(e.lightMap)),void 0!==e.lightMapIntensity&&(n.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(n.aoMap=i(e.aoMap)),void 0!==e.aoMapIntensity&&(n.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(n.gradientMap=i(e.gradientMap)),void 0!==e.clearcoatMap&&(n.clearcoatMap=i(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(n.clearcoatNormalMap=i(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(n.clearcoatNormalScale=new S().fromArray(e.clearcoatNormalScale)),void 0!==e.iridescenceMap&&(n.iridescenceMap=i(e.iridescenceMap)),void 0!==e.iridescenceThicknessMap&&(n.iridescenceThicknessMap=i(e.iridescenceThicknessMap)),void 0!==e.transmissionMap&&(n.transmissionMap=i(e.transmissionMap)),void 0!==e.thicknessMap&&(n.thicknessMap=i(e.thicknessMap)),void 0!==e.anisotropyMap&&(n.anisotropyMap=i(e.anisotropyMap)),void 0!==e.sheenColorMap&&(n.sheenColorMap=i(e.sheenColorMap)),void 0!==e.sheenRoughnessMap&&(n.sheenRoughnessMap=i(e.sheenRoughnessMap)),n}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){return new({ShadowMaterial:aw,SpriteMaterial:r$,RawShaderMaterial:aA,ShaderMaterial:t3,PointsMaterial:sa,MeshPhysicalMaterial:aC,MeshStandardMaterial:aR,MeshPhongMaterial:aL,MeshToonMaterial:a0,MeshNormalMaterial:aP,MeshLambertMaterial:a1,MeshDepthMaterial:nZ,MeshDistanceMaterial:nJ,MeshBasicMaterial:to,MeshMatcapMaterial:aI,LineDashedMaterial:aU,LineBasicMaterial:rZ,Material:te})[e]}}class o8{static decodeText(e){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(e);let t="";for(let i=0,n=e.length;i<n;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch(r){return t}}static extractUrlBase(e){let t=e.lastIndexOf("/");return -1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e))?e:t+e}}class ox extends tb{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){let e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class oy extends aK{constructor(e){super(e)}load(e,t,i,n){let r=this,s=new oe(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(i){try{t(r.parse(JSON.parse(i)))}catch(s){n?n(s):console.error(s),r.manager.itemError(e)}},i,n)}parse(e){let t={},i={};function n(e,n){if(void 0!==t[n])return t[n];let r=e.interleavedBuffers,s=r[n],a=function e(t,n){if(void 0!==i[n])return i[n];let r=t.arrayBuffers,s=r[n],a=new Uint32Array(s).buffer;return i[n]=a,a}(e,s.buffer),o=T(s.type,a),l=new rp(o,s.stride);return l.uuid=s.uuid,t[n]=l,l}let r=e.isInstancedBufferGeometry?new ox:new tb,s=e.data.index;if(void 0!==s){let a=T(s.type,s.array);r.setIndex(new tp(a,1))}let o=e.data.attributes;for(let l in o){let h=o[l],u;if(h.isInterleavedBufferAttribute){let c=n(e.data,h.data);u=new rm(c,h.itemSize,h.offset,h.normalized)}else{let d=T(h.type,h.array),p=h.isInstancedBufferAttribute?rW:tp;u=new p(d,h.itemSize,h.normalized)}void 0!==h.name&&(u.name=h.name),void 0!==h.usage&&u.setUsage(h.usage),void 0!==h.updateRange&&(u.updateRange.offset=h.updateRange.offset,u.updateRange.count=h.updateRange.count),r.setAttribute(l,u)}let f=e.data.morphAttributes;if(f)for(let m in f){let $=f[m],g=[];for(let v=0,x=$.length;v<x;v++){let y=$[v],S;if(y.isInterleavedBufferAttribute){let _=n(e.data,y.data);S=new rm(_,y.itemSize,y.offset,y.normalized)}else{let b=T(y.type,y.array);S=new tp(b,y.itemSize,y.normalized)}void 0!==y.name&&(S.name=y.name),g.push(S)}r.morphAttributes[m]=g}let M=e.data.morphTargetsRelative;M&&(r.morphTargetsRelative=!0);let E=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==E)for(let w=0,A=E.length;w!==A;++w){let R=E[w];r.addGroup(R.start,R.count,R.materialIndex)}let C=e.data.boundingSphere;if(void 0!==C){let L=new Y;void 0!==C.center&&L.fromArray(C.center),r.boundingSphere=new e$(L,C.radius)}return e.name&&(r.name=e.name),e.userData&&(r.userData=e.userData),r}}let oS={UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,CubeUVReflectionMapping:306},o_={RepeatWrapping:1e3,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002},ob={NearestFilter:1003,NearestMipmapNearestFilter:1004,NearestMipmapLinearFilter:1005,LinearFilter:1006,LinearMipmapNearestFilter:1007,LinearMipmapLinearFilter:1008},oM;class oE{static getContext(){return void 0===oM&&(oM=new(window.AudioContext||window.webkitAudioContext)),oM}static setContext(e){oM=e}}let oT=new eM,ow=new eM,oA=new eM;class oR{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=oC(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){let t=oC();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function oC(){return("undefined"==typeof performance?Date:performance).now()}let oL=new Y,o0=new q,oP=new Y,o1=new Y;class oI extends eW{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying){console.warn("THREE.Audio: Audio is already playing.");return}if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;let t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,null!==this.source&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}let oU=new Y,oD=new q,oN=new Y,oF=new Y;class oO{constructor(e,t,i){this.binding=e,this.valueSize=i;let n,r,s;switch(t){case"quaternion":n=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":n=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=Array(5*i);break;default:n=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){let i=this.buffer,n=this.valueSize,r=e*n+n,s=this.cumulativeWeight;if(0===s){for(let a=0;a!==n;++a)i[r+a]=i[a];s=t}else{s+=t;let o=t/s;this._mixBufferRegion(i,r,0,o,n)}this.cumulativeWeight=s}accumulateAdditive(e){let t=this.buffer,i=this.valueSize,n=i*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){let t=this.valueSize,i=this.buffer,n=e*t+t,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){let o=t*this._origIndex;this._mixBufferRegion(i,n,o,1-r,t)}s>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*t,1,t);for(let l=t,h=t+t;l!==h;++l)if(i[l]!==i[l+t]){a.setValue(i,n);break}}saveOriginalState(){let e=this.binding,t=this.buffer,i=this.valueSize,n=i*this._origIndex;e.getValue(t,n);for(let r=i,s=n;r!==s;++r)t[r]=t[n+r%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){let e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){let e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){let e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,n,r){if(n>=.5)for(let s=0;s!==r;++s)e[t+s]=e[i+s]}_slerp(e,t,i,n){q.slerpFlat(e,t,e,t,e,i,n)}_slerpAdditive(e,t,i,n,r){let s=this._workIndex*r;q.multiplyQuaternionsFlat(e,s,e,t,e,i),q.slerpFlat(e,t,e,t,e,s,n)}_lerp(e,t,i,n,r){let s=1-n;for(let a=0;a!==r;++a){let o=t+a;e[o]=e[o]*s+e[i+a]*n}}_lerpAdditive(e,t,i,n,r){for(let s=0;s!==r;++s){let a=t+s;e[a]=e[a]+e[i+s]*n}}}let oB="\\[\\]\\.:\\/",oz=RegExp("["+oB+"]","g"),oG="[^"+oB+"]",oH="[^"+oB.replace("\\.","")+"]",o2=/((?:WC+[\/:])*)/.source.replace("WC",oG),ok=/(WCOD+)?/.source.replace("WCOD",oH),oV=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",oG),o3=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",oG),oW=RegExp("^"+o2+ok+oV+o3+"$"),o6=["material","materials","bones","map"];class o4{constructor(e,t,i){this.path=t,this.parsedPath=i||o4.parseTrackName(t),this.node=o4.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new o4.Composite(e,t,i):new o4(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(oz,"")}static parseTrackName(e){let t=oW.exec(e);if(null===t)throw Error("PropertyBinding: Cannot parse trackName: "+e);let i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){let r=i.nodeName.substring(n+1);-1!==o6.indexOf(r)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=r)}if(null===i.propertyName||0===i.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){let i=e.skeleton.getBoneByName(t);if(void 0!==i)return i}if(e.children){let n=function(e){for(let i=0;i<e.length;i++){let r=e[i];if(r.name===t||r.uuid===t)return r;let s=n(r.children);if(s)return s}return null},r=n(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)e[t++]=i[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node,t=this.parsedPath,i=t.objectName,n=t.propertyName,r=t.propertyIndex;if(e||(e=o4.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(i){let s=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let a=0;a<e.length;a++)if(e[a].name===s){s=a;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(void 0===e[i]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(void 0!==s){if(void 0===e[s]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[s]}}let o=e[n];if(void 0===o){let l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+n+" but it wasn't found.",e);return}let h=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?h=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(h=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==e.morphTargetDictionary[r]&&(r=e.morphTargetDictionary[r])}u=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else void 0!==o.fromArray&&void 0!==o.toArray?(u=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(u=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=n;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][h]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}o4.Composite=class e{constructor(e,t,i){let n=i||o4.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();let i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(e,t)}setValue(e,t){let i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(e,t)}bind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}},o4.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},o4.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},o4.prototype.GetterByBindingType=[o4.prototype._getValue_direct,o4.prototype._getValue_array,o4.prototype._getValue_arrayElement,o4.prototype._getValue_toArray,],o4.prototype.SetterByBindingTypeAndVersioning=[[o4.prototype._setValue_direct,o4.prototype._setValue_direct_setNeedsUpdate,o4.prototype._setValue_direct_setMatrixWorldNeedsUpdate,],[o4.prototype._setValue_array,o4.prototype._setValue_array_setNeedsUpdate,o4.prototype._setValue_array_setMatrixWorldNeedsUpdate,],[o4.prototype._setValue_arrayElement,o4.prototype._setValue_arrayElement_setNeedsUpdate,o4.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,],[o4.prototype._setValue_fromArray,o4.prototype._setValue_fromArray_setNeedsUpdate,o4.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,]];class oX{constructor(e,t,i=null,n=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=n;let r=t.tracks,s=r.length,a=Array(s),o={endingStart:2400,endingEnd:2400};for(let l=0;l!==s;++l){let h=r[l].createInterpolant(null);a[l]=h,h.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){let n=this._clip.duration,r=e._clip.duration;e.warp(1,r/n,t),this.warp(n/r,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){let e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){let n=this._mixer,r=n.time,s=this.timeScale,a=this._timeScaleInterpolant;null===a&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);let o=a.parameterPositions,l=a.sampleValues;return o[0]=r,o[1]=r+i,l[0]=e/s,l[1]=t/s,this}stopWarping(){let e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,n){if(!this.enabled){this._updateWeight(e);return}let r=this._startTime;if(null!==r){let s=(e-r)*i;s<0||0===i?t=0:(this._startTime=null,t=i*s)}t*=this._updateTimeScale(e);let a=this._updateTime(t),o=this._updateWeight(e);if(o>0){let l=this._interpolants,h=this._propertyBindings;if(2501===this.blendMode)for(let u=0,c=l.length;u!==c;++u)l[u].evaluate(a),h[u].accumulateAdditive(o);else for(let d=0,p=l.length;d!==p;++d)l[d].evaluate(a),h[d].accumulate(n,o)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;let i=this._weightInterpolant;if(null!==i){let n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;let i=this._timeScaleInterpolant;if(null!==i){let n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){let t=this._clip.duration,i=this.loop,n=this.time+e,r=this._loopCount,s=2202===i;if(0===e)return -1===r?n:s&&(1&r)==1?t-n:n;if(2200===i){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(n>=t)n=t;else if(n<0)n=0;else{this.time=n;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===r&&(e>=0?(r=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),n>=t||n<0){let a=Math.floor(n/t);n-=t*a,r+=Math.abs(a);let o=this.repetitions-r;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=e>0?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===o){let l=e<0;this._setEndings(l,!l,s)}else this._setEndings(!1,!1,s);this._loopCount=r,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=n;if(s&&(1&r)==1)return t-n}return n}_setEndings(e,t,i){let n=this._interpolantSettings;i?(n.endingStart=2401,n.endingEnd=2401):(e?n.endingStart=this.zeroSlopeAtStart?2401:2400:n.endingStart=2402,t?n.endingEnd=this.zeroSlopeAtEnd?2401:2400:n.endingEnd=2402)}_scheduleFading(e,t,i){let n=this._mixer,r=n.time,s=this._weightInterpolant;null===s&&(s=n._lendControlInterpolant(),this._weightInterpolant=s);let a=s.parameterPositions,o=s.sampleValues;return a[0]=r,o[0]=t,a[1]=r+e,o[1]=i,this}}let o7=new Float32Array(1);class o5{constructor(e){this.value=e}clone(){return new o5(void 0===this.value.clone?this.value:this.value.clone())}}let oj=0;function oq(e,t){return e.distance-t.distance}function oY(e,t,i,n){if(e.layers.test(t.layers)&&e.raycast(t,i),!0===n){let r=e.children;for(let s=0,a=r.length;s<a;s++)oY(r[s],t,i,!0)}}let oZ=new S,oJ=new Y,oK=new Y,o9=new Y,oQ=new Y,le=new eM,lt=new eM,li=new Y,ln=new ts,lr=new ts,ls=new Y,la=new Y,lo=new Y,ll=new Y,lh=new tW;function lu(e,t,i,n,r,s,a){ll.set(r,s,a).unproject(n);let o=t[e];if(void 0!==o){let l=i.getAttribute("position");for(let h=0,u=o.length;h<u;h++)l.setXYZ(o[h],ll.x,ll.y,ll.z)}}let lc=new K,ld=new Y,lp,lf;"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"153"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="153"),e.ACESFilmicToneMapping=4,e.AddEquation=100,e.AddOperation=2,e.AdditiveAnimationBlendMode=2501,e.AdditiveBlending=2,e.AlphaFormat=1021,e.AlwaysCompare=519,e.AlwaysDepth=1,e.AlwaysStencilFunc=519,e.AmbientLight=of,e.AmbientLightProbe=class e extends og{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;let i=new ts().set(e);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}},e.AnimationAction=oX,e.AnimationClip=aj,e.AnimationLoader=class e extends aK{constructor(e){super(e)}load(e,t,i,n){let r=this,s=new oe(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(i){try{t(r.parse(JSON.parse(i)))}catch(s){n?n(s):console.error(s),r.manager.itemError(e)}},i,n)}parse(e){let t=[];for(let i=0;i<e.length;i++){let n=aj.parse(e[i]);t.push(n)}return t}},e.AnimationMixer=class e extends s{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){let i=e._localRoot||this._root,n=e._clip.tracks,r=n.length,s=e._propertyBindings,a=e._interpolants,o=i.uuid,l=this._bindingsByRootAndName,h=l[o];void 0===h&&(h={},l[o]=h);for(let u=0;u!==r;++u){let c=n[u],d=c.name,p=h[d];if(void 0!==p)++p.referenceCount,s[u]=p;else{if(void 0!==(p=s[u])){null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,o,d));continue}let f=t&&t._propertyBindings[u].binding.parsedPath;p=new oO(o4.create(i,d,f),c.ValueTypeName,c.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,o,d),s[u]=p}a[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){let t=(e._localRoot||this._root).uuid,i=e._clip.uuid,n=this._actionsByClip[i];this._bindAction(e,n&&n.knownActions[0]),this._addInactiveAction(e,i,t)}let r=e._propertyBindings;for(let s=0,a=r.length;s!==a;++s){let o=r[s];0==o.useCount++&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){let t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){let r=t[i];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0,this.stats={actions:{get total(){return this._actions.length},get inUse(){return this._nActiveActions}},bindings:{get total(){return this._bindings.length},get inUse(){return this._nActiveBindings}},controlInterpolants:{get total(){return this._controlInterpolants.length},get inUse(){return this._nActiveControlInterpolants}}}}_isActiveAction(e){let t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,i){let n=this._actions,r=this._actionsByClip,s=r[t];if(void 0===s)s={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=s;else{let a=s.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=n.length,n.push(e),s.actionByRoot[i]=e}_removeInactiveAction(e){let t=this._actions,i=t[t.length-1],n=e._cacheIndex;i._cacheIndex=n,t[n]=i,t.pop(),e._cacheIndex=null;let r=e._clip.uuid,s=this._actionsByClip,a=s[r],o=a.knownActions,l=o[o.length-1],h=e._byClipCacheIndex;l._byClipCacheIndex=h,o[h]=l,o.pop(),e._byClipCacheIndex=null;let u=a.actionByRoot,c=(e._localRoot||this._root).uuid;delete u[c],0===o.length&&delete s[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){let t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){let r=t[i];0==--r.referenceCount&&this._removeInactiveBinding(r)}}_lendAction(e){let t=this._actions,i=e._cacheIndex,n=this._nActiveActions++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_takeBackAction(e){let t=this._actions,i=e._cacheIndex,n=--this._nActiveActions,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_addInactiveBinding(e,t,i){let n=this._bindingsByRootAndName,r=this._bindings,s=n[t];void 0===s&&(s={},n[t]=s),s[i]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){let t=this._bindings,i=e.binding,n=i.rootNode.uuid,r=i.path,s=this._bindingsByRootAndName,a=s[n],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete a[r],0===Object.keys(a).length&&delete s[n]}_lendBinding(e){let t=this._bindings,i=e._cacheIndex,n=this._nActiveBindings++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_takeBackBinding(e){let t=this._bindings,i=e._cacheIndex,n=--this._nActiveBindings,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_lendControlInterpolant(){let e=this._controlInterpolants,t=this._nActiveControlInterpolants++,i=e[t];return void 0===i&&((i=new a2(new Float32Array(2),new Float32Array(2),1,o7)).__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){let t=this._controlInterpolants,i=e.__cacheIndex,n=--this._nActiveControlInterpolants,r=t[n];e.__cacheIndex=n,t[n]=e,r.__cacheIndex=i,t[i]=r}clipAction(e,t,i){let n=t||this._root,r=n.uuid,s="string"==typeof e?aj.findByName(n,e):e,a=null!==s?s.uuid:e,o=this._actionsByClip[a],l=null;if(void 0===i&&(i=null!==s?s.blendMode:2500),void 0!==o){let h=o.actionByRoot[r];if(void 0!==h&&h.blendMode===i)return h;l=o.knownActions[0],null===s&&(s=l._clip)}if(null===s)return null;let u=new oX(this,s,t,i);return this._bindAction(u,l),this._addInactiveAction(u,a,r),u}existingAction(e,t){let i=t||this._root,n=i.uuid,r="string"==typeof e?aj.findByName(i,e):e,s=r?r.uuid:e,a=this._actionsByClip[s];return void 0!==a&&a.actionByRoot[n]||null}stopAllAction(){let e=this._actions,t=this._nActiveActions;for(let i=t-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;let t=this._actions,i=this._nActiveActions,n=this.time+=e,r=Math.sign(e),s=this._accuIndex^=1;for(let a=0;a!==i;++a){let o=t[a];o._update(n,e,r,s)}let l=this._bindings,h=this._nActiveBindings;for(let u=0;u!==h;++u)l[u].apply(s);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){let t=this._actions,i=e.uuid,n=this._actionsByClip,r=n[i];if(void 0!==r){let s=r.knownActions;for(let a=0,o=s.length;a!==o;++a){let l=s[a];this._deactivateAction(l);let h=l._cacheIndex,u=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,u._cacheIndex=h,t[h]=u,t.pop(),this._removeInactiveBindingsForAction(l)}delete n[i]}}uncacheRoot(e){let t=e.uuid,i=this._actionsByClip;for(let n in i){let r=i[n].actionByRoot,s=r[t];void 0!==s&&(this._deactivateAction(s),this._removeInactiveAction(s))}let a=this._bindingsByRootAndName,o=a[t];if(void 0!==o)for(let l in o){let h=o[l];h.restoreOriginalState(),this._removeInactiveBinding(h)}}uncacheAction(e,t){let i=this.existingAction(e,t);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}},e.AnimationObjectGroup=class e{constructor(){this.isAnimationObjectGroup=!0,this.uuid=u(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;let e={};this._indicesByUUID=e;for(let t=0,i=arguments.length;t!==i;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={},this.stats={objects:{get total(){return this._objects.length},get inUse(){return this.total-this.nCachedObjects_}},get bindingsPerObject(){return this._bindings.length}}}add(){let e=this._objects,t=this._indicesByUUID,i=this._paths,n=this._parsedPaths,r=this._bindings,s=r.length,a,o=e.length,l=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){let c=arguments[h],d=c.uuid,p=t[d];if(void 0===p){p=o++,t[d]=p,e.push(c);for(let f=0,m=s;f!==m;++f)r[f].push(new o4(c,i[f],n[f]))}else if(p<l){a=e[p];let $=--l,g=e[$];t[g.uuid]=p,e[p]=g,t[d]=$,e[$]=c;for(let v=0,x=s;v!==x;++v){let y=r[v],S=y[$],_=y[p];y[p]=S,void 0===_&&(_=new o4(c,i[v],n[v])),y[$]=_}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){let e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length,r=this.nCachedObjects_;for(let s=0,a=arguments.length;s!==a;++s){let o=arguments[s],l=o.uuid,h=t[l];if(void 0!==h&&h>=r){let u=r++,c=e[u];t[c.uuid]=h,e[h]=c,t[l]=u,e[u]=o;for(let d=0,p=n;d!==p;++d){let f=i[d],m=f[u],$=f[h];f[h]=m,f[u]=$}}}this.nCachedObjects_=r}uncache(){let e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length,r=this.nCachedObjects_,s=e.length;for(let a=0,o=arguments.length;a!==o;++a){let l=arguments[a],h=l.uuid,u=t[h];if(void 0!==u){if(delete t[h],u<r){let c=--r,d=e[c],p=--s,f=e[p];t[d.uuid]=u,e[u]=d,t[f.uuid]=c,e[c]=f,e.pop();for(let m=0,$=n;m!==$;++m){let g=i[m],v=g[c],x=g[p];g[u]=v,g[c]=x,g.pop()}}else{let y=--s,S=e[y];y>0&&(t[S.uuid]=u),e[u]=S,e.pop();for(let _=0,b=n;_!==b;++_){let M=i[_];M[u]=M[y],M.pop()}}}}this.nCachedObjects_=r}subscribe_(e,t){let i=this._bindingsIndicesByPath,n=i[e],r=this._bindings;if(void 0!==n)return r[n];let s=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,h=this.nCachedObjects_,u=Array(l);n=r.length,i[e]=n,s.push(e),a.push(t),r.push(u);for(let c=h,d=o.length;c!==d;++c){let p=o[c];u[c]=new o4(p,e,t)}return u}unsubscribe_(e){let t=this._bindingsIndicesByPath,i=t[e];if(void 0!==i){let n=this._paths,r=this._parsedPaths,s=this._bindings,a=s.length-1,o=s[a],l=e[a];t[l]=i,s[i]=o,s.pop(),r[i]=r[a],r.pop(),n[i]=n[a],n.pop()}}},e.AnimationUtils={arraySlice:aD,convertArray:aN,isTypedArray:aF,getKeyframeOrder:aO,sortedArray:aB,flattenJSON:az,subclip:function e(t,i,n,r,s=30){let a=t.clone();a.name=i;let o=[];for(let l=0;l<a.tracks.length;++l){let h=a.tracks[l],u=h.getValueSize(),c=[],d=[];for(let p=0;p<h.times.length;++p){let f=h.times[p]*s;if(!(f<n)&&!(f>=r)){c.push(h.times[p]);for(let m=0;m<u;++m)d.push(h.values[p*u+m])}}0!==c.length&&(h.times=aN(c,h.times.constructor),h.values=aN(d,h.values.constructor),o.push(h))}a.tracks=o;let $=1/0;for(let g=0;g<a.tracks.length;++g)$>a.tracks[g].times[0]&&($=a.tracks[g].times[0]);for(let v=0;v<a.tracks.length;++v)a.tracks[v].shift(-1*$);return a.resetDuration(),a},makeClipAdditive:function e(t,i=0,n=t,r=30){r<=0&&(r=30);let s=n.tracks.length,a=i/r;for(let o=0;o<s;++o){let l=n.tracks[o],h=l.ValueTypeName;if("bool"===h||"string"===h)continue;let u=t.tracks.find(function(e){return e.name===l.name&&e.ValueTypeName===h});if(void 0===u)continue;let c=0,d=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=d/3);let p=0,f=u.getValueSize();u.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=f/3);let m=l.times.length-1,$;if(a<=l.times[0]){let g=c,v=d-c;$=aD(l.values,g,v)}else if(a>=l.times[m]){let x=m*d+c,y=x+d-c;$=aD(l.values,x,y)}else{let S=l.createInterpolant(),_=c,b=d-c;S.evaluate(a),$=aD(S.resultBuffer,_,b)}if("quaternion"===h){let M=new q().fromArray($).normalize().conjugate();M.toArray($)}let E=u.times.length;for(let T=0;T<E;++T){let w=T*f+p;if("quaternion"===h)q.multiplyQuaternionsFlat(u.values,w,$,0,u.values,w);else{let A=f-2*p;for(let R=0;R<A;++R)u.values[w+R]-=$[R]}}}return t.blendMode=2501,t}},e.ArcCurve=s$,e.ArrayCamera=rt,e.ArrowHelper=class e extends eW{constructor(e=new Y(0,0,1),t=new Y(0,0,0),i=1,n=16776960,r=.2*i,s=.2*r){super(),this.type="ArrowHelper",void 0===lp&&((lp=new tb).setAttribute("position",new t$([0,0,0,0,1,0],3)),(lf=new sF(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(t),this.line=new st(lp,new rZ({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new tB(lf,new to({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,r,s)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{ld.set(e.z,0,-e.x).normalize();let t=Math.acos(e.y);this.quaternion.setFromAxisAngle(ld,t)}}setLength(e,t=.2*e,i=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}},e.Audio=oI,e.AudioAnalyser=class e{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0,t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}},e.AudioContext=oE,e.AudioListener=class e extends eW{constructor(){super(),this.type="AudioListener",this.context=oE.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new oR}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);let t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(oL,o0,oP),o1.set(0,0,-1).applyQuaternion(o0),t.positionX){let n=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(oL.x,n),t.positionY.linearRampToValueAtTime(oL.y,n),t.positionZ.linearRampToValueAtTime(oL.z,n),t.forwardX.linearRampToValueAtTime(o1.x,n),t.forwardY.linearRampToValueAtTime(o1.y,n),t.forwardZ.linearRampToValueAtTime(o1.z,n),t.upX.linearRampToValueAtTime(i.x,n),t.upY.linearRampToValueAtTime(i.y,n),t.upZ.linearRampToValueAtTime(i.z,n)}else t.setPosition(oL.x,oL.y,oL.z),t.setOrientation(o1.x,o1.y,o1.z,i.x,i.y,i.z)}},e.AudioLoader=class e extends aK{constructor(e){super(e)}load(e,t,i,n){let r=this,s=new oe(this.manager);function a(t){n?n(t):console.error(t),r.manager.itemError(e)}s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(e){try{let i=e.slice(0),n=oE.getContext();n.decodeAudioData(i,function(e){t(e)},a)}catch(r){a(r)}},i,n)}},e.AxesHelper=class e extends sr{constructor(e=1){let t=new tb;t.setAttribute("position",new t$([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],3)),t.setAttribute("color",new t$([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));let i=new rZ({vertexColors:!0,toneMapped:!1});super(t,i),this.type="AxesHelper"}setColors(e,t,i){let n=new ts,r=this.geometry.attributes.color.array;return n.set(e),n.toArray(r,0),n.toArray(r,3),n.set(t),n.toArray(r,6),n.toArray(r,9),n.set(i),n.toArray(r,12),n.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}},e.BackSide=1,e.BasicDepthPacking=3200,e.BasicShadowMap=0,e.Bone=rH,e.BooleanKeyframeTrack=a3,e.Box2=class e{constructor(e=new S(Infinity,Infinity),t=new S(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let i=oZ.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=Infinity,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,oZ).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},e.Box3=K,e.Box3Helper=class e extends sr{constructor(e,t=16776960){let i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new tb;n.setIndex(new tp(i,1)),n.setAttribute("position",new t$([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(n,new rZ({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){let t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}},e.BoxBufferGeometry=class e extends tG{constructor(e,t,i,n,r,s){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(e,t,i,n,r,s)}},e.BoxGeometry=tG,e.BoxHelper=class e extends sr{constructor(e,t=16776960){let i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new tb;r.setIndex(new tp(i,1)),r.setAttribute("position",new tp(n,3)),super(r,new rZ({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&lc.setFromObject(this.object),lc.isEmpty())return;let t=lc.min,i=lc.max,n=this.geometry.attributes.position,r=n.array;r[0]=i.x,r[1]=i.y,r[2]=i.z,r[3]=t.x,r[4]=i.y,r[5]=i.z,r[6]=t.x,r[7]=t.y,r[8]=i.z,r[9]=i.x,r[10]=t.y,r[11]=i.z,r[12]=i.x,r[13]=i.y,r[14]=t.z,r[15]=t.x,r[16]=i.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=i.x,r[22]=t.y,r[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}},e.BufferAttribute=tp,e.BufferGeometry=tb,e.BufferGeometryLoader=oy,e.ByteType=1010,e.Cache=aY,e.Camera=tW,e.CameraHelper=class e extends sr{constructor(e){let t=new tb,i=new rZ({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],r=[],s={};function a(e,t){o(e),o(t)}function o(e){n.push(0,0,0),r.push(0,0,0),void 0===s[e]&&(s[e]=[]),s[e].push(n.length/3-1)}a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4"),t.setAttribute("position",new t$(n,3)),t.setAttribute("color",new t$(r,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update();let l=new ts(16755200),h=new ts(16711680),u=new ts(43775),c=new ts(16777215),d=new ts(3355443);this.setColors(l,h,u,c,d)}setColors(e,t,i,n,r){let s=this.geometry,a=s.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,i.r,i.g,i.b),a.setXYZ(33,i.r,i.g,i.b),a.setXYZ(34,i.r,i.g,i.b),a.setXYZ(35,i.r,i.g,i.b),a.setXYZ(36,i.r,i.g,i.b),a.setXYZ(37,i.r,i.g,i.b),a.setXYZ(38,n.r,n.g,n.b),a.setXYZ(39,n.r,n.g,n.b),a.setXYZ(40,r.r,r.g,r.b),a.setXYZ(41,r.r,r.g,r.b),a.setXYZ(42,r.r,r.g,r.b),a.setXYZ(43,r.r,r.g,r.b),a.setXYZ(44,r.r,r.g,r.b),a.setXYZ(45,r.r,r.g,r.b),a.setXYZ(46,r.r,r.g,r.b),a.setXYZ(47,r.r,r.g,r.b),a.setXYZ(48,r.r,r.g,r.b),a.setXYZ(49,r.r,r.g,r.b),a.needsUpdate=!0}update(){let e=this.geometry,t=this.pointMap;lh.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),lu("c",t,e,lh,0,0,-1),lu("t",t,e,lh,0,0,1),lu("n1",t,e,lh,-1,-1,-1),lu("n2",t,e,lh,1,-1,-1),lu("n3",t,e,lh,-1,1,-1),lu("n4",t,e,lh,1,1,-1),lu("f1",t,e,lh,-1,-1,1),lu("f2",t,e,lh,1,-1,1),lu("f3",t,e,lh,-1,1,1),lu("f4",t,e,lh,1,1,1),lu("u1",t,e,lh,.7,1.1,-1),lu("u2",t,e,lh,-.7,1.1,-1),lu("u3",t,e,lh,0,2,-1),lu("cf1",t,e,lh,-1,0,1),lu("cf2",t,e,lh,1,0,1),lu("cf3",t,e,lh,0,-1,1),lu("cf4",t,e,lh,0,1,1),lu("cn1",t,e,lh,-1,0,-1),lu("cn2",t,e,lh,1,0,-1),lu("cn3",t,e,lh,0,-1,-1),lu("cn4",t,e,lh,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}},e.CanvasTexture=class e extends k{constructor(e,t,i,n,r,s,a,o,l){super(e,t,i,n,r,s,a,o,l),this.isCanvasTexture=!0,this.needsUpdate=!0}},e.CapsuleBufferGeometry=class e extends sD{constructor(e,t,i,n){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(e,t,i,n)}},e.CapsuleGeometry=sD,e.CatmullRomCurve3=sS,e.CineonToneMapping=3,e.CircleBufferGeometry=class e extends sN{constructor(e,t,i,n){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(e,t,i,n)}},e.CircleGeometry=sN,e.ClampToEdgeWrapping=1001,e.Clock=oR,e.Color=ts,e.ColorKeyframeTrack=aW,e.ColorManagement=N,e.CompressedArrayTexture=class e extends sp{constructor(e,t,i,n,r,s){super(e,t,i,r,s),this.isCompressedArrayTexture=!0,this.image.depth=n,this.wrapR=1001}},e.CompressedTexture=sp,e.CompressedTextureLoader=class e extends aK{constructor(e){super(e)}load(e,t,i,n){let r=this,s=[],a=new sp,o=new oe(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(r.withCredentials);let l=0;function h(h){o.load(e[h],function(e){let i=r.parse(e,!0);s[h]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},6===(l+=1)&&(1===i.mipmapCount&&(a.minFilter=1006),a.image=s,a.format=i.format,a.needsUpdate=!0,t&&t(a))},i,n)}if(Array.isArray(e))for(let u=0,c=e.length;u<c;++u)h(u);else o.load(e,function(e){let i=r.parse(e,!0);if(i.isCubemap){let n=i.mipmaps.length/i.mipmapCount;for(let o=0;o<n;o++){s[o]={mipmaps:[]};for(let l=0;l<i.mipmapCount;l++)s[o].mipmaps.push(i.mipmaps[o*i.mipmapCount+l]),s[o].format=i.format,s[o].width=i.width,s[o].height=i.height}a.image=s}else a.image.width=i.width,a.image.height=i.height,a.mipmaps=i.mipmaps;1===i.mipmapCount&&(a.minFilter=1006),a.format=i.format,a.needsUpdate=!0,t&&t(a)},i,n);return a}},e.ConeBufferGeometry=class e extends sO{constructor(e,t,i,n,r,s,a){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(e,t,i,n,r,s,a)}},e.ConeGeometry=sO,e.CubeCamera=t4,e.CubeReflectionMapping=301,e.CubeRefractionMapping=302,e.CubeTexture=tX,e.CubeTextureLoader=class e extends aK{constructor(e){super(e)}load(e,i,n,r){let s=new tX;s.colorSpace=t;let a=new ot(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function l(t){a.load(e[t],function(e){s.images[t]=e,6==++o&&(s.needsUpdate=!0,i&&i(s))},void 0,r)}for(let h=0;h<e.length;++h)l(h);return s}},e.CubeUVReflectionMapping=306,e.CubicBezierCurve=sT,e.CubicBezierCurve3=sw,e.CubicInterpolant=aH,e.CullFaceBack=1,e.CullFaceFront=2,e.CullFaceFrontBack=3,e.CullFaceNone=0,e.Curve=sf,e.CurvePath=s1,e.CustomBlending=5,e.CustomToneMapping=5,e.CylinderBufferGeometry=class e extends sF{constructor(e,t,i,n,r,s,a,o){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(e,t,i,n,r,s,a,o)}},e.CylinderGeometry=sF,e.Cylindrical=class e{constructor(e=1,t=0,i=0){return this.radius=e,this.theta=t,this.y=i,this}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}clone(){return new this.constructor().copy(this)}},e.Data3DTexture=j,e.DataArrayTexture=X,e.DataTexture=r2,e.DataTextureLoader=class e extends aK{constructor(e){super(e)}load(e,t,i,n){let r=this,s=new r2,a=new oe(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(e,function(e){let i=r.parse(e);i&&(void 0!==i.image?s.image=i.image:void 0!==i.data&&(s.image.width=i.width,s.image.height=i.height,s.image.data=i.data),s.wrapS=void 0!==i.wrapS?i.wrapS:1001,s.wrapT=void 0!==i.wrapT?i.wrapT:1001,s.magFilter=void 0!==i.magFilter?i.magFilter:1006,s.minFilter=void 0!==i.minFilter?i.minFilter:1006,s.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.colorSpace?s.colorSpace=i.colorSpace:void 0!==i.encoding&&(s.encoding=i.encoding),void 0!==i.flipY&&(s.flipY=i.flipY),void 0!==i.format&&(s.format=i.format),void 0!==i.type&&(s.type=i.type),void 0!==i.mipmaps&&(s.mipmaps=i.mipmaps,s.minFilter=1008),1===i.mipmapCount&&(s.minFilter=1006),void 0!==i.generateMipmaps&&(s.generateMipmaps=i.generateMipmaps),s.needsUpdate=!0,t&&t(s,i))},i,n),s}},e.DataUtils={toHalfFloat:th,fromHalfFloat:tu},e.DecrementStencilOp=7683,e.DecrementWrapStencilOp=34056,e.DefaultLoadingManager=aJ,e.DepthFormat=1026,e.DepthStencilFormat=1027,e.DepthTexture=rs,e.DirectionalLight=op,e.DirectionalLightHelper=class e extends eW{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="DirectionalLightHelper",void 0===t&&(t=1);let n=new tb;n.setAttribute("position",new t$([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));let r=new rZ({fog:!1,toneMapped:!1});this.lightPlane=new st(n,r),this.add(this.lightPlane),(n=new tb).setAttribute("position",new t$([0,0,0,0,0,1],3)),this.targetLine=new st(n,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),ls.setFromMatrixPosition(this.light.matrixWorld),la.setFromMatrixPosition(this.light.target.matrixWorld),lo.subVectors(la,ls),this.lightPlane.lookAt(la),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(la),this.targetLine.scale.z=lo.length()}},e.DiscreteInterpolant=ak,e.DisplayP3ColorSpace=n,e.DodecahedronBufferGeometry=class e extends sz{constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(e,t)}},e.DodecahedronGeometry=sz,e.DoubleSide=2,e.DstAlphaFactor=206,e.DstColorFactor=208,e.DynamicCopyUsage=35050,e.DynamicDrawUsage=35048,e.DynamicReadUsage=35049,e.EdgesGeometry=sV,e.EllipseCurve=sm,e.EqualCompare=514,e.EqualDepth=4,e.EqualStencilFunc=514,e.EquirectangularReflectionMapping=303,e.EquirectangularRefractionMapping=304,e.Euler=e1,e.EventDispatcher=s,e.ExtrudeBufferGeometry=class e extends af{constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(e,t)}},e.ExtrudeGeometry=af,e.FileLoader=oe,e.Float16BufferAttribute=class e extends tp{constructor(e,t,i){super(new Uint16Array(e),t,i),this.isFloat16BufferAttribute=!0}getX(e){let t=tu(this.array[e*this.itemSize]);return this.normalized&&(t=x(t,this.array)),t}setX(e,t){return this.normalized&&(t=y(t,this.array)),this.array[e*this.itemSize]=th(t),this}getY(e){let t=tu(this.array[e*this.itemSize+1]);return this.normalized&&(t=x(t,this.array)),t}setY(e,t){return this.normalized&&(t=y(t,this.array)),this.array[e*this.itemSize+1]=th(t),this}getZ(e){let t=tu(this.array[e*this.itemSize+2]);return this.normalized&&(t=x(t,this.array)),t}setZ(e,t){return this.normalized&&(t=y(t,this.array)),this.array[e*this.itemSize+2]=th(t),this}getW(e){let t=tu(this.array[e*this.itemSize+3]);return this.normalized&&(t=x(t,this.array)),t}setW(e,t){return this.normalized&&(t=y(t,this.array)),this.array[e*this.itemSize+3]=th(t),this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=y(t,this.array),i=y(i,this.array)),this.array[e+0]=th(t),this.array[e+1]=th(i),this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=y(t,this.array),i=y(i,this.array),n=y(n,this.array)),this.array[e+0]=th(t),this.array[e+1]=th(i),this.array[e+2]=th(n),this}setXYZW(e,t,i,n,r){return e*=this.itemSize,this.normalized&&(t=y(t,this.array),i=y(i,this.array),n=y(n,this.array),r=y(r,this.array)),this.array[e+0]=th(t),this.array[e+1]=th(i),this.array[e+2]=th(n),this.array[e+3]=th(r),this}},e.Float32BufferAttribute=t$,e.Float64BufferAttribute=class e extends tp{constructor(e,t,i){super(new Float64Array(e),t,i)}},e.FloatType=1015,e.Fog=rc,e.FogExp2=ru,e.FramebufferTexture=class e extends k{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=1003,this.minFilter=1003,this.generateMipmaps=!1,this.needsUpdate=!0}},e.FrontSide=0,e.Frustum=tK,e.GLBufferAttribute=class e{constructor(e,t,i,n,r){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=i,this.elementSize=n,this.count=r,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}},e.GLSL1="100",e.GLSL3=r,e.GreaterCompare=516,e.GreaterDepth=6,e.GreaterEqualCompare=518,e.GreaterEqualDepth=5,e.GreaterEqualStencilFunc=518,e.GreaterStencilFunc=516,e.GridHelper=class e extends sr{constructor(e=10,t=10,i=4473924,n=8947848){i=new ts(i),n=new ts(n);let r=t/2,s=e/t,a=e/2,o=[],l=[];for(let h=0,u=0,c=-a;h<=t;h++,c+=s){o.push(-a,0,c,a,0,c),o.push(c,0,-a,c,0,a);let d=h===r?i:n;d.toArray(l,u),u+=3,d.toArray(l,u),u+=3,d.toArray(l,u),u+=3,d.toArray(l,u),u+=3}let p=new tb;p.setAttribute("position",new t$(o,3)),p.setAttribute("color",new t$(l,3));let f=new rZ({vertexColors:!0,toneMapped:!1});super(p,f),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}},e.Group=ri,e.HalfFloatType=1016,e.HemisphereLight=on,e.HemisphereLightHelper=class e extends eW{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="HemisphereLightHelper";let n=new ag(t);n.rotateY(.5*Math.PI),this.material=new to({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);let r=n.getAttribute("position"),s=new Float32Array(3*r.count);n.setAttribute("color",new tp(s,3)),this.add(new tB(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){let e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{let t=e.geometry.getAttribute("color");ln.copy(this.light.color),lr.copy(this.light.groundColor);for(let i=0,n=t.count;i<n;i++){let r=i<n/2?ln:lr;t.setXYZ(i,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(li.setFromMatrixPosition(this.light.matrixWorld).negate())}},e.HemisphereLightProbe=class e extends og{constructor(e,t,i=1){super(void 0,i),this.isHemisphereLightProbe=!0;let n=new ts().set(e),r=new ts().set(t),s=new Y(n.r,n.g,n.b),a=new Y(r.r,r.g,r.b),o=Math.sqrt(Math.PI);this.sh.coefficients[0].copy(s).add(a).multiplyScalar(o),this.sh.coefficients[1].copy(s).sub(a).multiplyScalar(o*Math.sqrt(.75))}},e.IcosahedronBufferGeometry=class e extends a${constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(e,t)}},e.IcosahedronGeometry=a$,e.ImageBitmapLoader=class e extends aK{constructor(e){super(e),this.isImageBitmapLoader=!0,"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,i,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=this,s=aY.get(e);if(void 0!==s)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;let a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(i){aY.add(e,i),t&&t(i),r.manager.itemEnd(e)}).catch(function(t){n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}},e.ImageLoader=ot,e.ImageUtils=O,e.IncrementStencilOp=7682,e.IncrementWrapStencilOp=34055,e.InstancedBufferAttribute=rW,e.InstancedBufferGeometry=ox,e.InstancedInterleavedBuffer=class e extends rp{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){let t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){let t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}},e.InstancedMesh=rY,e.Int16BufferAttribute=class e extends tp{constructor(e,t,i){super(new Int16Array(e),t,i)}},e.Int32BufferAttribute=class e extends tp{constructor(e,t,i){super(new Int32Array(e),t,i)}},e.Int8BufferAttribute=class e extends tp{constructor(e,t,i){super(new Int8Array(e),t,i)}},e.IntType=1013,e.InterleavedBuffer=rp,e.InterleavedBufferAttribute=rm,e.Interpolant=aG,e.InterpolateDiscrete=2300,e.InterpolateLinear=2301,e.InterpolateSmooth=2302,e.InvertStencilOp=5386,e.KeepStencilOp=7680,e.KeyframeTrack=aV,e.LOD=rP,e.LatheBufferGeometry=class e extends sU{constructor(e,t,i,n){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(e,t,i,n)}},e.LatheGeometry=sU,e.Layers=eI,e.LessCompare=513,e.LessDepth=2,e.LessEqualCompare=515,e.LessEqualDepth=3,e.LessEqualStencilFunc=515,e.LessStencilFunc=513,e.Light=oi,e.LightProbe=og,e.Line=st,e.Line3=class e{constructor(e=new Y,t=new Y){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){oJ.subVectors(e,this.start),oK.subVectors(this.end,this.start);let i=oK.dot(oK),n=oK.dot(oJ),r=n/i;return t&&(r=c(r,0,1)),r}closestPointToPoint(e,t,i){let n=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}},e.LineBasicMaterial=rZ,e.LineCurve=sA,e.LineCurve3=sR,e.LineDashedMaterial=aU,e.LineLoop=ss,e.LineSegments=sr,e.LinearEncoding=3e3,e.LinearFilter=1006,e.LinearInterpolant=a2,e.LinearMipMapLinearFilter=1008,e.LinearMipMapNearestFilter=1007,e.LinearMipmapLinearFilter=1008,e.LinearMipmapNearestFilter=1007,e.LinearSRGBColorSpace=i,e.LinearToneMapping=1,e.Loader=aK,e.LoaderUtils=o8,e.LoadingManager=aZ,e.LoopOnce=2200,e.LoopPingPong=2202,e.LoopRepeat=2201,e.LuminanceAlphaFormat=1025,e.LuminanceFormat=1024,e.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},e.Material=te,e.MaterialLoader=ov,e.MathUtils={DEG2RAD:l,RAD2DEG:h,generateUUID:u,clamp:c,euclideanModulo:d,mapLinear:function e(t,i,n,r,s){return r+(t-i)*(s-r)/(n-i)},inverseLerp:function e(t,i,n){return t!==i?(n-t)/(i-t):0},lerp:p,damp:function e(t,i,n,r){return p(t,i,1-Math.exp(-n*r))},pingpong:function e(t,i=1){return i-Math.abs(d(t,2*i)-i)},smoothstep:function e(t,i,n){return t<=i?0:t>=n?1:(t=(t-i)/(n-i))*t*(3-2*t)},smootherstep:function e(t,i,n){return t<=i?0:t>=n?1:(t=(t-i)/(n-i))*t*t*(t*(6*t-15)+10)},randInt:function e(t,i){return t+Math.floor(Math.random()*(i-t+1))},randFloat:function e(t,i){return t+Math.random()*(i-t)},randFloatSpread:function e(t){return t*(.5-Math.random())},seededRandom:function e(t){void 0!==t&&(o=t);let i=o+=1831565813;return i=Math.imul(i^i>>>15,1|i),(((i^=i+Math.imul(i^i>>>7,61|i))^i>>>14)>>>0)/4294967296},degToRad:f,radToDeg:m,isPowerOfTwo:$,ceilPowerOfTwo:g,floorPowerOfTwo:v,setQuaternionFromProperEuler:function e(t,i,n,r,s){let a=Math.cos,o=Math.sin,l=a(n/2),h=o(n/2),u=a((i+r)/2),c=o((i+r)/2),d=a((i-r)/2),p=o((i-r)/2),f=a((r-i)/2),m=o((r-i)/2);switch(s){case"XYX":t.set(l*c,h*d,h*p,l*u);break;case"YZY":t.set(h*p,l*c,h*d,l*u);break;case"ZXZ":t.set(h*d,h*p,l*c,l*u);break;case"XZX":t.set(l*c,h*m,h*f,l*u);break;case"YXY":t.set(h*f,l*c,h*m,l*u);break;case"ZYZ":t.set(h*m,h*f,l*c,l*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}},normalize:y,denormalize:x},e.Matrix3=_,e.Matrix4=eM,e.MaxEquation=104,e.Mesh=tB,e.MeshBasicMaterial=to,e.MeshDepthMaterial=nZ,e.MeshDistanceMaterial=nJ,e.MeshLambertMaterial=a1,e.MeshMatcapMaterial=aI,e.MeshNormalMaterial=aP,e.MeshPhongMaterial=aL,e.MeshPhysicalMaterial=aC,e.MeshStandardMaterial=aR,e.MeshToonMaterial=a0,e.MinEquation=103,e.MirroredRepeatWrapping=1002,e.MixOperation=1,e.MultiplyBlending=4,e.MultiplyOperation=0,e.NearestFilter=1003,e.NearestMipMapLinearFilter=1005,e.NearestMipMapNearestFilter=1004,e.NearestMipmapLinearFilter=1005,e.NearestMipmapNearestFilter=1004,e.NeverCompare=512,e.NeverDepth=0,e.NeverStencilFunc=512,e.NoBlending=0,e.NoColorSpace="",e.NoToneMapping=0,e.NormalAnimationBlendMode=2500,e.NormalBlending=1,e.NotEqualCompare=517,e.NotEqualDepth=7,e.NotEqualStencilFunc=517,e.NumberKeyframeTrack=a6,e.Object3D=eW,e.ObjectLoader=class e extends aK{constructor(e){super(e)}load(e,t,i,n){let r=this,s=""===this.path?o8.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||s;let a=new oe(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(i){let s=null;try{s=JSON.parse(i)}catch(a){void 0!==n&&n(a),console.error("THREE:ObjectLoader: Can't parse "+e+".",a.message);return}let o=s.metadata;if(void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase()){void 0!==n&&n(Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(s,t)},i,n)}async loadAsync(e,t){let i=""===this.path?o8.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;let n=new oe(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials);let r=await n.loadAsync(e,t),s=JSON.parse(r),a=s.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())throw Error("THREE.ObjectLoader: Can't load "+e);return await this.parseAsync(s)}parse(e,t){let i=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,n),s=this.parseImages(e.images,function(){void 0!==t&&t(l)}),a=this.parseTextures(e.textures,s),o=this.parseMaterials(e.materials,a),l=this.parseObject(e.object,r,o,a,i),h=this.parseSkeletons(e.skeletons,l);if(this.bindSkeletons(l,h),void 0!==t){let u=!1;for(let c in s)if(s[c].data instanceof HTMLImageElement){u=!0;break}!1===u&&t(l)}return l}async parseAsync(e){let t=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),n=this.parseGeometries(e.geometries,i),r=await this.parseImagesAsync(e.images),s=this.parseTextures(e.textures,r),a=this.parseMaterials(e.materials,s),o=this.parseObject(e.object,n,a,s,t),l=this.parseSkeletons(e.skeletons,o);return this.bindSkeletons(o,l),o}parseShapes(e){let t={};if(void 0!==e)for(let i=0,n=e.length;i<n;i++){let r=new s3().fromJSON(e[i]);t[r.uuid]=r}return t}parseSkeletons(e,t){let i={},n={};if(t.traverse(function(e){e.isBone&&(n[e.uuid]=e)}),void 0!==e)for(let r=0,s=e.length;r<s;r++){let a=new r3().fromJSON(e[r],n);i[a.uuid]=a}return i}parseGeometries(e,t){let i={};if(void 0!==e){let n=new oy;for(let r=0,s=e.length;r<s;r++){let a,o=e[r];switch(o.type){case"BufferGeometry":case"InstancedBufferGeometry":a=n.parse(o);break;default:o.type in aT?a=aT[o.type].fromJSON(o,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${o.type}"`)}a.uuid=o.uuid,void 0!==o.name&&(a.name=o.name),void 0!==o.userData&&(a.userData=o.userData),i[o.uuid]=a}}return i}parseMaterials(e,t){let i={},n={};if(void 0!==e){let r=new ov;r.setTextures(t);for(let s=0,a=e.length;s<a;s++){let o=e[s];void 0===i[o.uuid]&&(i[o.uuid]=r.parse(o)),n[o.uuid]=i[o.uuid]}}return n}parseAnimations(e){let t={};if(void 0!==e)for(let i=0;i<e.length;i++){let n=e[i],r=aj.parse(n);t[r.uuid]=r}return t}parseImages(e,t){let i=this,n={},r;function s(e){if("string"==typeof e){var t;let n=e,s=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:i.resourcePath+n;return t=s,i.manager.itemStart(t),r.load(t,function(){i.manager.itemEnd(t)},void 0,function(){i.manager.itemError(t),i.manager.itemEnd(t)})}return e.data?{data:T(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){let a=new aZ(t);(r=new ot(a)).setCrossOrigin(this.crossOrigin);for(let o=0,l=e.length;o<l;o++){let h=e[o],u=h.url;if(Array.isArray(u)){let c=[];for(let d=0,p=u.length;d<p;d++){let f=u[d],m=s(f);null!==m&&(m instanceof HTMLImageElement?c.push(m):c.push(new r2(m.data,m.width,m.height)))}n[h.uuid]=new z(c)}else{let $=s(h.url);n[h.uuid]=new z($)}}}return n}async parseImagesAsync(e){let t=this,i={},n;async function r(e){if("string"==typeof e){let i=e,r=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(i)?i:t.resourcePath+i;return await n.loadAsync(r)}return e.data?{data:T(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){(n=new ot(this.manager)).setCrossOrigin(this.crossOrigin);for(let s=0,a=e.length;s<a;s++){let o=e[s],l=o.url;if(Array.isArray(l)){let h=[];for(let u=0,c=l.length;u<c;u++){let d=l[u],p=await r(d);null!==p&&(p instanceof HTMLImageElement?h.push(p):h.push(new r2(p.data,p.width,p.height)))}i[o.uuid]=new z(h)}else{let f=await r(o.url);i[o.uuid]=new z(f)}}}return i}parseTextures(e,t){function i(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}let n={};if(void 0!==e)for(let r=0,s=e.length;r<s;r++){let a=e[r];void 0===a.image&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),void 0===t[a.image]&&console.warn("THREE.ObjectLoader: Undefined image",a.image);let o=t[a.image],l=o.data,h;Array.isArray(l)?(h=new tX,6===l.length&&(h.needsUpdate=!0)):(h=l&&l.data?new r2:new k,l&&(h.needsUpdate=!0)),h.source=o,h.uuid=a.uuid,void 0!==a.name&&(h.name=a.name),void 0!==a.mapping&&(h.mapping=i(a.mapping,oS)),void 0!==a.channel&&(h.channel=a.channel),void 0!==a.offset&&h.offset.fromArray(a.offset),void 0!==a.repeat&&h.repeat.fromArray(a.repeat),void 0!==a.center&&h.center.fromArray(a.center),void 0!==a.rotation&&(h.rotation=a.rotation),void 0!==a.wrap&&(h.wrapS=i(a.wrap[0],o_),h.wrapT=i(a.wrap[1],o_)),void 0!==a.format&&(h.format=a.format),void 0!==a.internalFormat&&(h.internalFormat=a.internalFormat),void 0!==a.type&&(h.type=a.type),void 0!==a.colorSpace&&(h.colorSpace=a.colorSpace),void 0!==a.encoding&&(h.encoding=a.encoding),void 0!==a.minFilter&&(h.minFilter=i(a.minFilter,ob)),void 0!==a.magFilter&&(h.magFilter=i(a.magFilter,ob)),void 0!==a.anisotropy&&(h.anisotropy=a.anisotropy),void 0!==a.flipY&&(h.flipY=a.flipY),void 0!==a.generateMipmaps&&(h.generateMipmaps=a.generateMipmaps),void 0!==a.premultiplyAlpha&&(h.premultiplyAlpha=a.premultiplyAlpha),void 0!==a.unpackAlignment&&(h.unpackAlignment=a.unpackAlignment),void 0!==a.compareFunction&&(h.compareFunction=a.compareFunction),void 0!==a.userData&&(h.userData=a.userData),n[a.uuid]=h}return n}parseObject(e,t,i,n,r){let s;function a(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function o(e){if(void 0!==e){if(Array.isArray(e)){let t=[];for(let n=0,r=e.length;n<r;n++){let s=e[n];void 0===i[s]&&console.warn("THREE.ObjectLoader: Undefined material",s),t.push(i[s])}return t}return void 0===i[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),i[e]}}function l(e){return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),n[e]}let h,u;switch(e.type){case"Scene":s=new rd,void 0!==e.background&&(Number.isInteger(e.background)?s.background=new ts(e.background):s.background=l(e.background)),void 0!==e.environment&&(s.environment=l(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?s.fog=new rc(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(s.fog=new ru(e.fog.color,e.fog.density))),void 0!==e.backgroundBlurriness&&(s.backgroundBlurriness=e.backgroundBlurriness),void 0!==e.backgroundIntensity&&(s.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":s=new t6(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(s.focus=e.focus),void 0!==e.zoom&&(s.zoom=e.zoom),void 0!==e.filmGauge&&(s.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(s.filmOffset=e.filmOffset),void 0!==e.view&&(s.view=Object.assign({},e.view));break;case"OrthographicCamera":s=new id(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(s.zoom=e.zoom),void 0!==e.view&&(s.view=Object.assign({},e.view));break;case"AmbientLight":s=new of(e.color,e.intensity);break;case"DirectionalLight":s=new op(e.color,e.intensity);break;case"PointLight":s=new od(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":s=new om(e.color,e.intensity,e.width,e.height);break;case"SpotLight":s=new ol(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":s=new on(e.color,e.groundColor,e.intensity);break;case"LightProbe":s=new og().fromJSON(e);break;case"SkinnedMesh":h=a(e.geometry),u=o(e.material),s=new rG(h,u),void 0!==e.bindMode&&(s.bindMode=e.bindMode),void 0!==e.bindMatrix&&s.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(s.skeleton=e.skeleton);break;case"Mesh":h=a(e.geometry),u=o(e.material),s=new tB(h,u);break;case"InstancedMesh":h=a(e.geometry),u=o(e.material);let c=e.count,d=e.instanceMatrix,p=e.instanceColor;(s=new rY(h,u,c)).instanceMatrix=new rW(new Float32Array(d.array),16),void 0!==p&&(s.instanceColor=new rW(new Float32Array(p.array),p.itemSize));break;case"LOD":s=new rP;break;case"Line":s=new st(a(e.geometry),o(e.material));break;case"LineLoop":s=new ss(a(e.geometry),o(e.material));break;case"LineSegments":s=new sr(a(e.geometry),o(e.material));break;case"PointCloud":case"Points":s=new sc(a(e.geometry),o(e.material));break;case"Sprite":s=new rR(o(e.material));break;case"Group":s=new ri;break;case"Bone":s=new rH;break;default:s=new eW}if(s.uuid=e.uuid,void 0!==e.name&&(s.name=e.name),void 0!==e.matrix?(s.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(s.matrixAutoUpdate=e.matrixAutoUpdate),s.matrixAutoUpdate&&s.matrix.decompose(s.position,s.quaternion,s.scale)):(void 0!==e.position&&s.position.fromArray(e.position),void 0!==e.rotation&&s.rotation.fromArray(e.rotation),void 0!==e.quaternion&&s.quaternion.fromArray(e.quaternion),void 0!==e.scale&&s.scale.fromArray(e.scale)),void 0!==e.up&&s.up.fromArray(e.up),void 0!==e.castShadow&&(s.castShadow=e.castShadow),void 0!==e.receiveShadow&&(s.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(s.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(s.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(s.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&s.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(s.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(s.visible=e.visible),void 0!==e.frustumCulled&&(s.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(s.renderOrder=e.renderOrder),void 0!==e.userData&&(s.userData=e.userData),void 0!==e.layers&&(s.layers.mask=e.layers),void 0!==e.children){let f=e.children;for(let m=0;m<f.length;m++)s.add(this.parseObject(f[m],t,i,n,r))}if(void 0!==e.animations){let $=e.animations;for(let g=0;g<$.length;g++){let v=$[g];s.animations.push(r[v])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(s.autoUpdate=e.autoUpdate);let x=e.levels;for(let y=0;y<x.length;y++){let S=x[y],_=s.getObjectByProperty("uuid",S.object);void 0!==_&&s.addLevel(_,S.distance,S.hysteresis)}}return s}bindSkeletons(e,t){0!==Object.keys(t).length&&e.traverse(function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){let i=t[e.skeleton];void 0===i?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(i,e.bindMatrix)}})}},e.ObjectSpaceNormalMap=1,e.OctahedronBufferGeometry=class e extends ag{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(e,t)}},e.OctahedronGeometry=ag,e.OneFactor=201,e.OneMinusDstAlphaFactor=207,e.OneMinusDstColorFactor=209,e.OneMinusSrcAlphaFactor=205,e.OneMinusSrcColorFactor=203,e.OrthographicCamera=id,e.PCFShadowMap=1,e.PCFSoftShadowMap=2,e.PMREMGenerator=iy,e.Path=sI,e.PerspectiveCamera=t6,e.Plane=tY,e.PlaneBufferGeometry=class e extends ie{constructor(e,t,i,n){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(e,t,i,n)}},e.PlaneGeometry=ie,e.PlaneHelper=class e extends st{constructor(e,t=1,i=16776960){let n=i,r=new tb;r.setAttribute("position",new t$([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),r.computeBoundingSphere(),super(r,new rZ({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;let s=new tb;s.setAttribute("position",new t$([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),s.computeBoundingSphere(),this.add(new tB(s,new to({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}},e.PointLight=od,e.PointLightHelper=class e extends tB{constructor(e,t,i){let n=new ax(t,4,2),r=new to({wireframe:!0,fog:!1,toneMapped:!1});super(n,r),this.light=e,this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}},e.Points=sc,e.PointsMaterial=sa,e.PolarGridHelper=class e extends sr{constructor(e=10,t=16,i=8,n=64,r=4473924,s=8947848){r=new ts(r),s=new ts(s);let a=[],o=[];if(t>1)for(let l=0;l<t;l++){let h=l/t*(2*Math.PI),u=Math.sin(h)*e,c=Math.cos(h)*e;a.push(0,0,0),a.push(u,0,c);let d=1&l?r:s;o.push(d.r,d.g,d.b),o.push(d.r,d.g,d.b)}for(let p=0;p<i;p++){let f=1&p?r:s,m=e-e/i*p;for(let $=0;$<n;$++){let g=$/n*(2*Math.PI),v=Math.sin(g)*m,x=Math.cos(g)*m;a.push(v,0,x),o.push(f.r,f.g,f.b),v=Math.sin(g=($+1)/n*(2*Math.PI))*m,x=Math.cos(g)*m,a.push(v,0,x),o.push(f.r,f.g,f.b)}}let y=new tb;y.setAttribute("position",new t$(a,3)),y.setAttribute("color",new t$(o,3));let S=new rZ({vertexColors:!0,toneMapped:!1});super(y,S),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}},e.PolyhedronBufferGeometry=class e extends sB{constructor(e,t,i,n){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(e,t,i,n)}},e.PolyhedronGeometry=sB,e.PositionalAudio=class e extends oI{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(oU,oD,oN),oF.set(0,0,1).applyQuaternion(oD);let t=this.panner;if(t.positionX){let i=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(oU.x,i),t.positionY.linearRampToValueAtTime(oU.y,i),t.positionZ.linearRampToValueAtTime(oU.z,i),t.orientationX.linearRampToValueAtTime(oF.x,i),t.orientationY.linearRampToValueAtTime(oF.y,i),t.orientationZ.linearRampToValueAtTime(oF.z,i)}else t.setPosition(oU.x,oU.y,oU.z),t.setOrientation(oF.x,oF.y,oF.z)}},e.PropertyBinding=o4,e.PropertyMixer=oO,e.QuadraticBezierCurve=sC,e.QuadraticBezierCurve3=sL,e.Quaternion=q,e.QuaternionKeyframeTrack=aX,e.QuaternionLinearInterpolant=a4,e.RED_GREEN_RGTC2_Format=36285,e.RED_RGTC1_Format=36283,e.REVISION="153",e.RGBADepthPacking=3201,e.RGBAFormat=1023,e.RGBAIntegerFormat=1033,e.RGBA_ASTC_10x10_Format=37819,e.RGBA_ASTC_10x5_Format=37816,e.RGBA_ASTC_10x6_Format=37817,e.RGBA_ASTC_10x8_Format=37818,e.RGBA_ASTC_12x10_Format=37820,e.RGBA_ASTC_12x12_Format=37821,e.RGBA_ASTC_4x4_Format=37808,e.RGBA_ASTC_5x4_Format=37809,e.RGBA_ASTC_5x5_Format=37810,e.RGBA_ASTC_6x5_Format=37811,e.RGBA_ASTC_6x6_Format=37812,e.RGBA_ASTC_8x5_Format=37813,e.RGBA_ASTC_8x6_Format=37814,e.RGBA_ASTC_8x8_Format=37815,e.RGBA_BPTC_Format=36492,e.RGBA_ETC2_EAC_Format=37496,e.RGBA_PVRTC_2BPPV1_Format=35843,e.RGBA_PVRTC_4BPPV1_Format=35842,e.RGBA_S3TC_DXT1_Format=33777,e.RGBA_S3TC_DXT3_Format=33778,e.RGBA_S3TC_DXT5_Format=33779,e.RGB_ETC1_Format=36196,e.RGB_ETC2_Format=37492,e.RGB_PVRTC_2BPPV1_Format=35841,e.RGB_PVRTC_4BPPV1_Format=35840,e.RGB_S3TC_DXT1_Format=33776,e.RGFormat=1030,e.RGIntegerFormat=1031,e.RawShaderMaterial=aA,e.Ray=eb,e.Raycaster=class e{constructor(e,t,i=0,n=1/0){this.ray=new eb(e,t),this.near=i,this.far=n,this.camera=null,this.layers=new eI,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,i=[]){return oY(e,this,i,t),i.sort(oq),i}intersectObjects(e,t=!0,i=[]){for(let n=0,r=e.length;n<r;n++)oY(e[n],this,i,t);return i.sort(oq),i}},e.RectAreaLight=om,e.RedFormat=1028,e.RedIntegerFormat=1029,e.ReinhardToneMapping=2,e.RepeatWrapping=1e3,e.ReplaceStencilOp=7681,e.ReverseSubtractEquation=102,e.RingBufferGeometry=class e extends av{constructor(e,t,i,n,r,s){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(e,t,i,n,r,s)}},e.RingGeometry=av,e.SIGNED_RED_GREEN_RGTC2_Format=36286,e.SIGNED_RED_RGTC1_Format=36284,e.SRGBColorSpace=t,e.Scene=rd,e.ShaderChunk=it,e.ShaderLib=ir,e.ShaderMaterial=t3,e.ShadowMaterial=aw,e.Shape=s3,e.ShapeBufferGeometry=class e extends a8{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(e,t)}},e.ShapeGeometry=a8,e.ShapePath=class e{constructor(){this.type="ShapePath",this.color=new ts,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new sI,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,n){return this.currentPath.quadraticCurveTo(e,t,i,n),this}bezierCurveTo(e,t,i,n,r,s){return this.currentPath.bezierCurveTo(e,t,i,n,r,s),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(e,t){let i=t.length,n=!1;for(let r=i-1,s=0;s<i;r=s++){let a=t[r],o=t[s],l=o.x-a.x,h=o.y-a.y;if(Math.abs(h)>Number.EPSILON){if(h<0&&(a=t[s],l=-l,o=t[r],h=-h),e.y<a.y||e.y>o.y)continue;if(e.y===a.y){if(e.x===a.x)return!0}else{let u=h*(e.x-a.x)-l*(e.y-a.y);if(0===u)return!0;if(u<0)continue;n=!n}}else{if(e.y!==a.y)continue;if(o.x<=e.x&&e.x<=a.x||a.x<=e.x&&e.x<=o.x)return!0}}return n}let i=ac.isClockWise,n=this.subPaths;if(0===n.length)return[];let r,s,a,o=[];if(1===n.length)return s=n[0],(a=new s3).curves=s.curves,o.push(a),o;let l=!i(n[0].getPoints());l=e?!l:l;let h=[],u=[],c=[],d=0,p;u[d]=void 0,c[d]=[];for(let f=0,m=n.length;f<m;f++)r=i(p=(s=n[f]).getPoints()),(r=e?!r:r)?(!l&&u[d]&&d++,u[d]={s:new s3,p:p},u[d].s.curves=s.curves,l&&d++,c[d]=[]):c[d].push({h:s,p:p[0]});if(!u[0])return function e(t){let i=[];for(let n=0,r=t.length;n<r;n++){let s=t[n],a=new s3;a.curves=s.curves,i.push(a)}return i}(n);if(u.length>1){let $=!1,g=0;for(let v=0,x=u.length;v<x;v++)h[v]=[];for(let y=0,S=u.length;y<S;y++){let _=c[y];for(let b=0;b<_.length;b++){let M=_[b],E=!0;for(let T=0;T<u.length;T++)t(M.p,u[T].p)&&(y!==T&&g++,E?(E=!1,h[T].push(M)):$=!0);E&&h[y].push(M)}}g>0&&!1===$&&(c=h)}let w;for(let A=0,R=u.length;A<R;A++){a=u[A].s,o.push(a),w=c[A];for(let C=0,L=w.length;C<L;C++)a.holes.push(w[C].h)}return o}},e.ShapeUtils=ac,e.ShortType=1011,e.Skeleton=r3,e.SkeletonHelper=class e extends sr{constructor(e){let t=function e(t){let i=[];!0===t.isBone&&i.push(t);for(let n=0;n<t.children.length;n++)i.push.apply(i,e(t.children[n]));return i}(e),i=new tb,n=[],r=[],s=new ts(0,0,1),a=new ts(0,1,0);for(let o=0;o<t.length;o++){let l=t[o];l.parent&&l.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(s.r,s.g,s.b),r.push(a.r,a.g,a.b))}i.setAttribute("position",new t$(n,3)),i.setAttribute("color",new t$(r,3));let h=new rZ({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,h),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){let t=this.bones,i=this.geometry,n=i.getAttribute("position");lt.copy(this.root.matrixWorld).invert();for(let r=0,s=0;r<t.length;r++){let a=t[r];a.parent&&a.parent.isBone&&(le.multiplyMatrices(lt,a.matrixWorld),oQ.setFromMatrixPosition(le),n.setXYZ(s,oQ.x,oQ.y,oQ.z),le.multiplyMatrices(lt,a.parent.matrixWorld),oQ.setFromMatrixPosition(le),n.setXYZ(s+1,oQ.x,oQ.y,oQ.z),s+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}},e.SkinnedMesh=rG,e.Source=z,e.Sphere=e$,e.SphereBufferGeometry=class e extends ax{constructor(e,t,i,n,r,s,a){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(e,t,i,n,r,s,a)}},e.SphereGeometry=ax,e.Spherical=class e{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(c(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}},e.SphericalHarmonics3=o$,e.SplineCurve=s0,e.SpotLight=ol,e.SpotLightHelper=class e extends eW{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";let i=new tb,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let r=0,s=1;r<32;r++,s++){let a=r/32*Math.PI*2,o=s/32*Math.PI*2;n.push(Math.cos(a),Math.sin(a),1,Math.cos(o),Math.sin(o),1)}i.setAttribute("position",new t$(n,3));let l=new rZ({fog:!1,toneMapped:!1});this.cone=new sr(i,l),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);let e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),o9.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(o9),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}},e.Sprite=rR,e.SpriteMaterial=r$,e.SrcAlphaFactor=204,e.SrcAlphaSaturateFactor=210,e.SrcColorFactor=202,e.StaticCopyUsage=35046,e.StaticDrawUsage=35044,e.StaticReadUsage=35045,e.StereoCamera=class e{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new t6,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new t6,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){let t=this._cache,i=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;if(i){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,oA.copy(e.projectionMatrix);let n=t.eyeSep/2,r=n*t.near/t.focus,s=t.near*Math.tan(l*t.fov*.5)/t.zoom,a,o;ow.elements[12]=-n,oT.elements[12]=n,a=-s*t.aspect+r,o=s*t.aspect+r,oA.elements[0]=2*t.near/(o-a),oA.elements[8]=(o+a)/(o-a),this.cameraL.projectionMatrix.copy(oA),a=-s*t.aspect-r,o=s*t.aspect-r,oA.elements[0]=2*t.near/(o-a),oA.elements[8]=(o+a)/(o-a),this.cameraR.projectionMatrix.copy(oA)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(ow),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(oT)}},e.StreamCopyUsage=35042,e.StreamDrawUsage=35040,e.StreamReadUsage=35041,e.StringKeyframeTrack=a7,e.SubtractEquation=101,e.SubtractiveBlending=3,e.TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},e.TangentSpaceNormalMap=0,e.TetrahedronBufferGeometry=class e extends ay{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(e,t)}},e.TetrahedronGeometry=ay,e.Texture=k,e.TextureLoader=class e extends aK{constructor(e){super(e)}load(e,t,i,n){let r=new k,s=new ot(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,function(e){r.image=e,r.needsUpdate=!0,void 0!==t&&t(r)},i,n),r}},e.TorusBufferGeometry=class e extends aS{constructor(e,t,i,n,r){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(e,t,i,n,r)}},e.TorusGeometry=aS,e.TorusKnotBufferGeometry=class e extends a_{constructor(e,t,i,n,r,s){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(e,t,i,n,r,s)}},e.TorusKnotGeometry=a_,e.Triangle=e9,e.TriangleFanDrawMode=2,e.TriangleStripDrawMode=1,e.TrianglesDrawMode=0,e.TubeBufferGeometry=class e extends ab{constructor(e,t,i,n,r){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(e,t,i,n,r)}},e.TubeGeometry=ab,e.TwoPassDoubleSide=2,e.UVMapping=300,e.Uint16BufferAttribute=tf,e.Uint32BufferAttribute=tm,e.Uint8BufferAttribute=class e extends tp{constructor(e,t,i){super(new Uint8Array(e),t,i)}},e.Uint8ClampedBufferAttribute=class e extends tp{constructor(e,t,i){super(new Uint8ClampedArray(e),t,i)}},e.Uniform=o5,e.UniformsGroup=class e extends s{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:oj++}),this.name="",this.usage=35044,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){let t=this.uniforms.indexOf(e);return -1!==t&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;let t=e.uniforms;this.uniforms.length=0;for(let i=0,n=t.length;i<n;i++)this.uniforms.push(t[i].clone());return this}clone(){return new this.constructor().copy(this)}},e.UniformsLib=ii,e.UniformsUtils=tV,e.UnsignedByteType=1009,e.UnsignedInt248Type=1020,e.UnsignedIntType=1014,e.UnsignedShort4444Type=1017,e.UnsignedShort5551Type=1018,e.UnsignedShortType=1012,e.VSMShadowMap=3,e.Vector2=S,e.Vector3=Y,e.Vector4=V,e.VectorKeyframeTrack=a5,e.VideoTexture=class e extends k{constructor(e,t,i,n,r,s,a,o,l){super(e,t,i,n,r,s,a,o,l),this.isVideoTexture=!0,this.minFilter=void 0!==s?s:1006,this.magFilter=void 0!==r?r:1006,this.generateMipmaps=!1;let h=this;function u(){h.needsUpdate=!0,e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){let e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}},e.WebGL1Renderer=rh,e.WebGL3DRenderTarget=class e extends W{constructor(e=1,t=1,i=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=i,this.texture=new j(null,e,t,i),this.texture.isRenderTargetTexture=!0}},e.WebGLArrayRenderTarget=class e extends W{constructor(e=1,t=1,i=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=i,this.texture=new X(null,e,t,i),this.texture.isRenderTargetTexture=!0}},e.WebGLCoordinateSystem=2e3,e.WebGLCubeRenderTarget=t7,e.WebGLMultipleRenderTargets=class e extends W{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isWebGLMultipleRenderTargets=!0;let r=this.texture;this.texture=[];for(let s=0;s<i;s++)this.texture[s]=r.clone(),this.texture[s].isRenderTargetTexture=!0}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,r=this.texture.length;n<r;n++)this.texture[n].image.width=e,this.texture[n].image.height=t,this.texture[n].image.depth=i;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,i=e.texture.length;t<i;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}},e.WebGLRenderTarget=W,e.WebGLRenderer=rl,e.WebGLUtils=re,e.WebGPUCoordinateSystem=2001,e.WireframeGeometry=aM,e.WrapAroundEnding=2402,e.ZeroCurvatureEnding=2400,e.ZeroFactor=200,e.ZeroSlopeEnding=2401,e.ZeroStencilOp=0,e._SRGBAFormat=1035,e.sRGBEncoding=3001});